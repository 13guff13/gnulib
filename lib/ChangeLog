2006-09-12  Jim Meyering  <jim@meyering.net>

	* nanosleep.c: Include <sys/types.h> before sys/select.h, to avoid
	compilation failure (due to use of pid_t in latter) on NetBSD 1.6.
	Reported by Nelson H. F. Beebe.

2006-09-12  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-help.c (argp_doc): Make sure NULL is not passed to
	dgettext.

2006-09-10  Bruno Haible  <bruno@clisp.org>

	* mkdtemp.c: Include <stdint.h> always. Don't include <inttypes.h>.

2006-09-10  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-parse.c (__argp_parse) [!_LIBC]: Make sure
	program_invocation_name and program_invocation_short_name are
	initialized.
	* argp-namefrob.h: Move declarations of program_invocation_name
	and program_invocation_short_name to argp.h, so they are visible
	to user programs.
	* argp.h: Likewise

2006-09-09  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp.h (struct argp): Document the N_("..") "\v" N_("..")
	convention.  Text proposed by Bruno Haible.
	(struct argp_option): Document the use of N_() wrappers.

	* argp-help.c (argp_doc): Split the untranslated doc string on '\v',
	and translate the two parts separately, instead of feeding
	the whole string to gettext.  This allows to exclude
	'\v' from the strings visible to the translator by writing doc
	strings as N_("..") "\v" N_("..").

2006-09-08  Paul Eggert  <eggert@cs.ucla.edu>

	* mktime.c (guess_time_tm): Fix bug where mktime
	returned the maximum time_t value rather than (time_t) -1.
	Problem originally reported by William Bardwell
	<http://sourceware.org/bugzilla/show_bug.cgi?id=2821>.

	* isapipe.h (HAVE_FIFO_PIPES) [!defined HAVE_FIFO_PIPES]:
	Moved to here ...
	* isapipe.c (HAVE_FIFO_PIPES) [!defined HAVE_FIFO_PIPES]:
	... from here.

2006-09-06  Bruno Haible  <bruno@clisp.org>

	* striconv.h: New file.
	* striconv.c: New file, merging iconvme.c with GNU gettext's
	iconvstring.c.
	* xstriconv.h: New file.
	* xstriconv.c: New file.

2006-09-05  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* argz_.h: Sync from Libtool.

	2006-09-04  George Bosilca <bosilca@cs.utk.edu>
		and Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* libltdl/argz_.h: It's __cplusplus, not _cplusplus.

2006-09-05  Davide Angelocola <davide.angelocola@tiscali.it>

	* trim.h: New file.
	* trim.c: New file.

2006-09-01  Paul Eggert  <eggert@cs.ucla.edu>

	* getloadavg.c: Use CONFIGURING_GETLOADAVG, not gl_GETLOADAVG.
	Problem reported by Ralf Wildenhues in
	<http://lists.gnu.org/archive/html/bug-gnulib/2006-09/msg00000.html>.

	* mountlist.c: All uses of HAVE_F_FSTYPENAME_IN_STATFS replaced by
	HAVE_STRUCT_STATFS_F_FSTYPENAME.

2006-08-31  Paul Eggert  <eggert@cs.ucla.edu>

	* getloadavg.c [defined gl_GETLOADAVG]: Don't include config.h
	or stdbool.h, because they might not exist while configuring.

	* chdir-long.c: Include <fcntl.h>, for O_DIRECTORY.
	Don't include unistd.h or limits.h; not needed, since chdir-long.h
	does that for us.
	(O_DIRECTORY): Remove.

2006-08-30  Paul Eggert  <eggert@cs.ucla.edu>

	Work around a bug in both the Linux and SunOS 64-bit kernels:
	nanosleep mishandles sleeps for longer than 2**31 seconds.
	Problem reported by Frank v Waveren in
	<http://lists.gnu.org/archive/html/bug-coreutils/2006-08/msg00298.html>.
	* nanosleep.c (BILLION): New constant.
	(getnow) [HAVE_BUG_BIG_NANOSLEEP]: New functions.
	(rpl_nanosleep) [HAVE_BUG_BIG_NANOSLEEP]: Completely new implementation.

2006-08-30  Jim Meyering  <jim@meyering.net>

	* isapipe.c (isapipe): Rename local s/fd/fd_pair/ to avoid shadowing
	the parameter.

2006-08-29  Paul Eggert  <eggert@cs.ucla.edu>

	* isapipe.c, isapipe.h: New files.

2006-08-29  Eric Blake  <ebb9@byu.net>

	* error.c (error_at_line, print_errno_message): Match libc, after
	resolution of upstream bug 3044.

2006-08-29  Bruno Haible  <bruno@clisp.org>

	* localcharset.c: Include configmake.h in order to get LIBDIR defined.

2006-08-29  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	Sync from Libtool:

	2006-08-28  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* libltdl/argz.c: Use `#ifdef HAVE_CONFIG_H', to facilitate code
	sharing with gnulib.  Report by Eric Blake.

2006-08-28  Paul Eggert  <eggert@cs.ucla.edu>

	* fcntl_.h: New file.
	* chdir-safer.c (O_DIRECTORY, O_NOFOLLOW): Remove, now that we have
	the fcntl module.
	* dirchownmod.c: Likewise.
	* fts.c: Likewise.

	* inttypes_.h [defined _GL_JUST_INCLUDE_ABSOLUTE_INTTYPES_H]:
	Include @ABSOLUTE_INTTYPES_H@ if available, but do nothing else.
	* stdint_.h (_GL_JUST_INCLUDE_ABSOLUTE_INTTYPES_H): Define
	just before including <inttypes.h>, to avoid circular inclusion.

2006-08-28  Bruno Haible  <bruno@clisp.org>

	* inttypes_.h (SCNX*): Remove definitions.
	Reported by Eric Blake.

2006-08-26  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (EOVERFLOW): Remove definition.
	(VASNPRINTF): Return a string of length > INT_MAX without failing.
	* vasprintf.c: Include errno.h, limits.h.
	(EOVERFLOW): New fallback definition.
	(vasprintf): Test here whether the string length is > INT_MAX.
	* vsnprintf.c: Include errno.h, limits.h.
	(EOVERFLOW): New fallback definition.
	(vsnprintf): Fix bug when generated string was too long for the buffer.
	Test here whether the string length is > INT_MAX.

2006-08-26  Bruno Haible  <bruno@clisp.org>
	    Simon Josefsson  <jas@extundo.com>

	BeOS portability.
	* getaddrinfo.c (PF_INET, PF_UNSPEC): New macros.

2006-08-28  Bruno Haible  <bruno@clisp.org>

	* c-strstr.h: New file, from GNU gettext.
	* c-strstr.c: New file, from GNU gettext.

2006-08-26  Bruno Haible  <bruno@clisp.org>

	* inttypes_.h: New file.
	* inttypes.h: Remove file.
	* stdint_.h: Include <inttypes.h> through its absolute filename.

	* imaxabs.c: New file.

	* imaxdiv.c: New file.

2006-08-22  Bruno Haible  <bruno@clisp.org>

	* readutmp.h: Skip most definitions if neither <utmp.h> nor
	<utmpx.h> exists.

2006-08-21  Paul Eggert  <eggert@cs.ucla.edu>

	BeOS portability.
	* dirchownmod.c (dirchownmod): Don't use fchmod if it doesn't exist.
	Problem reported by Bruno Haible.

2006-08-21  Bruno Haible  <bruno@clisp.org>

	BeOS portability.
	* mbchar.h: Include <wctype.h> only if it exists.

2006-08-20  Paul Eggert  <eggert@cs.ucla.edu>

	* cycle-check.h: Include <stdint.h> unconditionally, since we
	now assume the stdint module.  Do not include inttypes.h.
	* fsusage.h: Likewise.
	* getndelim2.c: Likewise.
	* human.h: Likewise.
	* inttostr.h: Likewise.
	* obstack.c: Likewise.
	* regex_internal.h: Likewise.
	* tempname.c: Likewise.
	* utimecmp.c: Likewise.
	* xstrtol.h: Likewise.

	* stat_.h: Fix typo: HAVE_FUNC_LSTAT -> HAVE_LSTAT.

	* strtoimax.c: Adjust to macro name changes in Autoconf,
	e.g., HAVE_LONG_LONG -> HAVE_LONG_LONG_INT.
	* xtime.h: Likewise.

2006-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	* fchmodat.c: New file, from coreutils.  This was inadvertently
	omitted in the 2006-08-17 update.  Problem reported by Jay Youngman.

2006-08-18  Bruno Haible  <bruno@clisp.org>

	* mountlist.c [MOUNTED_GETMNTINFO2]: Include sys/statvfs.h.
	(ME_DUMMY): Treat "kernfs" as a dummy.
	(read_file_system_list) [MOUNTED_GETMNTINFO2]: Implement.

2006-08-17  Paul Eggert  <eggert@cs.ucla.edu>

	Update from coreutils.

	* __fpending.h: Add copyright notice.
	* fprintftime.h: Likewise.
	* savedir.c: Use (C) in copyright notice.
	* savedir.h: Likewise.

	2006-08-15  Jim Meyering  <jim@meyering.net>

	* at-func.c: New file, with the logic of all emulated at-functions.
	* openat-priv.h: Include <errno.h> and define ENOSYS,
	in support of the EXPECTED_ERRNO macro.
	* openat.c (fstatat, unlinkat, fchownat): Remove function definitions.
	Instead, define the appropriate symbols and include "at-func.c".
	* mkdirat.c (mkdirat): Likewise.
	* fchmodat.c (fchmodat): Likewise.
	(ENOSYS): Remove definition.
	* openat.c: Don't include <errno.h>, now that "openat-priv.h" does it.
	Don't include "unistd--.h" -- it wasn't ever used.

	2006-01-17  Jim Meyering  <jim@meyering.net>

	Rewrite fts.c not to change the current working directory,
	by using openat, fstatat, fdopendir, etc..

	* fts.c [! _LIBC]: Include "openat.h" and "unistd--.h".
	(HAVE_OPENAT_SUPPORT): Define.
	[_LIBC] (fchdir): Don't undef or define; no longer used.
	(FCHDIR): Define in terms of cwd_advance_fd rather than fchdir.
	Now, this `function' always succeeds, and consumes its file descriptor
	parameter -- so callers must not close such FDs.  Update callers.
	(diropen_fd, opendirat, cwd_advance_fd): New functions.
	(diropen): Add parameter, SP.  Adjust all callers.
	Implement using diropen_fd, rather than open.
	(fts_open): Initialize new member, fts_cwd_fd.
	Remove fts_rft-setting code.
	(fts_close): Close fts_cwd_fd, if necessary.
	(__opendir2): Define in terms of opendir or opendirat,
	depending on whether the FST_NOCHDIR flag is set.
	(fts_build): Since fts_safe_changedir consumes its FD, and since
	this code must do `closedir(dirp)', dup the dirfd(dirp) argument,
	and close the dup'd file descriptor upon failure.
	(fts_stat): Use fstatat(...AT_SYMLINK_NOFOLLOW) in place of lstat.
	(fts_safe_changedir): Tweak semantics to reflect that this function
	now calls cwd_advance_fd and hence consumes its FD argument.
	* fts_.h [struct FTS] (fts_cwd_fd): New member.
	[struct FTS] (fts_rft): Remove now-unused member.
	[struct FTS] (fts_cycle.state): Improve comment.

	* openat.c (openat_needs_fchdir): New function.
	* openat.h (openat_needs_fchdir): Declare it.

2006-08-16  Paul Eggert  <eggert@cs.ucla.edu>

	* memcoll.c (memcoll): Set errno = 0 in the shortcut case, too.
	Problem and fix reported by PÃ¡draig Brady in
	<http://lists.gnu.org/archive/html/bug-coreutils/2006-08/msg00099.html>.

2006-08-15  Paul Eggert  <eggert@cs.ucla.edu>

	* memcoll.c (memcoll): Optimize for the common case where the
	arguments are bytewise equal.

2006-08-14  Paul Eggert  <eggert@cs.ucla.edu>

	Change copyright notice from LGPL 2 to GPL 2, since that's the
	standard form used in the gnulib repository.
	* lock.c: LGPL -> GPL.
	* lock.h: Likewise.
	* strnlen1.c: Likewise.
	* strnlen1.h: Likewise.
	* tls.c: Likewise.
	* tls.h: Likewise.
	* tmpdir.c: Likewise.

	* TODO: Remove; this belongs only in coreutils.

2006-08-14  Eric Blake  <ebb9@byu.net>

	Import the following change from libc:

	2006-08-12  Ulrich Drepper  <drepper@redhat.com>

	Upstream bug 2997.
	* misc/error.c: Add space between program name and message if file
	name is missing.

2006-08-11  Paul Eggert  <eggert@cs.ucla.edu>

	* pipe-safer.c (pipe_safer): Fix misspelling: HAVE_FUNC_PIPE ->
	HAVE_PIPE.  Fix a file descriptor leak when fd_safer fails.

	* regex_internal.c (re_string_skip_chars): Don't assume WEOF fits
	in wchar_t.  Problem reported by Eric Blake.

	* snprintf.c (snprintf): memcpy LEN bytes, not SIZE - 1, when
	LEN is smaller than SIZE.  Suggested by Bruno Haible.
	Also, help the compiler to keep LEN in a register.

2006-08-10  Paul Eggert  <eggert@cs.ucla.edu>

	* .cppi-disable: Add snprintf.h, socket_.h.
	* snprintf.c: Include <errno.h> and <limits.h>.
	(EOVERFLOW): Define if the system does not.
	Do not include "minmax.h"; it wasn't used.
	(snprintf): Don't assume size_t promotes to an unsigned type.
	Fix bug when generated string was too long for the buffer: the
	buffer's contents are supposed to be the initial prefix of the
	output.  Don't assume vasnprintf returns EOVERFLOW if the size
	exceeds INT_MAX; do the check ourselves.

	Import the following changes from libc:

	2006-06-02  Jakub Jelinek  <jakub@redhat.com>

	* posix/regex_internal.c (re_string_skip_chars): If no character has
	been converted at all, set *last_wc to WEOF.  If mbrtowc failed, set wc
	to the byte which couldn't be converted.
	(re_string_reconstruct): Don't clear valid_raw_len before calling
	re_string_skip_chars.  If wc is WEOF after re_string_skip_chars, set
	tip_context using re_string_context_at.

	2006-05-02  Ulrich Drepper  <drepper@redhat.com>

	* posix/regex.h: g++ still cannot handled [restrict].

	2006-04-21  Ulrich Drepper  <drepper@redhat.com>

	* posix/regex.h: Remove special handling for VMS.

2006-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.

	2006-07-19  Mike Frysinger  <vapier@gentoo.org>

	* lib/mountlist.c [ME_REMOTE]: Filter out cifs.
	Reported by Toralf FÃ¶rster in <http://bugs.gentoo.org/141012>.

2006-08-08  Eric Blake  <ebb9@byu.net>

	* verror.c (verror_at_line): Work around glibc bug 2997, so that
	verror_at_line output complies with GNU Coding Standards even when
	file is NULL.

2006-08-08  Eric Blake  <ebb9@byu.net>

	* verror.h, verror.c: New files.

2006-08-07  Bruno Haible  <bruno@clisp.org>

	* allocsa.h (sa_alignof) [_AIX]: Also consider 'long long' in newer
	versions of AIX.
	Reported by Ralf Wildenhues.

2006-08-06  Eric Blake  <ebb9@byu.net>

	* error.h: Fold in some upstream changes from glibc.
	* error.c: Likewise.

2006-07-29  Bruno Haible  <bruno@clisp.org>

	* localcharset.c: Assume <stddef.h>, <stdlib.h>, <string.h> exist.

2006-07-29  Bruno Haible  <bruno@clisp.org>

	* setenv.c: Undo unintended modification done on 2006-02-27.

2006-07-28  Eric Blake  <ebb9@byu.net>

	* regex_internal.h (struct re_dfa_t) [!_LIBC]: Avoid invalid C89
	macro expansion.

2006-07-28  Simon Josefsson  <jas@extundo.com>

	* inet_ntop.h, inet_pton.h: No need to guard netinet/in.h
	#include's.

2006-07-28  Simon Josefsson  <jas@extundo.com>

	* inet_ntop.h, inet_pton.h: No need to guard arpa/inet.h
	#include's.

2006-07-28  Bruno Haible <bruno@clisp.org>

	* inet_ntop.h, inet_pton.h: Use #if HAVE* instead of #ifdef HAVE*.

2006-07-28  Yoann Vandoorselaere <yoann.v@prelude-ids.com>

	* inet_ntop.h, inet_pton.h: Need to include netinet/in.h before
	arpa/inet.h.

2006-07-28  Bruno Haible  <bruno@clisp.org>

	* mbchar.h (iswalnum, iswalpha, iswblank, iswcntrl, iswdigit, iswgraph,
	iswlower, iswprint, iswpunct, iswspace, iswupper, iswxdigit): Define
	fallbacks.
	Avoids link error on FreeBSD 4.x.
	Reported by Yoann Vandoorselaere <yoann.v@prelude-ids.com>.

	* wcwidth.h (iswprint): Assume an ASCII compatible wide character
	encoding.
	* mbswidth.c (iswcntrl): Likewise.

2006-07-28  Paul Eggert  <eggert@cs.ucla.edu>

	* modechange.c (mode_compile): Numeric modes now affect setuid and
	setgid on directories only if they set these bits.
	* modechange.h: Remove obsolete comment about masks.

2006-07-27  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (INT*_C, UINT*_C) [C++]: Define these if
	__STDC_CONSTANT_MACROS is defined, not if __STDC_LIMIT_MACROS is
	defined.

2006-07-26  Eric Blake  <ebb9@byu.net>

	* mkstemp-safer.c [! HAVE_MKSTEMP]: Add prototype for platforms
	like mingw that lack mkstemp.
	* pipe-safer.c (pipe_safer) [!HAVE_FUNC_PIPE]: Provide fallback to
	avoid compilation warning on mingw.

2006-07-25  Bruno Haible  <bruno@clisp.org>

	* version-etc.c (version_etc_va): Use va_copy, assumed to be defined in
	<stdarg.h> or config.h.

2006-07-24  Bruno Haible  <bruno@clisp.org>

	* clean-temp.h: New file, from GNU gettext.
	* clean-temp.c: New file, from GNU gettext.

2006-07-24  Bruno Haible  <bruno@clisp.org>

	* tmpdir.h: New file, from GNU gettext.
	* tmpdir.c: New file, from GNU gettext.

2006-07-23  Bruno Haible  <bruno@clisp.org>

	* gl_anylinked_list2.h (ASYNCSAFE): New macro.
	(gl_linked_add_first, gl_linked_add_last, gl_linked_add_before,
	gl_linked_add_after, gl_linked_add_at, gl_linked_remove_node,
	gl_linked_remove_at): Use it.

2006-07-23  Eric Blake  <ebb9@byu.net>

	* tmpfile-safer.c: New file.
	* stdio-safer.h (fopen_safer): Add prototype.
	* stdio--.h (tmpfile): Make safer.

2006-07-22  Paul Eggert  <eggert@cs.ucla.edu>

	* close-stream.c, close-stream.h: New files.

2006-07-22  Bruno Haible  <bruno@clisp.org>

	Merge from GNU gettext 0.15.

	2005-07-05  Bruno Haible  <bruno@clisp.org>

		* printf-args.c (printf_fetchargs): Work around broken
		definition of wint_t on mingw.

	2005-02-12  Bruno Haible  <bruno@clisp.org>

		* xallocsa.h: Add extern "C" for C++.

	2006-05-17  Bruno Haible  <bruno@clisp.org>

		Cygwin portability.
		* progreloc.c (WIN32_NATIVE): Renamed from WIN32.

	2006-04-30  Bruno Haible  <bruno@clisp.org>

		* progreloc.c: Include <mach-o/dyld.h> if available.
		(find_executable): Use _NSGetExecutablePath when possible.

	2006-05-06  Charles Wilson  <cygwin@cwilson.fastmail.fm>

		* progreloc.c (maybe_executable) [CYGWIN]: Use the access()
		function.

	2005-12-29  Bruno Haible  <bruno@clisp.org>

		* progreloc.c (set_program_name_and_installdir): Fix
		compilation error.

	2005-12-04  Bruno Haible  <bruno@clisp.org>

		Cygwin portability.
		* progreloc.c: Include <windows.h> also on Cygwin.
		(find_executable): Add support for Cygwin.
		(set_program_name_and_installdir): Handle also platforms with
		nonempty EXEEXT.

	2006-07-11  Bruno Haible  <bruno@clisp.org>

		* javacomp.c: Fix a comment.
		Reported by Jim Meyering.

	2006-04-30  Bruno Haible  <bruno@clisp.org>

		* javacomp.h (compile_java_class): Add source_version,
		target_version arguments.
		* javacomp.c: Rewritten to choose only a compiler that
		respects the specified source_version and target_version.

	2006-06-27  Bruno Haible  <bruno@clisp.org>

		Assume correct S_ISDIR macro.
		* mkdtemp.c: Remove test of STAT_MACROS_BROKEN.

	2006-07-22  Bruno Haible  <bruno@clisp.org>

		* javaversion.h: New file, from GNU gettext.
		* javaversion.c: New file, from GNU gettext.
		* javaversion.java: New file, from GNU gettext.
		* javaversion.class: New file, from GNU gettext.

	2006-05-17  Bruno Haible  <bruno@clisp.org>

		Cygwin portability.
		* javaexec.c (execute_java_class): Test for jview program
		also on Cygwin.

	2006-04-09  Bruno Haible  <bruno@clisp.org>

		* fatal-signal.c: Don't include string.h.
		(at_fatal_signal): Use a copying loop instead of memcpy.

	2005-12-04  Bruno Haible  <bruno@clisp.org>

		* csharpexec.c: Add support for 'clix' launcher (untested).
		(execute_csharp_using_sscli): New function.
		(execute_csharp_program): Call it.

	2006-06-21  Bruno Haible  <bruno@clisp.org>

		Avoid warnings from recent versions of mcs.
		* csharpcomp.c (compile_csharp_using_mono): Don't use options
		-o, -L, -r any more. Use options documented since mcs-1.0
		instead. Similarly for -g.

	2005-07-09  Bruno Haible  <bruno@clisp.org>

		* csharpcomp.c (compile_csharp_using_sscli): For -l option,
		add a .dll suffix.
		Reported by Mark Junker <mjscod@gmx.de>.

	2006-06-17  Bruno Haible  <bruno@clisp.org>

		* config.charset: Update for NetBSD 3.0.

	2006-05-17  Bruno Haible  <bruno@clisp.org>

		Cygwin portability.
		* localcharset.c (WIN32_NATIVE): Renamed from WIN32.

	2006-05-16  Bruno Haible  <bruno@clisp.org>

		* localcharset.c [CYGWIN]: Include <windows.h>.
		(get_charset_aliases): For Cygwin, return the same CPxxx
		aliases list as under WIN32.
		(locale_charset) [CYGWIN]: Try to retrieve the encoding from
		the environment variables. Fall back to GetACP().

	2006-04-05  Bruno Haible  <bruno@clisp.org>

		* config.charset: Update Juan Manuel Guerrero's address.

	2005-02-12  Bruno Haible  <bruno@clisp.org>

		* allocsa.h: Add extern "C" for C++.

	2005-02-10  Bruno Haible  <bruno@clisp.org>

		* allocsa.h (sa_alignof): Define differently with AIX xlc, to
		avoid a bug of this compiler on AIX 3.2.5 dealing with enums.

	2006-07-22  Bruno Haible  <bruno@clisp.org>

		* gettext.h: Update to GNU gettext-0.15.

2006-07-22  Yoann Vandoorselaere <yoann.v@prelude-ids.com>
	and Simon Josefsson <jas@extundo.com>

	* getaddrinfo.h (AI_PASSIVE): Make sure it is defined.

	* getaddrinfo.c (getaddrinfo): Support AI_PASSIVE.

2006-07-21  Eric Blake  <ebb9@byu.net>

	* stdlib-safer.h: New file from coreutils, required by
	stdlib--.h.

2006-07-19  Derek R. Price  <derek@ximbiot.com>

	* getaddrinfo.h: Don't define unimplemented AI_* flags.
	Reindent and repaginate.

2006-07-17  Bruno Haible  <bruno@clisp.org>

	* gl_list.h: New file.
	* gl_list.c: New file.
	* gl_array_list.h: New file.
	* gl_array_list.c: New file.
	* gl_carray_list.h: New file.
	* gl_carray_list.c: New file.
	* gl_linked_list.h: New file.
	* gl_linked_list.c: New file.
	* gl_anylinked_list1.h: New file.
	* gl_anylinked_list2.h: New file.
	* gl_avltree_list.h: New file.
	* gl_avltree_list.c: New file.
	* gl_anyavltree_list1.h: New file.
	* gl_anyavltree_list2.h: New file.
	* gl_rbtree_list.h: New file.
	* gl_rbtree_list.c: New file.
	* gl_anyrbtree_list1.h: New file.
	* gl_anyrbtree_list2.h: New file.
	* gl_anytree_list1.h: New file.
	* gl_anytree_list2.h: New file.
	* gl_linkedhash_list.h: New file.
	* gl_linkedhash_list.c: New file.
	* gl_anyhash_list1.h: New file.
	* gl_anyhash_list2.h: New file.
	* gl_avltreehash_list.h: New file.
	* gl_avltreehash_list.c: New file.
	* gl_rbtreehash_list.h: New file.
	* gl_rbtreehash_list.c: New file.
	* gl_anytreehash_list1.h: New file.
	* gl_anytreehash_list2.h: New file.

	* gl_oset.h: New file.
	* gl_oset.c: New file.
	* gl_array_oset.h: New file.
	* gl_array_oset.c: New file.
	* gl_avltree_oset.h: New file.
	* gl_avltree_oset.c: New file.
	* gl_rbtree_oset.h: New file.
	* gl_rbtree_oset.c: New file.
	* gl_anytree_oset.h: New file.

2006-07-16  Paul Eggert  <eggert@cs.ucla.edu>

	* dirchownmod.c, dirchownmod.h, mkancesdirs.c, mkancesdirs.h:
	New files.
	* mkdir-p.c: Don't include alloca.h, stdio.h, sys/types.h,
	unistd.h, string.h, chdir-safer.h, dirname.h, lchmod.h, lchown.h,
	save-cwd.h.  Instead, include dirchownmod.h and mkancesdirs.h.
	(make_dir_parents): New args MAKE_ANCESTOR, OPTIONS, ANNOUNCE,
	MODE_BITS.  Remove options VERBOSE_FMT_STRING, CWD_ERRNO.  All
	callers changed.  Revamp internals significantly, by not
	attempting to create directories that are temporarily more
	permissive than the final results.  Do not attempt to use
	save_cwd/restore_cwd; it isn't worth it for mkdir and install.
	This removes some race conditions, fixes some bugs, and simplifies
	things.  Use new dirchownmod function to do owner and mode changes.
	* mkdir-p.h: Likewise.
	* modechange.c (octal_to_mode): New function.
	(struct mode_change): New member mentioned.
	(make_node_op_equals): New arg mentioned.  All callers changed.
	(mode_compile): Keep track of which mode bits the user has explicitly
	mentioned.
	(mode_adjust): New arg DIR, so that we implement the X op correctly.
	New arg PMODE_BITS, to keep track of which mode bits the user
	mentioned; it treats S_ISUID and S_ISGID speciall.
	All callers changed.
	* modechange.h: Likewise.

2006-07-11  Derek R. Price  <derek@ximbiot.com>

	* glob.c: s/NAMLEN/_D_EXACT_NAMLEN/.

2006-07-10  Derek R. Price  <derek@ximbiot.com>

	* backupfile.c, dirfd.h, fts.c, getcwd.c, glob.c, glob_.h:
	Ignore the obsolescent !HAVE_DIRENT_H case.  Consolidate NAMLEN
	macros into the GNU _D_EXACT_NAMLEN.
	* savedir.c:  Likewise.
	(savedirstream): Use _D_EXACT_NAMLEN in preference to strlen.

2006-07-09  Jim Meyering  <jim@meyering.net>

	* argp-pv.c: Remove a doubled word in a comment.
	* check-version.c (check_version): Likewise.
	* javacomp.c (compile_java_class): Likewise.

2006-07-08  Jim Meyering  <jim@meyering.net>

	* getndelim2.h (getndelim2): Remove doubled "after" in comment.

2006-07-06  Jim Hyslop  <jhyslop@dreampossible.ca>  (tiny change)

	* lib/getaddrinfo.c: Changes to compile under MSVC6: changed
	'#if WIN32_NATIVE' to '#ifdef' & moved WSAAPI macro inside
	brackets.  Other minor changes to suppress some compiler
	warnings.

2006-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	* getloadavg.c: Use __VMS, not VMS.
	* getopt.c: Likewise.
	* getpagesize.h: Likewise.
	* glob.c: Remove most VMS cruft; it hasn't been tested for a while and
	probably does not work.

2006-07-06  Derek R. Price  <derek@ximbiot.com>
	and Paul Eggert  <eggert@cs.ucla.edu>

	* backupfile.c [HAVE_DIRENT_H && ! HAVE_NDIR_H]:
	Don't worry about this obsolete case any more.
	(HAVE_DIR): Remove.  All uses removed; we now assume you can read
	directories.
	* dirfd.h [HAVE_DIRENT_H && ! HAVE_NDIR_H]: Don't
	worry about this obsolete case any more.
	* fts.c: Likewise.
	* getcwd.c: Likewise.
	* glob.h: Likewise.
	* savedir.c: Likewise.

2006-07-06  Paul Eggert  <eggert@cs.ucla.edu>

	* .cppi-disable: Add wcwidth.
	* fnmatch.c (ISBLANK): Remove.  All uses changed to isblank.
	(isblank) [! (defined isblank || HAVE_DECL_ISBLANK)]: New macro.
	(ISGRAPH): Remove.  All uses changed to isgraph.
	(FOLD) [!defined _LIBC]: Remove special case.
	* getdate.y (lookup_word): Remove no-longer-needed call to islower.
	* regex_internal.h (isblank): Depend on HAVE_DECL_ISBLANK, not
	HAVE_ISBLANK.
	* strftime.c (TOLOWER, TOUPPER) [!defined _LIBC]: Remove special case.

2006-07-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* strtod.c (strtod): cast the argument of tolower to unsigned char.

2006-07-05  Paul Eggert  <eggert@cs.ucla.edu>

	* memcasecmp.c: Include <limits.h>.
	(memcasecmp): Don't assume UCHAR_MAX <= INT_MAX.
	* strtod.c (strtod): Don't assume isspace works on negative chars.
	Don't assume isdigit succeeds only on '0' through '9'.

2006-07-05  Derek R. Price  <derek@ximbiot.com>

	* exclude.c (IN_CTYPE_DOMAIN, is_space): Remove; no longer needed.
	All uses of is_space replaced by isspace.
	* exit.h: Don't talk about STDC_HEADERS.
	* fnmatch.c (ISASCII): Remove; no longer needed.  All uses removed.
	(ISPRINT, ISDIGIT, ISALNUM, ISALPHA, ISCNTRL, ISLOWER, ISPUNCT):
	(ISSPACE, ISUPPER, ISXDIGIT): Remove; no longer needed.  All uses
	replaced by isprint etc.
	* getdate.y (IN_CTYPE_DOMAIN, ISSPACE, ISALPHA, ISLOWER): Likewise.
	* getusershell.c (IN_CTYPE_DOMAIN, ISSPACE): Likewise.
	* memcasecmp.c (IN_CTYPE_DOMAIN, ISLOWER, TOUPPER): Likewise.
	* strtod.c (IN_CTYPE_DOMAIN, ISSPACE, ISDIGIT, TOLOWER): Likewise.
	* strtol.c (IN_CTYPE_DOMAIN): Likewise.
	* xstrtol.c (IN_CTYPE_DOMAIN, ISSPACE): Likewise.

2006-07-05  Eric Blake  <ebb9@byu.net>

	* getaddrinfo.h (NI_NUMERICHOST, NI_NUMERICSERV): Define if
	missing from netdb.h.
	* getaddrinfo.c (includes): Include inet_ntop and snprintf.

2006-06-27  Bruno Haible  <bruno@clisp.org>

	Assume ANSI C header files and <ctype.h> functions.
	* mbswidth.c (IN_CTYPE_DOMAIN, ISPRINT, ISCNTRL): Remove macros.
	(mbsnwidth): Use isprint, iscntrl instead.

2006-07-03  Jim Meyering  <jim@meyering.net>

	* cycle-check.h (CYCLE_CHECK_REFLECT_CHDIR_UP): Abort if this
	macro is used before the first cycle_check call.

2006-07-03  Paul Eggert  <eggert@cs.ucla.edu>

	* stdint_.h: Include <sys/types.h> after @FULL_PATH_STDINT_H@, for
	MacOS X 10.4.6.  Don't mention <sys/int_types.h>.  Problems
	reported by Mark D. Baushke, one in
	<http://lists.gnu.org/archive/html/bug-gnulib/2006-07/msg00015.html>.

	Merge from coreutils.

	* .cppi-disable: Add stdint_.h.
	* .cvsignore: Add stdint.h.

	2006-06-30  Paul Eggert  <eggert@cs.ucla.edu>

	* xstrtod.c (XSTRTOD, DOUBLE): New macros, so that we can support
	both double and long double versions.
	(XSTRTOD): Renamed from xstrtod.  Use DOUBLE internally.
	* xstrtold.c: New file.
	* xstrtod.h (xstrtold): New decl.

	2006-05-22  Paul Eggert  <eggert@cs.ucla.edu>

	* filemode.c (setst): Remove.
	(strmode): Rewrite to avoid setst.  This makes the code shorter,
	(arguably) clearer, and the generated code is a bit smaller on my
	Debian GNU/Linux stable x86 host.

	2006-04-17  Paul Eggert  <eggert@cs.ucla.edu>

	* filemode.c: Include "filemode.h" first, to test the interface.
	Assume that filemode.h includes sys/types.h and sys/stat.h.
	(HAVE_ST_DM_MODE): New macro, moved here from ls.c.
	(ftypelet): Reorder to put common cases first, for efficiency.
	Add 'P', 'w'.  Remove 'M', since it's now the caller's responsibility
	to do 'M'.
	(strmode): Renamed from mode_string, and now stores 12 bytes instead
	of 10, for compatibility with FreeBSD.  All callers changed.
	(filemodestring): Now stores 12 bytes instead of 10, and sets file types
	that can't be deduced solely from st_mode.  First arg is now a const
	pointer.
	* filemode.h (HAVE_DECL_STRMODE): Include <string.h> for strmode.
	(strmode): Renamed from mode_string.
	(filemodestring): New decl.
	* stat-macros.h: Don't undef S_ISDOOR, since it's never buggy.
	(S_ISDOOR): Don't bother with S_IFDOOR, since that code is never needed.
	(S_ISPORT, S_ISWHT): New macros, if not already defined.

	2006-04-12  Paul Eggert  <eggert@cs.ucla.edu>

	* fsusage.c: Don't include <inttypes.h> or <stdint.h>, since
	fsusage.h now does that.  Include fsusage.h first, to test interface.
	Prefer statvfs if it works, since it's blessed by POSIX.  Attempt
	at most one method (the old code could have generated decls that
	didn't conform to C89, not that this was ever exercised).
	* fsusage.h: Include <inttypes.h> and <stdint.h> if they exist.

	2006-03-19  Jim Meyering  <jim@meyering.net>

	Work even in a chroot where d_ino values for entries in "/"
	don't match the stat.st_ino values for the same names.
	* getcwd.c (__getcwd): When no d_ino value matches the target inode
	number, iterate through all entries again, using lstat instead.
	Reported by Kenshi Muto in http://bugs.debian.org/355810, and by
	Zouhir Hafidi in https://bugzilla.redhat.com/bugzilla/190656.

	* getcwd.c (__getcwd): Clarify a comment.
	Use memcpy in place of a call to strcpy.

	2006-03-12  Jim Meyering  <jim@meyering.net>

	* fts-cycle.c (leave_dir): If cycle-check's saved dev-ino pair matches
	that of the current directory (which we're about to chdir ".." out of),
	then save the dev-ino of the parent, instead.

	* same-inode.h (SAME_INODE): New file/macro.
	* chdir-safer.c (SAME_INODE): Remove definition.
	Include "same-inode.h", instead.
	* same.c: Likewise.
	* cycle-check.h: Include "same-inode.h".
	(CYCLE_CHECK_REFLECT_CHDIR_UP): Define.
	* cycle-check.c (SAME_INODE): Remove definition.
	* root-dev-ino.h: Include "same-inode.h".

	2006-03-11  Eric Blake  <ebb9@byu.net>

	* same.c (same_name): s/base_name/last_component/
	* backupfile.c (check_extension, numbered_backup): Likewise.
	* filenamecat.c (file_name_concat): Likewise.

	2006-03-11  Eric Blake  <ebb9@byu.net>,
		    Paul Eggert  <eggert@cs.ucla.edu>

	* dirname.h (FILE_SYSTEM_PREFIX_LEN): Move here from dos.m4.
	[FILE_SYSTEM_ACCEPTS_DRIVE_LETTER_PREFIX]: Don't treat 1: as a
	drive prefix.
	(IS_ABSOLUTE_FILE_NAME): Treat all drive letters as absolute on
	platforms like cygwin with FILE_SYSTEM_DRIVE_PREFIX_IS_ABSOLUTE.
	(last_component): New method.
	* dirname.c (dir_len): Determine when drive letters need a
	subsequent slash.  Preserve // when it is special.
	(dir_name): Don't append dot when drive letter is absolute.
	[TEST_DIRNAME]: Move into a full-blown gnulib test.
	* basename.c (base_name): New semantics - malloc the result.
	Preserve // when it is special.  Preserve relative files that look
	like drive letters.
	(base_len): Preserve // when it is special.
	(last_component): New method, similar to old base_name semantics.
	* stripslash.c (strip_trailing_slashes): Use last_component, not
	base_name.  Strip redundant slashes from ///.

2006-07-02  Paul Eggert  <eggert@cs.ucla.edu>

	* stdint_.h (intmax_t, uintmax_t): Prefer long to long long if
	both are 64 bits, since this seems to be the tradition, and this
	prevents gcc -Wformat from warning about usages with PRIuMAX.  If
	we ever run into a host that prefers long long to long in this
	case, we'll need another configure-time test.  Problem reported by
	Jim Meyering.

2006-07-01  Paul Eggert  <eggert@cs.ucla.edu>

	* stdint_.h (_GL_STDINT_H): Renamed from _STDINT_H, to avoid
	possible collision with system files.
	(<stdio.h>, <time.h>, <wchar.h>) [defined __cplusplus && ! defined
	__STDC_CONSTANT_MACROS)]: Do not include, since we don't need
	WCHAR_MIN and WCHAR_MAX in this case.
	(<stddef.h>): Do not include; no longer needed.
	(<sys/types.h>): Include if @HAVE_SYS_TYPES_H@, not if
	(defined(__OpenBSD__) || defined(__bsdi__) || defined(__sgi)).
	(<sys/inttypes.h>): Include if @HAVE_SYS_INTTYPES_H@ &&
	!@HAVE_INTTYPES_H@, not if (defined(__FreeBSD__)
	&& (__FreeBSD__ >= 3) && (__FreeBSD__ <= 4)).
	(__STDINT_H__) [@HAVE_STDINT_H@ && defined __sgi && ! defined
	__c99]: Define, to work around IRIX <stdint.h> incompatibility.
	(@FULL_PATH_STDINT_H@) [!(defined(__sgi) && @HAVE_INTTYPES_H@ &&
	!defined(__c99))]: Include in this case too, since it's harmless
	now.
	(<inttypes.h>) [@HAVE_INTTYPES_H@]: Include, since it's no longer
	dangerous to do so.
	(@FULL_PATH_INTTYPES_H@) [(defined(__hpux) || defined(_AIX)) &&
	@HAVE_INTTYPES_H@]: Do not include, since we now include <inttypes.h>.
	(_STDINT_MIN, _STDINT_MAX): New macros.
	(int8_t, uint8_t, int16_t, uint16_t, int32_t, uint32_t, int64_t):
	(uint64_t, int_least8_t, uint_least8_t, int_least16_t):
	(uint_least16_t, int_least32_t, uint_least32_t, int_least64_t):
	(uint_least64_t, int_fast8_t, uint_fast8_t, int_fast16_t):
	(uint_fast16_t, int_fast32_t, uint_fast32_t, int_fast64_t):
	(uint_fast64_t, intptr_t, uintptr_t, intmax_t, uintmax_t): Now
	macros, not typedefs; this simplifies things quite a bit.
	Use long int for all types narrower than int64_t.
	(intmax_t, uintmax_t, INTMAX_C, UINTMAX_C):
	Define in terms of long long int or int64_t or long int,
	not int64_t or int32_t.  This saves some compile-time testing.
	(INT8_MIN, INT8_MAX, UINT8_MAX, INT16_MIN, INT16_MAX, UINT16_MAX):
	(INT32_MIN, INT32_MAX, UINT32_MAX, INT64_MIN, INT64_MAX):
	(UINT64_MAX, INT_LEAST8_MIN, INT_LEAST8_MAX, UINT_LEAST8_MAX):
	(INT_LEAST16_MIN, INT_LEAST16_MAX, UINT_LEAST16_MAX):
	(INT_LEAST32_MIN, INT_LEAST32_MAX, UINT_LEAST32_MAX):
	(INT_LEAST64_MIN, INT_LEAST64_MAX, UINT_LEAST64_MAX, INT_FAST8_MIN):
	(INT_FAST8_MAX, UINT_FAST8_MAX, INT_FAST16_MIN, INT_FAST16_MAX):
	(UINT_FAST16_MAX, INT_FAST32_MIN, INT_FAST32_MAX, UINT_FAST32_MAX):
	(INT_FAST64_MIN, INT_FAST64_MAX, UINT_FAST64_MAX, INTPTR_MIN):
	(INTPTR_MAX, UINTPTR_MAX, INTMAX_MIN, INTMAX_MAX, UINTMAX_MAX):
	(PTRDIFF_MIN, PTRDIFF_MAX, SIG_ATOMIC_MIN, SIG_ATOMIC_MAX):
	(SIZE_MAX, WCHAR_MIN, WCHAR_MAX, WINT_MIN, WINT_MAX):
	undef any previous version and define our own version, for
	simplicity and consistency with the new macros for types.
	(PTRDIFF_MIN, PTRDIFF_MAX, SIG_ATOMIC_MIN, SIG_ATOMIC_MAX):
	(SIZE_MAX, WCHAR_MIN, WCHAR_MAX, WINT_MIN, WINT_MAX):
	Simplify definitions by using _STDINT_MIN and _STDINT_MAX
	where appropriate.  Rely on new symbols @PTRDIFF_T_SUFFIX@,
	@SIG_ATOMIC_T_SUFFIX@, @SIZE_T_SUFFIX@, @WCHAR_T_SUFFIX@,
	@WINT_T_SUFFIX@ to keep things simple here.
	(UINT8_C, UINT16_C, UINT32_C, INT64_C, UINT64_C):
	Simplify by assuming typical 8/16/32/64 host, since we're
	already doing that elsewhere anyway.
	Use (LONG_MAX >> 31 >> 31 == 1) rather than @HAVE_LONG_64BIT@,
	and assume long long int is 64 bits if available.  This
	speeds up 'configure'.

2006-06-30  Jim Hyslop <jhyslop@dreampossible.ca>  (tiny change)

	* getaddrinfo.c: fixed typo

2006-06-29  Eric Blake  <ebb9@byu.net>

	* stat_.h (rpl_mkdir): Declare inline, to avoid warnings about
	unused static function.

2006-06-29  Eric Blake  <ebb9@byu.net>

	* stat_.h: New file.

2006-06-29  Derek R. Price  <derek@ximbiot.com>

	* strftime.c: Assume strftime() exists.

2006-06-28  Bruno Haible  <bruno@clisp.org>

	* getaddrinfo.h: Fix POSIX URL.
	* getaddrinfo.c (WIN32_NATIVE): New macro. Use it instead of _WIN32.
	(use_win32_p): Make static.
	(getaddrinfo): Reject service name if it is empty or does not consist
	solely of decimal digits, or if its value is > 65535.
	(getnameinfo): Remove useless casts.

2006-06-28  Derek R. Price  <derek@ximbiot.com>

	* savedir.c (CLOSEDIR): Remove.  All uses changed to closedir.
	Autoconf 2.60 says this stuff was obsolete.

2006-05-12  Bruno Haible  <bruno@clisp.org>

	* mkdtemp.c [MINGW]: Include <io.h>.
	(mkdir): Define using _mkdir.

2006-06-28  Bruno Haible  <bruno@clisp.org>

	* wcwidth.h: Declare nothing if !HAVE_WCHAR_T. Provide a fallback
	declaration for wcwidth.
	* mbswidth.c: Restore the includes of <wchar.h> and <wctypes.h>.

2006-06-28  Eric Blake  <ebb9@byu.net>

	* xvasprintf.h: Fix comments.

2006-06-28  Eric Blake  <ebb9@byu.net>

	* mbchar.h (wcwidth): Include wcwidth.h.
	* mbswidth.c (wcwidth): Move from here...
	* wcwidth.h: ...to this new file.

2006-06-28  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.c: Try to load ws2_32.dll on Windows, to find the
	functions there.  It will succeed on Windows XP, but on Windows
	2000 and (presumably) earlier, it will fail, and use the internal
	re-implementation.
	(use_win32_p): New function.
	(getaddrinfo): Use strtoul on servname, to support numeric ports.
	Support AI_NUMERICSERV to disable getservbyname.
	(getnameinfo): New function, only supports
	NI_NUMERICHOST|NI_NUMERICSERV for now.

	* getaddrinfo.h: Test and check for AI_* flags separately, MinGW
	only have some of them.  Add AI_NUMERICSERV.  Add prototype for
	getnameinfo.

2006-06-27  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (intmax_t, uintmax_t): Undefine before typedef.

2006-06-26  Paul Eggert  <eggert@cs.ucla.edu>

	* base64.c (B64): Use _ as the formal parameter, not x, to avoid
	bug in IBM C V6 for AIX.  Problem reported by Larry Jones in
	<http://lists.gnu.org/archive/html/bug-gnulib/2006-06/msg00181.html>.

2006-06-26  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Include <wchar.h> if necessary for WCHAR_MIN or
	WCHAR_MAX.
	Reported by Mark D. Baushke and Larry Jones.

2006-06-26  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Don't include <stdint.h> when using the SGI C compiler
	in pre-C99 mode.
	Suggested by Mark D. Baushke and Larry Jones.

2006-06-23  Mark D. Baushke  <mdb@gnu.org>

	* stdint_.h: Treat BSD/OS like OpenBSD.

2006-06-23  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Treat IRIX like OpenBSD.

2006-06-23  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (UINT8_C, UINT16_C, UINT32_C): Define according to
	ISO C 99 Technical Corrigendum 1.

2006-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	* glob.c (collated_compare): Remove 'const' uses that weren't needed.
	Some compiler complained about some of them.  Problem reported by
	Larry Jones in
	<http://lists.gnu.org/archive/html/bug-gnulib/2006-06/msg00172.html>.

2006-06-21  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.c (getaddrinfo): Set ai_family in the return
	variable.

	* socket_.h: Don't define WINVER.

	* inet_pton.h, inet_pton.c: New file, taken from glibc but
	slightly modified to work in gnulib.

2006-06-19  Paul Eggert  <eggert@cs.ucla.edu>

	* read-file.c (fread_file): Start with buffer allocation of
	0 bytes rather than 1 byte; this simplifies the code.
	Don't invoke feof; it's not needed.  Refactor to avoid duplicate
	code to free buffer and save/restore errno.
	(internal_read_file): Remove unused local.

2006-06-20  Paul Eggert  <eggert@cs.ucla.edu>

	* openat.c (openat): Use ?:, not if, to work around GCC bug 4210
	<http://gcc.gnu.org/bugzilla/show_bug.cgi?id=4210>.
	Problem reported by Denis Excoffier in
	<http://lists.gnu.org/archive/html/bug-tar/2006-06/msg00023.html>.

2006-06-19  Simon Josefsson  <jas@extundo.com>

	* inet_ntop.c: Always build inet_ntop4, since inet_ntop6 calls it.

2006-06-19  Paul Eggert  <eggert@cs.ucla.edu>

	* alloca_.h (alloca) [defined alloca]: Don't define or declare.

2006-06-17  Bruno Haible  <bruno@clisp.org>

	* stdint_.h [FreeBSD >= 5]: Don't include <sys/inttypes.h>.

2006-06-17  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (_UINT8_T, _UINT32_T, _UINT64_T): New macros. Fixes a
	problem on Solaris 2.5.1.

2006-06-16  Eric Blake  <ebb9@byu.net>

	* unsetenv.c [!defined errno]: Assume errno.h declares errno.
	* unicodeio.c [!defined errno]: Likewise.
	* strtol.c [!defined errno]: Likewise.
	* strtod.c [!defined errno]: Likewise.

2006-06-15  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Rewritten to be fully auto-configured.
	Fixes bug on HP-UX/IA64.

2006-06-11  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (__attribute__): Don't define if already defined.
	Problem reported by Larry Jones.
	* utimens.c (__attribute__): Likewise.

2006-06-04  Paul Eggert  <eggert@cs.ucla.edu>

	* regexec.c (group_nodes_into_DFAstates): Fix a buffer overrun
	reported by Andreas Schwab.

2006-05-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
	    Bruno Haible  <bruno@clisp.org>

	* strndup.c (strndup) [!_LIBC]: Don't undefine macro definition.

2006-05-26  Martin Lambers  <marlam@marlam.de>

	* getpass.c: Updates the test for the native W32 API, and adds
	missing includes, thus fixing compilation warnings.

2006-05-25  Paul Eggert  <eggert@cs.ucla.edu>

	* tempname.c (small_open, large_open): New macros.
	(__open, __open64) [!_LIBC]: Remove.
	(__gen_tempname): Use small_open and large_open instead of __open
	and __open64.  This fixes a portability bug on HP-UX 11.11i
	reported by Simon Wing-Tang in
	<http://lists.gnu.org/archive/html/bug-coreutils/2006-05/msg00114.html>.

2006-05-25  Sergey Poznyakoff  <gray@gnu.org.ua>

	* exclude.c (exclude_fnmatch): New function.
	(excluded_file_name): Call exclude_fnmatch.
	* exclude.h (excluded_file_name): New prototype

2006-05-24  Bruno Haible  <bruno@clisp.org>

	* printf-args.c (printf_fetchargs): Turn NULL pointers for
	TYPE_STRING and TYPE_WIDE_STRING into a non-NULL replacement.
	Reported by Thorsten Maerz <torte@netztorte.de> via
	Aaron Stone <aaron@serendipity.cx>.

2006-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	* nanosleep.c [HAVE_SYS_SELECT_H]: Include <sys/select.h>.
	Use the usual Autoconf way to include <time.h> and/or sys/time.h.
	(my_usleep): Don't mishandle maximum value.

2006-05-19  Jim Meyering  <jim@meyering.net>

	* getugroups.c: Correct an outdated comment.  From Bruno Haible.

2006-05-17  Bruno Haible  <bruno@clisp.org>

	Cygwin portability.
	* classpath.c (PATH_SEPARATOR) [CYGWIN]: Define as ':'.

2006-05-17  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Fix recognition of Cygwin.

2006-05-11  Jim Meyering  <jim@meyering.net>

	* sha1.c (sha1_buffer): Correct comment: s/MD5/SHA1/.  From James Lemley.

2006-05-10  Paul Eggert  <eggert@cs.ucla.edu>

	* crc.c (crc32_update): Remove unnecessary L suffix.
	* md4.c (rol): Cast right-shift arg to uint32_t to prevent
	unwanted sign propagation, e.g., on hosts with 64-bit int.
	There still are some problems with reeelly weird theoretical hosts
	(e.g., 33-bit int) but it's not worth worrying about now.
	* sha1.c (rol): Likewise.
	(K1, K2, K3, K4): Remove unnecessary L suffix.

2006-05-10  Bruno Haible  <bruno@clisp.org>

	* des.c: Cast to avoid warnings.

2006-05-10  Simon Josefsson  <jas@extundo.com>

	* md4.c: Typo fix, update copyright years.
	(K1, K2): Don't use L because it turn computations into 64-bit on
	64-bit platforms.

2006-05-09  Bruno Haible  <bruno@clisp.org>

	* xvasprintf.c: Include limits.h, string.h, xsize.h.
	(EOVERFLOW): Define fallback value.
	(xstrcat): New function.
	(xvasprintf): Recognize the special case of a string concatenation.

2006-05-01  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Shorter URL.
	* inttypes.h: Likewise.

2006-05-02  Paul Eggert  <eggert@cs.ucla.edu>

	* verify.h: Document the internals better.  Most of this change
	was written by Bruno Haible.

2006-04-29  Bruno Haible  <bruno@clisp.org>

	* gcd.c: Use WORD_T and GCD instead of unsigned long and gcd.
	Suggested by Oskar Liljeblad <oskar@osk.mine.nu>.

2006-04-25  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (get_date): When adding relative date, start with the
	initial time, not with the result of the first mktime call.

2006-04-23  Bruno Haible  <bruno@clisp.org>

	* copy-file.c: Include <unistd.h> unconditionally.
	* execute.c: Likewise.
	* fatal-signal.c: Likewise.
	* findprog.c: Likewise.
	* mkdtemp.c: Likewise.
	* pipe.h: Likewise.
	* pipe.c: Likewise.
	* wait-process.h: Likewise.

2006-04-23  Bruno Haible  <bruno@clisp.org>

	* fwriteerror.c (fwriteerror): Call fclose also when an error
	condition was already detected.
	Reported by Ben Pfaff <blp@cs.stanford.edu>.

2006-04-19  Derek Price  <derek@ximbiot.com>
	    Eric Blake  <ebb9@byu.net>

	* inttypes.h: Correct grammar in comment.

2006-04-18  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* inttypes.h: New file.
	* strtoimax.c: Assume <inttypes.h>.

2006-04-15  Paul Eggert  <eggert@cs.ucla.edu>

	* utimens.c (futimens): glibc futimesat messes up if /proc
	isn't mounted.  Problem reported by Kir Kolyshkin.

2006-04-13  Paul Eggert  <eggert@cs.ucla.edu>

	* regcomp.c (init_dfa): Don't use wchar_t or wctype_t if RE_ENABLE_I18N
	is not defined.  Problem reported by Mark D. Baushke via Derek R. Price.
	* regex.h (RE_DUP_MAX): Update comment to match current implementation.

2006-04-09  Paul Eggert  <eggert@cs.ucla.edu>

	Merge regex changes from libc, removing some of our
	POSIX-conformance changes that were rejected and redoing them in a
	less-intrusive way.

	* regcomp.c (re_compile_internal, init_dfa):
	Length arg is now size_t, not Idx.  All uses changed.
	(peek_token): Forward decl now says internal_function.
	(__re_error_msgid, __re_error_msgid_idx):
	Now static rather than extern with attribute_hidden.
	(re_compile_pattern) [!defined _LIBC]: Use K&R-style defn.
	For some reason libc prefers K&R style defns for external functions.
	(regerror) [!defined _LIBC]: Likewise.
	(re_set_syntax, re_compile_fastmap, regcomp, regfree, re_comp):
	(seek_collating_symbol_entry, lookup_collation_sequence_value):
	(build_range_exp, build_collating_symbol):
	Use K&R-style defn.
	(re_compile_fastmap): Use '\0' to memset, not 0.
	(utf8_sb_map): Make the calculations more obvious.
	(init_dfa, parse_bracket_exp, build_charclass_op):
	Call calloc and cast result, as glibc does.
	(init_word_char, fetch_token, peek_token, peek_token_bracket):
	(build_range_exp, build_collating_symbol):
	Now internal functions.

	* regex.c [!defined _LIBC]: Allow compiling with C++ compilers.

	* regex.h (__USE_GNU_REGEX): New macro.  Don't depend on
	_REGEX_SOURCE any more; depend on _GNU_SOURCE instead.
	Don't depend on VMS; depend on __VMS instead, for POSIX
	namespace cleanness.
	(regoff_t): Define to ssize_t, not long int.

	Remove the REG_ macros named below.  Instead, make the old names
	(e.g., RE_BACKSLASH_ESCAPE_IN_LISTS) visible only if
	__USE_GNU_REGEX.
	(REG_BACKSLASH_ESCAPE_IN_LISTS):
	(REG_BK_PLUS_QM, REG_CHAR_CLASSES, REG_CONTEXT_INDEP_ANCHORS):
	(REG_CONTEXT_INDEP_OPS, REG_CONTEXT_INVALID_OPS):
	(REG_DOT_NEWLINE, REG_DOT_NOT_NULL, REG_HAT_LISTS_NOT_NEWLINE):
	(REG_INTERVALS, REG_LIMITED_OPS, REG_NEWLINE_ALT):
	(REG_NO_BK_BRACES, REG_NO_BK_PARENS, REG_NO_BK_REFS):
	(REG_NO_BK_VBAR, REG_NO_EMPTY_RANGES):
	(REG_UNMATCHED_RIGHT_PAREN_ORD, REG_NO_POSIX_BACKTRACKING):
	(REG_NO_GNU_OPS, REG_DEBUG, REG_INVALID_INTERVAL_ORD):
	(REG_IGNORE_CASE, REG_CARET_ANCHORS_HERE):
	(REG_CONTEXT_INVALID_DUP, REG_NO_SUB, REG_SYNTAX_EMACS):
	(REG_SYNTAX_AWK, REG_SYNTAX_GNU_AWK, REG_SYNTAX_POSIX_AWK):
	(REG_SYNTAX_GREP, REG_SYNTAX_EGREP, REG_SYNTAX_POSIX_EGREP):
	(REG_SYNTAX_ED, REG_SYNTAX_SED, _REG_SYNTAX_POSIX_COMMON):
	(REG_SYNTAX_POSIX_BASIC, REG_SYNTAX_POSIX_MINIMAL_BASIC):
	(REG_SYNTAX_POSIX_EXTENDED, REG_SYNTAX_POSIX_MINIMAL_EXTENDED):
	(REG_DUP_MAX, REG_UNALLOCATED, REG_REALLOCATE, REG_FIXED):
	(REG_NREGS):
	Remove.  All uses replaced by the old RE_* names.
	(RE_BACKSLASH_ESCAPE_IN_LISTS):
	(RE_BK_PLUS_QM, RE_CHAR_CLASSES, RE_CONTEXT_INDEP_ANCHORS):
	(RE_CONTEXT_INDEP_OPS, RE_CONTEXT_INVALID_OPS):
	(RE_DOT_NEWLINE, RE_DOT_NOT_NULL, RE_HAT_LISTS_NOT_NEWLINE):
	(RE_INTERVALS, RE_LIMITED_OPS, RE_NEWLINE_ALT):
	(RE_NO_BK_BRACES, RE_NO_BK_PARENS, RE_NO_BK_REFS):
	(RE_NO_BK_VBAR, RE_NO_EMPTY_RANGES):
	(RE_UNMATCHED_RIGHT_PAREN_ORD, RE_NO_POSIX_BACKTRACKING):
	(RE_NO_GNU_OPS, RE_DEBUG, RE_INVALID_INTERVAL_ORD):
	(RE_IGNORE_CASE, RE_CARET_ANCHORS_HERE):
	(RE_CONTEXT_INVALID_DUP, RE_NO_SUB):
	Don't bother having these macros be independent of each others'
	values, since they no longer exist in the POSIX name space.

	Rename the following member names back to their old names,
	unless !__USE_GNU_REGEX.  All uses changed back.
	(buffer): Renamed from re_buffer.
	(allocated): Renamed from re_allocated.
	(used): Renamed from re_used.
	(syntax): Renamed from re_syntax.
	(fastmap): Renamed from re_fastmap.
	(translate): Renamed from re_translate.
	(can_be_null): Renamed from re_can_be_null.
	(regs_allocated): Renamed from re_regs_allocated.
	(fastmap_accurate): Renamed from re_fastmap_accurate.
	(no_sub): Renamed from re_no_sub.
	(not_bol): Renamed from re_not_bol.
	(not_eol): Renamed from re_not_eol.
	(newline_anchor): Renamed from re_newline_anchor.
	(num_regs): Renamed from rm_num_regs.
	(start): Renamed from rm_start.
	(end): Renamed from rm_end.

	(free_state): Move up a bit.

	* regex_internal.h (inline) [__GNUC__ < 3 && defined _LIBC]:
	#define to be empty.
	(ASCII_CHARS): New macro, replacing all uses of 0x80 and/or SBC_MAX / 2
	when that is what is intended.
	(SBC_MAX): Define to UCHAR_MAX + 1, not 256.
	(__re_error_msgid, __re_error_msgid_idx): Remove decls; not needed.
	(MAX): New macro.
	(re_xmalloc, re_calloc, re_xrealloc, re_x2realloc): Remove.
	All uses changed back to re_malloc, etc.  It's now the caller's
	responsibility to check for overflow; all callers changed.
	(re_alloc_oversized, re_x2alloc_oversized, re_xnmalloc, re_xnrealloc):
	(re_x2nrealloc): Remove.
	(free_state): Remove decl.

	* regexc.c (regexec, re_match, re_search, re_match_2, re_search_2):
	(re_set_registers, re_exec):
	Use K&R-style defn.

	2006-01-31  Roland McGrath  <roland@redhat.com>

	* regcomp.c (calc_eclosure_iter): Remove dead variables.
	Reported by Mike Frysinger <vapier@gentoo.org>.

	2006-01-15  Andreas Jaeger  <aj@suse.de>

	[BZ #1950]
	* regex_internal.c (re_string_reconstruct): Adjust for
	build_wcs_upper_buffer change.
	(build_wcs_upper_buffer): Change return type.

	2005-12-10  Ulrich Drepper  <drepper@redhat.com>

	* regex_internal.h: Include <stdint.h> if available.

	2005-12-06  Paolo Bonzini  <bonzini@gnu.org>

	* regex_internal.h (SIZE_MAX): Provide a default definition.

	2005-10-14  Ulrich Drepper  <drepper@redhat.com>

	* regcomp.c: Adjust for changed secondary hash function.

	2005-09-30  Ulrich Drepper  <drepper@redhat.com>

	* regex.h: Pretty printing.
	Clean up namespace a bit.

	2005-09-30  Jakub Jelinek  <jakub@redhat.com>

	* regexec.c (update_cur_sifted_state, check_arrival,
	check_arrival_add_next_nodes): Avoid using uninitialized variable.

	2005-09-06  Paul Eggert  <eggert@cs.ucla.edu>
		    Ulrich Drepper  <drepper@redhat.com>

	[BZ #1302]
	* regex_internal.h (bitset_t): Renamed from bitset.  All uses changed.
	(bitset_word_t): Renamed from bitset_word.  All uses changed.

	2005-09-22  Ulrich Drepper  <drepper@redhat.com>

	[BZ #281]
	* regex.h: Define RE_TRANSLATE_TYPE as unsigned char *.
	* regcomp.c: Remove unnecessary uses of
	unsigned RE_TRANSLATE_TYPE.
	* regex_internal.h: Likewise.
	* regex_internal.c: Likewise.
	* regexec.c: Likewise.
	Based on a patch by Stepan Kasal <kasal@ucw.cz>.

	2005-09-07  Ulrich Drepper  <drepper@redhat.com>

	* regexec.c (find_recover_state): Remove unnecessary
	initialization.
	(transit_state_bkref): Make DFA a const pointer.
	(get_subexp): Likewise.
	(check_arrival): Likewise.
	(update_cur_sifted_state): Likewise.
	(re_search_internal): Likewise.
	(prune_impossible_nodes): Likewise.
	(acquire_init_state_context): Likewise.
	(proceed_next_node): Likewise.
	(set_regs): Likewise.
	(free_fail_stack_return): Likewise.
	(check_arrival_expand_ecl): Mark DFA parameter as const.
	(check_arrival_expand_ecl_sub): Likewise.
	(check_subexp_limits): Likewise.
	(sub_epsilon_src_nodes):  Likewise.
	(add_epsilon_src_nodes):  Likewise.
	(merge_state_array): Likewise.
	(update_regs): Likewise.
	(build_trtable): Likewise.
	(sift_states_backward): Mark MCTX parameter as const.
	(build_sifted_states): Likewise.
	(update_cur_sifted_state): Likewise.
	(sift_states_mkref): Likewise.
	(check_arrival_expand_ecl): Mark eclosure as const.
	(check_dst_limits_calc_pos_1): Likewise.
	* regex_internal.h (re_match_context_t): Make dfa a const
	pointer.

	2005-09-06  Ulrich Drepper  <drepper@redhat.com>

	* regexec.c (merge_state_with_log): Define dfa as const pointer.
	(transit_state_sb): Likewise.
	(transit_state_mb): Likewise.
	(sift_states_iter_mb): Likewise.
	(check_arrival_add_next_nodes): Likewise.
	(check_node_accept_bytes): Change first parameter to pointer-to-const.
	[_LIBC] (re_search_2_stub): Use mempcpy.

	* regex_internal.c (re_string_reconstruct): Avoid calling
	mbrtowc for very simple UTF-8 case.

	* regex_internal.c (re_acquire_state): Make DFA pointer arg
	a pointer-to-const.
	(re_acquire_state_context): Likewise.
	* regex_internal.h: Adjust prototypes.

	* regex.c: Prevent using C++ compilers.

	* regex_internal.c (re_acquire_state): Minor code rearrangement.
	(re_acquire_state_context): Likewise.

2006-03-29  Mark D. Baushke  <mdb@gnu.org>
	    Bruno Haible  <bruno@clisp.org>

	* stdint_.h: On OpenBSD, don't redefine types already included in
	<sys/types.h> and <inttypes.h>.

2006-03-24  Eric Blake  <ebb9@byu.net>

	* time_r.c (copy_string_result): Remove, as it is no longer used.

2006-03-24  Simon Josefsson  <jas@extundo.com>

	* base64.c: Fix problems reported by Eric Blake <ebb9@byu.net>,
	including some doc fixes.
	(base64_encode_alloc): Fix +1 bug on allocation failures.

2006-03-24  Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* base64.c (base64_encode): Do not read past end of array with
	unsanitized input on systems with CHAR_BIT > 8.

2006-03-16  Paul Eggert  <eggert@cs.ucla.edu>

	* regex.h (regoff_t) [defined _REGEX_LARGE_OFFSETS]:
	Typedef to long int, not to off_, as POSIX will likely change
	in that direction.

2006-03-13  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-help.c (validate_uparams): Fix typo
	* argp-parse.c (argp_default_options): Consistently begin help
	messages with a lowercase letter.

2006-03-11  Paul Eggert  <eggert@cs.ucla.edu>

	* time_r.h (asctime_r, ctime_r): Remove.  These functions can
	overrun buffers and shouldn't be used (much as gets shouldn't be
	used).
	* time_r.c (asctime_r, ctime_r): Likewise.

2006-03-08  Simon Josefsson  <jas@extundo.com>

	* gc-gnulib.c (randomize): Don't open files called 'no', they
	signal that configure disabled the device.

2006-03-07  Paul Eggert  <eggert@cs.ucla.edu>

	* c-stack.c: Include unistd.h unconditionally, since we now assume
	the unistd module.
	* getlogin_r.c: Likewise.
	* getlogin_r.h: Likewise.
	* glob.c: Likewise.
	* pagealign_alloc.c: Likewise.
	* unistd_.h: Remove; no longer needed.

2006-03-07  Simon Josefsson  <jas@extundo.com>

	* unistd_.h: New file.

2006-03-07  Simon Josefsson  <jas@extundo.com>

	* gc-libgcrypt.c, gc-gnulib.c: Use GC_USE_RANDOM.

2006-03-01  Simon Josefsson  <jas@extundo.com>

	* readline.c: Fix typo, tiny patch from Stepan Kasal
	<kasal@ucw.cz>.

2006-02-28  Simon Josefsson  <jas@extundo.com>

	* getopt.c: Protect #include of unistd.h, for MSVS.

2006-02-27  Simon Josefsson  <jas@extundo.com>

	* base64.h: Indent #define's.  From Jim Meyering
	<jim@meyering.net>.

2006-02-27  Jim Meyering  <jim@meyering.net>

	Revert the change of 2006-02-24, so these files can continue
	to be sync'd from gettext.
	* mkdtemp.c, setenv.c, unsetenv.c: *Un*-normalize inclusion
	of `config.h'.

2006-02-24  Paul Eggert  <eggert@cs.ucla.edu>

	* glob.c: Say "invalid" rather than "illegal" in comments.

2006-02-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* mkdtemp.c, setenv.c, unsetenv.c: Normalize inclusion of `config.h'.

2006-02-20  Paul Eggert  <eggert@cs.ucla.edu>

	* getcwd.c (AT_FDCWD): Work around a bug in Solaris 9 and 10, where
	AT_FDCWD exceeds INT_MAX.
	* openat.h (AT_FDCWD): Likewise.

2006-02-14  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.

	Eliminate the unwelcome (albeit unlikely) possibility of xmalloc
	failure on deficient systems, and simplify gnulib lgpl dependencies.
	* lstat.c (rpl_lstat): Rewrite to use stat() in place of the
	xmalloc/lstat combination.  Based on a patch from Bruno Haible.

	* xalloc-die.c: Remove unused definition of N_.

2006-02-13  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-fmtstream.c: Restore another bugfix lost on 2005-12-12

2006-02-07  Paul Eggert  <eggert@cs.ucla.edu>

	* closeout.c (close_stdout): Don't assume 'bool' converts nonzero
	ints to 0 or 1, as this isn't true for the stdbool.h substitute.

2006-02-07  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-namefrob.h: Restore changes accidentally lost during the
	"autoupdate" on 2005-12-12.

2006-01-27  Paul Eggert  <eggert@cs.ucla.edu>

	* fnmatch.c (L_): Renamed from L, to work around a bug in
	Mac OS X 10.3.9 with GCC 3 reported by Claudio Fontana in
	<http://lists.gnu.org/archive/html/bug-gnulib/2006-01/msg00074.html>.
	All uses changed.

2006-01-26  Simon Josefsson  <jas@extundo.com>

	* socket_.h: Set WINVER to 0x0501, to make sure getaddrinfo
	prototype is visible on mingw32.

	* getaddrinfo.h: Define EAI_ADDRFAMILY and EAI_SYSTEM if not set,
	for mingw32.

	* gai_strerror.c, getaddrinfo.h: Protect netdb.h #include (for
	mingw32).

2006-01-26  Paul Eggert  <eggert@cs.ucla.edu>

	* fts.c (diropen): Open with O_NOCTTY | O_NONBLOCK too.  Don't
	attempt to open for write; this always fails, at least on POSIX
	hosts.  This reinstates the 2006-01-09 change, which was
	inadvertently removed.

2006-01-26  Bruno Haible  <bruno@clisp.org>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* stdbool_.h (_Bool)
	[(! (defined __cplusplus || defined __BEOS__)
	  && !defined __GNUC__
	  && !(defined __HP_cc || defined __xlc__
	       || (defined __SUNPRO_C && (__SUNPRO_C < 0x550 || __STDC__ == 1))
	       || defined __sgi))]:
	#define to signed char in these cases too; this simplifies
	the code (so that we don't have to worry about HP-UX, AIX, SunPRO,
	etc., separately) and makes it more conservative.

2006-01-21  Jim Meyering  <jim@meyering.net>

	Sync from the stable (b5) branch of coreutils:

	* fts.c (fts_children): Don't let close() clobber errno from
	failed fchdir().

	* fts.c (fts_stat): When following a symlink-to-directory,
	don't necessarily interpret stat-fails+lstat-succeeds as indicating
	a dangling symlink.  That can also happen at least for ELOOP.
	The fix: return FTS_SLNONE only when the stat errno is ENOENT.
	FYI, this bug predates the inclusion of fts.c in coreutils.

	* fts.c (fts_open): Put new maxarglen declaration and uses
	in their own block, so pre-c99 compilers don't object.

	Avoid the double-free (first in fts_read, second in fts_close) that
	would occur when an `active' directory is made inaccessible (e.g.,
	via chmod a-x) during a traversal.
	* fts.c (fts_read): After a failed fchdir, update sp->fts_cur
	before returning.  Reproduce this failure by
	mkdir -p a/b; cd a; chmod a-x . b
	Reported by Stavros Passas.

2006-01-25  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-namefrob.h: Bugfix. Remove stray #

2006-01-25  Bruno Haible  <bruno@clisp.org>

	* stdbool_.h (_Bool) [IRIX cc]: Define as 'signed char', to avoid
	warnings.
	Reported by Paul Eggert.

2006-01-25  Jim Meyering  <jim@meyering.net>

	* fileblocks.c: Remove more useless parentheses.
	* readutmp.h: Likewise.

2006-01-24  Bruno Haible  <bruno@clisp.org>

	* stdbool_.h (_Bool) [__cplusplus]: Don't define if the compiler already
	has it.
	Report and patch by Albert Chin-A-Young  <china@thewrittenword.com> on
	2005-11-26.

	* stdbool_.h (_Bool) [HP-UX cc, AIX cc,xlc]: Define as 'signed char'
	to avoid problems with the built-in _Bool type.
	Reported by Paul Eggert on 2005-11-26.

2006-01-24  Jim Meyering  <jim@meyering.net>

	* socket_.h: Remove useless parentheses in uses of cpp `defined'.

2006-01-24  Simon Josefsson  <jas@extundo.com>

	* socket_.h (SHUT_WR, SHUT_RDWR): Don't hardcode, suggested by
	Bruno.

2006-01-23  Paul Eggert  <eggert@cs.ucla.edu>

	Work around porting bugs reported by Dieter in
	<http://lists.gnu.org/archive/html/bug-bison/2006-01/msg00049.html>.
	* getopt.c (_NOPROTO): Remove; no longer needed.
	Include <stdlib.h> and <unistd.h> in all environments; it's safe now.
	Include "getopt.h" first, to check interface.
	(getenv): Declare only if defined HAVE_DECL_GETENV &&
	!HAVE_DECL_GETENV.
	* strndup.c [!_LIBC]: Include "strndup.h" to get prototype.
	(__strndup): Revert to K&R-style function dfns, the glibc style.
	* strnlen.c: Don't claim it's taken from glibc; it's not.
	(strnlen, __strnlen): Remove #defines and #undefs; not needed.
	Include strnlen.h first, to get prototype properly.
	(strnlen): Renamed from __strnlen.
	Remove weak alias.

2006-01-23  Ulrich Drepper  <drepper@redhat.com>

	These changes imported from libc.
	* getopt.c: Use __fxprintf instead of inline stream orientation
	test and two separate function calls.
	* strndup.c (__strndup): Add libc_hidden_def.

2006-01-22  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (VASNPRINTF): In the computation of the size of the
	temporary buffer for sprintf, take into account the precision also
	for 'd', 'i', 'u', 'o', 'x', 'X'.

2006-01-22  Paul Eggert  <eggert@cs.ucla.edu>

	* quotearg.c (quotearg_buffer_restyled): Add "default: break;"
	to pacify gcc -Wswitch-default.

2006-01-21  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-help.c (usage_long_opt): Do not print DOC options.
	(__argp_base_name): Removed
	* argp-namefrob.h (__argp_basename): Removed definition. Was a
	typo.
	(__argp_base_name): Provide macro definition or extern declaration
	depending on the configuration

2006-01-20  Simon Josefsson  <jas@extundo.com>

	* inet_ntop.h: Unconditionally include sys/socket.h.

2006-01-19  Simon Josefsson  <jas@extundo.com>

	* socket_.h: Map SHUT_RD, SHUT_WR, SHUT_RDWR correctly.

2006-01-12  Simon Josefsson  <jas@extundo.com>

	* base64.c: Fix warning, reported by Bruno Haible
	<bruno@clisp.org> and patch by Paul Eggert <eggert@CS.UCLA.EDU>.

2006-01-11  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.
	* md5.c: Fix commentary typos.
	(alignof, UNALIGNED_P): No need for a GCC-specific version.
	* md5.h (__attribute__): Remove; unused.
	* sha1.c: Fix commentary to match md5 better.
	* sha1.h (struct sha1_ctx): Use a word buffer, not a byte buffer,
	so that we don't need to worry about alignment.  All uses changed.
	This merges the 2005-10-28 md5 change into sha1.

2006-01-11  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.
	* md5.c (OP): Fix spacing.

2006-01-11  Simon Josefsson  <jas@extundo.com>

	* stdint_.h (SIZE_MAX): Add missing (.

2006-01-10  Bruno Haible  <bruno@clisp.org>

	* argp.h (__const): Remove macro. Use const instead.
	* argp-fmtstream.h (__const): Likewise.
	* glob_.h (__const): Remove macro.
	* glob-libc.h: Use const instead of __const.

2006-01-10  Jim Meyering  <jim@meyering.net>

	Avoid the double-free (first in fts_read, second in fts_close) that
	would occur when an `active' directory is made inaccessible (e.g.,
	via chmod a-x) during a traversal.
	* fts.c (fts_read): After a failed fchdir, update sp->fts_cur
	before returning.  Reproduce this failure by
	mkdir -p a/b; cd a; chmod a-x . b
	Reported by Stavros Passas.

	Sync from coreutils.
	* sha1.c: Tweak grammar in a comment.

2006-01-10  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.h (BITSET_WORD_BITS):
	Work around a bug in 64-bit PGC (before version 6.1-2), where the
	preprocessor mishandles large unsigned values as if they were signed.
	Problem reported by Claudio Fontana in
	<http://lists.gnu.org/archive/html/bug-gnulib/2005-12/msg00061.html>.

2006-01-10  Simon Josefsson  <jas@extundo.com>

	* socket_.h: New file.

2006-01-10  Bruno Haible  <bruno@clisp.org>

	* localcharset.c: Update from GNU gettext.

2006-01-09  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.
	* chdir-long.c (cdb_free): Don't bother trying to open directory
	for write access: POSIX says that must fail.
	* fts.c (diropen): Likewise.
	* save-cwd.c (save_cwd): Likewise.
	* chdir-long.c (cdb_free): Open with O_NOCTTY | O_NONBLOCK as
	well, for minor improvements on hosts that lack O_DIRECTORY.
	* chown.c (rpl_chown) [CHOWN_MODIFIES_SYMLINK]:
	Don't try O_WRONLY unless O_RDONLY failed wth EACCES.
	Fall back on chown if open failed with EACCES.

	* gettime.c (gettime) [!defined OK_TO_USE_1S_CLOCK]:
	Report an error at compile-time if only a 1-second nominal clock
	resolution is found.

	* lchmod.h: New file.
	* mkdir-p.c: Include lchmod.h, lchown.h.
	(make_dir_parents): Use lchown rather than chown, and
	lchmod rather than chmod.

	* mountlist.c (ME_DUMMY): "none" and "proc" file systems are dummies
	too.  Problem with "none" reported by Bob Proulx.  Problem with
	"proc" reported by n0dalus.

	* mountlist.c: Include <limits.h>.
	(dev_from_mount_options)
	[defined MOUNTED_GETMNTENT1 || defined MOUNTED_GETMNTENT2]:
	New function.  It no longer assumes "dev=" has the System V meaning
	on Linux (since it doesn't).  It also parses "dev=" more carefully.
	(read_file_system_list)
	[defined MOUNTED_GETMNTENT1 || defined MOUNTED_GETMNTENT2]: Use it.
	MOUNTED_GETMNTENT2 is new here; the code didn't used to look for
	dev= in that case.

	* posixtm.h (PDS_PRE_2000): New macro.
	* posixtm.c (year): Arg is now syntax_bits rather than allow_century.
	All usages changed.  Reject dates outside the range 1969-1999 if
	PDS_PRE_2000 is used.

2006-01-09  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.

	* version-etc.c (COPYRIGHT_YEAR): Update to 2006.

	* chdir-safer.h, chdir-safer.c: New files.

	* modechange.c (mode_compile): Reject an invalid mode string
	that starts with an octal digit.  From Andreas Gruenbacher.

	* openat.c: Include "fcntl--.h" and "unistd--.h", to map open
	and dup to open_safer and dup_safer, respectively.
	(openat_permissive): Fix typo in comment.

	* openat.c: Don't include <stdlib.h>, <unistd.h>, <fcntl.h>,
	"gettext.h"; either no longer needed or are guaranteed by openat.h.
	(_): Remove; no longer needed.
	(openat): Renamed from rpl_openat; no need for rpl_openat
	since openat.h renames openat for us.
	Replace most of the body with a call to openat_permissive,
	to avoid duplicate code.
	Port to (probably hypothetical) environments were mode_t is
	wider than int.
	(openat_permissive): Require mode arg, so that we can check
	types better.  Put it just after flags.  Change cwd failure
	indicator from pointer-to-bool to pointer-to-errno-value.
	All callers changed.
	Invoke openat_save_fail and/or openat_restore_fail if
	cwd_errno is null, so that openat can call us.
	(openat_permissive, fdopendir, fstatat, unlinkat):
	Simplify errno handling to avoid some duplicate code,
	as it's OK to set errno on success.
	* openat.h: Revamp code so that function macros depend on
	__OPENAT_PREFIX only, not also on AT_FDCWD.
	(openat_ro): Remove.  Caller changed to use openat_permissive.
	(openat_permissive): Now a macro, if not a function.
	(openat_restore_fail, openat_save_fail): Now always functions,
	since mkdirat needs them even if __OPENAT_PREFIX is defined.

	* openat-priv.h: New file, defining macros used by mkdirat.c
	and openat.c.
	* mkdirat.c: Include openat-priv.h.
	Remove definitions of macros defined therein.
	* openat.c: Likewise.

	* mkdirat.c (mkdirat): New file and function.
	* openat.h (mkdirat): Declare.

	* openat.c (fdopendir): Don't change errno when returning non-NULL.

	* openat.h (openat_permissive): Declare.
	(openat_ro): Define.

	* openat.c (EXPECTED_ERRNO): New macro.
	(openat_permissive): New function -- used in remove.c rewrite.
	(all functions): Set errno just before returning, only if there
	was an actual failure.
	Use EXPECTED_ERRNO rather than comparing against only ENOTDIR.

	Emulate openat-family functions using Linux's procfs, if possible.
	Idea and some code based on Ulrich Drepper's glibc changes.

	* openat.c: (BUILD_PROC_NAME): New macro.
	Include <stdio.h>, <string.h>, "alloca.h" and "intprops.h".
	(rpl_openat): Emulate by trying to open /proc/self/fd/%d/%s,
	before falling back on save_cwd and restore_cwd.
	(fdopendir, fstatat, unlinkat): Likewise.

	* openat.c (fstatat, unlinkat): Perform the syscall directly,
	skipping the save_cwd...restore_cwd overhead, if FILE is absolute.

	* openat.c (rpl_openat): Use the promoted type (int), not mode_t,
	as second argument to va_arg.  Otherwise, some versions of gcc
	warn that `if this code is reached, the program will abort'.

2006-01-09  Andreas Gruenbacher  <agruen@suse.de>

	Sync from coreutils.

	Add POSIX ACL support
	* acl.h (copy_acl, set_acl): Add declarations.
	* acl.c (acl_entries): Add fallback implementation for POSIX ACL
	systems other than Linux.
	(chmod_or_fchmod): New function: use fchmod when possible,
	and chmod otherwise.
	(file_has_acl): Add a POSIX ACL implementation, with a
	Linux-specific subcase.
	(copy_acl): Add: copy an acl and S_ISUID, S_ISGID, and
	S_ISVTX from one file to another.  Fall back to fchmod/chmod when
	acls are unsupported.
	(set_acl): Add: set a file's acl and S_ISUID, S_ISGID, and
	S_ISVTX to a defined value.  Fall back to fchmod/chmod when acls
	are unsupported.

2006-01-09  Bruno Haible  <bruno@clisp.org>

	* sysexit_.h (EX_OK): New macro.
	Suggested by Martin Lambers <marlam@marlam.de>.

2006-01-09  Bruno Haible  <bruno@clisp.org>

	* javacomp.sh.in: Move to ../build-aux/javacomp.sh.in.
	* javaexec.sh.in: Move to ../build-aux/javaexec.sh.in.
	* csharpcomp.sh.in: Move to ../build-aux/csharpcomp.sh.in.
	* csharpexec.sh.in: Move to ../build-aux/csharpexec.sh.in.

2006-01-09  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (SIZE_MAX): Write the value without involving negative
	numbers.

2005-10-16  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: On Linux libc4 and libc5, include <sys/bitypes.h> and
	don't define _STDINT_H_NEED_SIGNED_INT_TYPES.

2006-01-04  Paul Eggert  <eggert@cs.ucla.edu>

	* strftime.c (tzname): Don't declare if it is already #defined.
	Problem reported for Mingw by Mark Junker.

2006-01-03  Paul Eggert  <eggert@cs.ucla.edu>

	* xtime.h (xtime_make, xtime_nonnegative_nsec, xtime_nsec): Use
	long int, not int, for nanosecond counts, so that people who are
	used to POSIX struct timespec won't be surprised.  Reported by Jim
	Meyering.

2005-12-16  Jim Meyering  <jim@meyering.net>

	* fprintftime.c, fprintftime.h: New files.

2005-12-10  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-fmtstream.c (__argp_fmtstream_update): Fix coredump
	* argp-help.c (fill_in_uparams): Check if the constructed
	struct uparams is valid. Fall back to the default values if it is
	not.

2005-12-09  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-help.c (__argp_base_name): New function
	(__argp_short_program_name): Rewrite using __argp_base_name
	* argp-namefrob.h: Define program_invocation_name and
	program_invocation_short_name if requested
	(__argp_base_name): Add prototype
	* argp-parse.c (argp_def): Use gettext wrappers
	(argp_default_parser): Use __argp_base_name
	* argp-pin.c: New file. Defines program_invocation_name and
	program_invocation_short_name on systems that lack them.

2005-12-07  Paul Eggert  <eggert@cs.ucla.edu>

	* stat-time.h (STATE_TIMESPEC, STAT_TIMESPEC_NS): Add check for
	TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC, to fix IRIX 5.3
	porting problem reported by Georg Schwarz in
	<http://lists.gnu.org/archive/html/bug-coreutils/2005-12/msg00083.html>.

2005-07-09  Bruno Haible  <bruno@clisp.org>

	* csharpcomp.sh.in (options_csc): For -l option, add a .dll suffix.
	* csharpcomp.c (compile_csharp_using_sscli): Likewise.
	Reported by Mark Junker <mjscod@gmx.de>.

2005-11-29  Paul Eggert  <eggert@cs.ucla.edu>

	* stdint_.h (intmax_t) [defined intmax_t]: Do not declare.
	(uintmax_t) [defined uintmax_t]: Do not declare.
	(SIZE_MAX) [defined SIZE_MAX]: Do not define.
	This works around a problem if intmax_t.m4 and/or uintmax_t.m4
	and/or size_max.m4 are also used.  Problem reported by Mark D. Baushke.
	(SIZE_MAX): Define to ((size_t) -1), not (~(size_t)0), for the
	sake of portability to weird hosts that C allows (though we don't
	know of any practical examples).

	* savedir.h (fdsavedir): New decl.
	* savedir.c (fdsavedir, savedirstream): New functions; the latter
	contains most of the former guts of savedir.
	(savedir): Use savedirstream.
	Include "openat.h".

2005-11-15  Paul Eggert  <eggert@cs.ucla.edu>

	* xstrtod.c: Don't bother with #pragma STDC FENV_ACCESS ON, as
	coreutils no longer futzes with rounding modes.

2005-11-14  Jim Meyering  <jim@meyering.net>

	* mkstemp-safer.c: Include <config.h>, required for possible
	replacement of mkstemp.

2005-11-10  Paul Eggert  <eggert@cs.ucla.edu>

	* gethrxtime.c: Include "timespec.h" rather than the sys/time / time
	business.
	(gethrxtime) [! (HAVE_NANOUPTIME
	|| (defined CLOCK_MONOTONIC && HAVE_CLOCK_GETTIME)
	|| HAVE_MICROUPTIME)]: Fall back on gettime rather than rolling
	our own approximation.

2005-11-10  Simon Josefsson  <jas@extundo.com>

	* readline.c: Remove EOL.

2005-11-08  Eric Blake  <ebb9@byu.net>

	* inet_ntop.h: Use #if !, not #ifndef, for AC_CHECK_DECLS.

2005-11-08  Eric Blake  <ebb9@byu.net>

	* getaddrinfo.h: Use #if !, not #ifndef, for AC_CHECK_DECLS.

2005-10-30  Paul Eggert  <eggert@cs.ucla.edu>

	Fix porting problem reported by Theodoros V. Kalamatianos.
	* utimens.c (futimens) [HAVE_WORKING_UTIMES && HAVE_FUTIMES]:
	Don't assume that futimes failing means we must fail.

2005-10-29  Paul Eggert  <eggert@cs.ucla.edu>

	* getcwd.c (__getcwd): Don't assume that system calls after readdir
	leave errno alone.  Problem reported by Dmitry V. Levin.

2005-10-28  Paul Eggert  <eggert@cs.ucla.edu>

	* savedir.c (savedir): Don't assume that xrealloc etc. leave
	errno alone.  Problem reported by Frederic Jolliton.

2005-10-28  Simon Josefsson  <jas@extundo.com>

	* inet_ntop.h, inet_ntop.c: Make it work under mingw32: Add
	"restrict" keywords, as per POSIX.  Protect the function
	declaration around HAVE_DECL_INET_NTOP rather than HAVE_INET_NTOP.
	Don't use K&R prototypes.  Check the sprintf return values.
	Re-define EAFNOSUPPORT if not present.  Indent.

	* md5.h, md5.c: Simplify buffer handling visavi alignment,
	suggested by Bruno Haible <bruno@clisp.org>.

	* gc-gnulib.c, gc-libgcrypt.c: Check calloc return value.

	* gc.h: Add MD2 and RMD160 length defines.  Add prototypes.

	* gc-libgcrypt.c: Add MD2 (which is not available through
	libgcrypt).

	* gc-gnulib.c: Add MD2.  Implement gc_hash_* API.

	* md2.h, md2.c: New files.

2005-10-24  Simon Josefsson  <jas@extundo.com>

	* md4.h: Shrink buffer size, now that we changed the type.

2005-10-22  Simon Josefsson  <jas@extundo.com>

	* arcfour.h, arcfour.c: Use fixed size indices in the
	arcfour_context struct (simplify test vector testing in GNU
	Shishi).

2005-10-22  Simon Josefsson  <jas@extundo.com>

	* md4.h, md4.c: Simplify buffer handling visavi alignment,
	suggested by Bruno Haible <bruno@clisp.org>.

2005-10-22  Simon Josefsson  <jas@extundo.com>

	* crc.h: Include stddef.h, for size_t.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* arctwo.h (arctwo_setkey): Protect variable in CPP macro,
	suggested by Ralf Wildenhues <Ralf.Wildenhues@gmx.de>.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* rijndael-api-fst.c: Fix bugs in CBC mode for more than one
	block.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* gc-gnulib.c: Support ARCTWO in CBC mode.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* hmac-md5.c (hmac_md5): Add comments, suggested by Bruno Haible
	<bruno@clisp.org>.

	* hmac-sha1.c (hmac_sha1): Likewise.

	* crc.c (crc32_update): Actually use crc parameter, suggested by
	Bruno Haible <bruno@clisp.org>.

	* crc.h: Include stdint.h directly, suggested by Bruno Haible
	<bruno@clisp.org>.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* des.h, des.c: New files.

	* gc-gnulib.c: Support DES.c

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* arctwo.h, arctwo.c: New files.

	* gc-gnulib.c: Support ARCTWO.

2005-10-21  Simon Josefsson  <jas@extundo.com>

	* gc-libgcrypt.c (gc_cipher_open): Handle ECB.

2005-10-19  Simon Josefsson  <jas@extundo.com>

	* gc-gnulib.c: Support ARCFOUR.

2005-10-19  Simon Josefsson  <jas@extundo.com>

	* gc-gnulib.c: Implement gc_cipher_* API, currently only with AES
	support.

	* gc.h: Add ECB enum type.

	* hmac-md5.c, hmac-sha1.c: Include memxor.h.

2005-10-19  Simon Josefsson  <jas@extundo.com>

	* gc.h, gc-gnulib.c, gc-libgcrypt.c: Support MD4.

2005-10-18  Simon Josefsson  <jas@extundo.com>

	* md4.h, md4.c: New files, based on md5.?.

2005-10-17  Simon Josefsson  <jas@extundo.com>

	* gc-libgcrypt.c (gc_hmac_sha1): Fix assert.

	* gc.h (gc_nonce, gc_pseudo_random, gc_random): Add prototypes.

2005-10-17  Simon Josefsson  <jas@extundo.com>

	* gc.h, gc-libgcrypt.c: Add more hash types/functions.

2005-10-17  Simon Josefsson  <jas@extundo.com>

	* gc.h, gc-libgcrypt.c: Add ciphers.

2005-10-17  Simon Josefsson  <jas@extundo.com>

	* sha1.c: Use uint32_t instead of md5_uint32.t

	* sha1.h: Use stdint.h and uint32_t instead of md5_uint32 from
	md5.h.

	* md5.c: Use uin32_t.  Fix non-gcc UNALIGNED_P macro.

	* md5.h: Use stdint.h and uint32_t.  Doc fix.

2005-10-15  Simon Josefsson  <jas@extundo.com>

	* rijndael-api-fst.h, rijndael-api-fst.c: New files.

	* rijndael-alg-fst.h, rijndael-alg-fst.c: New files.

2005-10-14  Simon Josefsson  <jas@extundo.com>

	* arcfour.h, arcfour.c: New files.

2005-10-14  Paul Eggert  <eggert@cs.ucla.edu>

	* obstack.c [defined _LIBC && defined USE_IN_LIBIO]: Don't
	include <wchar.h>; no longer needed.

2005-10-14  Jakub Jelinek  <jakub@redhat.com>
	and  Ulrich Drepper  <drepper@redhat.com>

	Import from libc.
	* obstack.c (print_and_abort) [defined _LIBC]: Use __fxprintf
	instead of inline stream orientation test and two separate
	function calls.  Pay no attention to USE_IN_LIBIO.

2005-10-14  Roland McGrath  <roland@redhat.com>

	Import from libc.  [BZ #1331]
	* obstack.h [!__STDC__] (obstack_int_grow_fast): Fix misnamed
	macro argument.
	Reported by Matej Vela <vela@debian.org>.

2005-10-13  Paul Eggert  <eggert@cs.ucla.edu>

	* mkdir-p.c (make_dir_parents): Don't report an error if an
	intermediate directory is in a read-only file system.  Problem
	reported by Eric Blake.

2005-10-13  Simon Josefsson  <jas@extundo.com>

	* gc-pbkdf2-sha1.c (gc_pbkdf2_sha1): Optimize CEIL computation.
	Move memory allocation outside of loop.

2005-10-12  Simon Josefsson  <jas@extundo.com>

	* gc-pbkdf2-sha1.c: New file.

	* gc.h: Add gc_pbkdf2_sha1 prototype.

2005-10-12  Simon Josefsson  <jas@extundo.com>

	* gc.h, gc-gnulib.c, gc-libgcrypt.c: Use Gc_rc for return types,
	suggested by Bruno Haible <bruno@clisp.org>.

2005-10-12  Simon Josefsson  <jas@extundo.com>

	* gc-libgcrypt.c (gc_hmac_sha1): New function.

	* gc-gnulib.c (gc_hmac_sha1): New function.

2005-10-12  Simon Josefsson  <jas@extundo.com>

	* gc.h, gc-gnulib.c, gc-libgcrypt.c: Support SHA-1.

2005-10-12  Simon Josefsson  <jas@extundo.com>

	* gc-gnulib.c: Condition MD5 and HMAC-MD5 use on GC_USE_MD5 and
	GC_USE_HMAC_MD5, respectively.

	* gc-libgcrypt.c (gc_md5): Fix assert call.
	(gc_md5): Fix typo.

	* gc.h (gc_hash_buffer): Use gc_hash in prototype.

	* gc-libgcrypt.c (gc_hash_buffer): Ditto.

	* gc-gnulib.c (gc_hash_buffer): Ditto.

2005-10-11  Bruno Haible  <bruno@clisp.org>

	* c-strcasestr.h: New file, from GNU gettext.
	* c-strcasestr.c: New file, from GNU gettext.

2005-10-11  Bruno Haible  <bruno@clisp.org>

	* c-strcase.h: New file, from GNU gettext.
	* c-strcasecmp.c: New file, from GNU gettext.
	* c-strncasecmp.c: New file, from GNU gettext.

2005-10-11  Simon Josefsson  <jas@extundo.com>

	* crc.h, crc.c: New files.

	* gc.h (gc_hash_buffer): Add doc.

2005-10-08  Simon Josefsson  <jas@extundo.com>

	* gc.h: Add gc_hash and gc_hash_buffer.

	* gc-gnulib.c (gc_hash_buffer): Add.  Reorder #include's.

	* gc-libgcrypt.c (gc_hash_buffer): Add.

2005-10-11  Bruno Haible  <bruno@clisp.org>

	* strcasecmp.c: Include limits.h.
	(strcasecmp): Avoid integer overflow on exotic platforms.
	* strncasecmp.c: Include limits.h.
	(strncasecmp): Avoid integer overflow on exotic platforms.
	Reported by Paul Eggert.

2005-10-06  Simon Josefsson  <jas@extundo.com>

	* hmac-md5.c: New file.

	* hmac.h: New file.

2005-10-06  Simon Josefsson  <jas@extundo.com>

	* memxor.c (memxor): Avoid casts and warnings.

2005-10-05  Derek Price  <derek@ximbiot.com>

	* getdelim.c (SIZE_MAX): New macro, if not already defined.

2005-10-05  Simon Josefsson  <jas@extundo.com>

	* memxor.c (memxor): Fix compiler error.

	* md5.h (MD5_DIGEST_SIZE, MD5_BLOCK_SIZE): Add, see also
	<http://sourceware.org/bugzilla/show_bug.cgi?id=1423>.

	* memxor.h, memxor.c: New files.

	* getaddrinfo.h: Don't protect sys/types.h with HAVE_SYS_TYPES_H,
	we assume all systems have it, suggested by Jim Meyering
	<jim@meyering.net>.  Remove HAVE_SYS_SOCKET_H test too, to see if
	any systems lack sys/socket.h; mingw32 is known to lack it, but we
	don't support it yet anyway.  Also remove HAVE_NETDB_H test, for
	same reasons.

2005-10-04  Bruno Haible  <bruno@clisp.org>

	* verify.h (verify_true): Provide alternative definition for C++.

2005-10-04  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.h: Move sys/types.h include first, reported by "Mark
	D. Baushke" <mdb@gnu.org>.

2005-10-03  Paul Eggert  <eggert@cs.ucla.edu>

	* getdelim.c: Include getdelim.h first.  Include <limits.h>.
	(SSIZE_MAX): New macro, if not already defined.
	(getdelim): Fix buffer overrun on 64-bit hosts with lines longer
	than 2 GiB.

2005-10-02  Paul Eggert  <eggert@cs.ucla.edu>

	* exclude.c: Include verify.h.
	(verify): Remove.  All callers changed to use verify.h's version.
	* strtoimax.c: Likewise.
	* utimecmp.c: Likewis.e

	Sync from coreutils.
	* .cppi-disable: Add getaddrinfo.h, getdelim.h, getline.h, getpass.c
	mbchar.h, mbuiter.h, strcase.h, strnlen.h, strnlen1.h.
	* .cvsignore: Add fts.h, search.h, t-fpending.
	* settime.c (settime): Fix { typo in previous patch.  Also, don't
	bother returning ENOSYS if settimeofday or stime fails; just let
	them return whatever errno they want to return.
	* utimens.c: Include unistd.h, for dup2.
	(futimens): Fix typo: HAVE_FUTIMESAT was misspelled in an #if.
	(futimens) [! HAVE_FUTIMESAT]: If !file, set errno before returning -1.

2005-10-02  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.
	* fts-cycle.c [HAVE_CONFIG_H]: Include <config.h>.
	* openat-die.c: Use `#ifdef HAVE_CONFIG_H', not `#if HAVE_CONFIG_H'.
	* openat.c (fdopendir): Do not define if HAVE_FDOPENDIR.
	Remove AT_FDCWD test.
	Do not consume the fd unless successful.
	* openat.h (fdopendir): Do not define if HAVE_FDOPENDIR.
	* settime.c (settime): Move the HAVE_STIME block `up' into an #elif
	block, so that we don't even try to compile it if settimeofday is
	available.  This works around a compilation failure on OSF1 V5.1,
	due to stime requiring a `long int*' while tv_sec is `int'.

2005-09-30  Eric Blake  <ebb9@byu.net>  (tiny change)

	* getdelim.c (getdelim): Remove unused variables.

2005-10-01  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.h: Protect #include's of sys/socket.h and netdb.h.
	Only define struct addrinfo if !HAVE_STRUCT_ADDRINFO.  Protect
	AI_* and EAI_* definitions.  Protect function declarations.

2005-09-29  Paul Eggert  <eggert@cs.ucla.edu>

	* xtime.h (XTIME_PRECISION): Now of type int, not long long int,
	so that the code works even with ancient cpp.  Portability problem
	with GCC 2.7.2.1 reported by Thomas M.Ott.

2005-09-27  Jim Meyering  <jim@meyering.net>

	* getcwd.c: Change #ifdef<TAB>HAVE_CONFIG_H to #ifdef HAVE_CONFIG_H.

	* intprops.h (signed_type_or_expr__): Define.
	(INT_STRLEN_BOUND) [__GNUC__]: Use a slightly tighter bound
	for unsigned types.

2005-09-26  Paul Eggert  <eggert@cs.ucla.edu>

	* verify.h (verify_expr): Remove, replacing with:
	(verify_true): New macro that returns true instead of void.
	(verify_type__): Remove.
	(verify): Use verify_true rather than verify_type__.

2005-09-24  Paul Eggert  <eggert@cs.ucla.edu>

	* utimens.c (ENOSYS): Define if not already defined.
	(futimens): Support having a null PATH if the file descriptor
	is nonnegative.

	* regex_internal.h (__GNUC_PREREQ, always_inline, inline, pure):
	Remove.
	(__attribute): Define to empty unless GCC 3.1 or later.
	This works around a core dump on OpenBSD 3.4, which has GCC
	2.95.3, which dumps core when given __attribute__(()).  It also
	simplifies other tests, since we really don't want to bother with
	worrying about which ancient version of GCC supported what.
	Original problem reported by Yoann Vandoorselaere, with part of
	the fix suggested by Derek Price.

2005-09-24  Jim Meyering  <jim@meyering.net>

	* verify.h (verify_type__): Use `unsigned int' as the bitfield type
	so we can once again use a positive bitfield width of 1 -- now we
	don't have to explain why we were using a bitfield width of 2.

2005-09-23  Paul Eggert  <eggert@cs.ucla.edu>

	* getaddrinfo.c [HAVE_NETINET_IN_H]: Include <netinet/in.h>.
	Problem reported by Eric Blake.
	(getaddrinfo): Initialize se so that it's not garbage.
	Redo internal storage allocation so that it doesn't make unportable
	assumptions about alignment.
	Fix a memory leak.

	* utimens.c (futimens): Use futimesat if available.
	Prefer it to futimes since it doesn't have the futimes bug.

	* verify.h (GL_CONCAT0, GL_CONCAT): Remove.
	(verify): Don't use the __LINE__ trick, as it doesn't work in general.
	Instead, declare a function that returns a pointer to an array,
	and use verify_type__ to declare the size of the array.
	Problem and germ of a solution reported by Bruno Haible.
	(verify_type__): Use 2, not 1, for bitfield size, to avoid
	a warning with Irix 6.5 cc.  Problem reported by Bruno Haible.

2005-09-22  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.

	* .cppi-disable: Add regcomp.c, regex_internal.c, regex_internal.h,
	stat-time.h.
	* argmatch.h: Include verify.h
	(ARGMATCH_VERIFY): Use verify rather than rolling our own.
	(ARGMATCH_ASSERT): Remove; unused.
	* canonicalize.c: Assume STDC_HEADERS.
	* exclude.c: Include "strcase.h".
	* regex_internal.h [!defined _LIBC]: Likewise.
	* getusershell.c: Include stdio--.h rather than stdio.h
	and stdio-safer.h.
	(getusershell): Call fopen, not fopen_safer.
	* save-cwd.c: Include fcntl--.h rather than fcntl.h.
	Do not include unistd-safer.h.
	(save_cwd): Don't call fd_safer; no longer needed
	now that we include fcntl--.h.

	* getdate.y (relative_time): New type.
	(RELATIVE_TIME_0): New constant.
	(parser_control): Use relative_time instead of doing it ourselves.
	(%union): Add new relative_time rel member.
	(tYEAR_UNIT, tMONTH_UNIT, tHOUR_UNIT, tMINUTE_UNIT, tSEC_UNIT):
	Now typeless.
	(relunit, relunit_snumber): Now of type rel.
	(zone, rel, relunit, get_date): Adjust to above changes.

	* getloadavg.c: Include fcntl--.h rather than fcntl.h.
	Do not include unistd-safer.h.
	(getloadavg): Don't call fd_safer; no longer needed
	now that we include fcntl--.h.

	* mkdir-p.c (ENOSYS): Define to EEXIST if not defined.
	(make_dir_parents): Treat ENOSYS like EEXIST.

	Improve quality of diagnostics on restore_cwd failure.
	* mkdir-p.h (make_dir): Remove.  All uses replaced by mkdir.
	(make_dir_parents): Last arg is now int * (for errno), not bool *.
	* mkdir-p.c (make_dir, make_dir_parents): Likewise.
	Rewrite "mkdir -p" algorithm to avoid the need for "stat"
	each time through the loop.  Do not diagnose restore_cwd failure;
	that is the caller's job (and perhaps the caller does not care).

	* mkdir-p.c (CLEANUP_CWD, CLEANUP): Remove.
	(make_dir_parents): Revamp to avoid need for CLEANUP_CWD, CLEANUP.
	If the file already exists but is not a directory, don't bother
	to try to make its parents.
	Close potential file descriptor leak if we can't chdir("/") (!).
	Don't always return true if chdir($PWD) fails; return true only
	if the requested action was done successfully (except for the
	chdir($PWD)).
	Don't log final directory unless we actually made it.
	Refactor to avoid duplicate code to fix up permissions.
	Don't attempt to fix up parent permissions if chdir($PWD) fails.

	* strftime.c (my_strftime): Rewrite the previous change slightly,
	to make it a bit faster and (I hope) clearer.
	* strftime.c (my_strftime): Add support for %:z, %::z, %:::z.
	Fix bug in formats like %2N.

	* verify.h: New file.

2005-09-22  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.

	* backupfile.c: Use ARGMATCH_VERIFY, just in case.

	* posixtm.c (posixtime) [lint]: Initialize *all* of tm0, not just
	the .tm_year member, since otherwise gcc-4.0 would now warn about
	tm_zone, tm_gmtoff, tm_isdst, tm_yday, tm_wday.

	* quotearg.c (quotearg_n_options): Change code to be suboptimal, in
	order to avoid an unsuppressible warning from gcc on 64-bit systems.

	* getdate.y (get_date): Undo part of the 2005-04-04 change, so that
	the command "date -d'2005-03-27 +1 day'" succeeds once again, even
	when run in a time zone for which daylight savings time is in effect
	for the starting date.

	* mkdir-p.c (make_dir_parents): Don't let a failed chdir($PWD)
	stop us from restricting permissions of just-created absolute-named
	directories.
	* mkdir-p.c (CLEANUP_CWD): Return *true*, not false when failing
	to restore initial working directory.
	* mkdir-p.c (make_dir_parents): New parameter: different_working_dir,
	to tell caller if/when we change the working directory and are
	unable to return to the initial one.
	* mkdir-p.h (make_dir_parents): Update prototype.
	* mkdir-p.c (CLEANUP_CWD): Change one more `return 1' to
	`return false'.  This fixes a bug introduced on 2004-07-30.

	* openat.c (fdopendir): Be sure to close the supplied
	file descriptor before returning.  This makes our replacement
	implementation a little closer to Solaris's, where fdopendir
	ties the file descriptor to the returned DIR* pointer.
	* openat.c (unlinkat): New function.
	* openat.h (unlinkat): Add prototype.
	* openat-die.c (openat_save_fail): Rename from openat_save_die.
	(openat_restore_fail): Rename from openat_restore_die.
	* openat.c, openat.h: Reflect s/_die/_fail/ renaming.

	Provide an alternative to exiting immediately upon save_cwd or
	restore_cwd failure.  Now, an application can arrange e.g.,
	to perform a longjump in that case.
	* openat.c: Include dirname.h.
	Use IS_ABSOLUTE_FILE_NAME rather than testing for leading slash.
	(rpl_openat, fdopendir, fstatat): Call openat_save_die
	and openat_restore_die rather than calling error directly.
	Don't include "error.h" or "exitfail.h"; they're no longer needed.

	* openat-die.c (openat_save_die, openat_restore_die): New file.
	* openat.h (openat_save_die, openat_restore_die): Declare and define.

	* strftime.c [FPRINTFTIME] (fprintftime): Provide a new interface:
	size_t fprintftime (FILE *fp, char const *fmt, struct tm const *tm,
			    int utc, int nanoseconds);
	Background:
	date should not have to allocate a megabyte of virtual memory to
	handle a format argument like +%1048575T.  When implemented with
	strftime, it must allocate such a buffer, use strftime to fill it
	in, print it, then free it.
	With fprintftime, it simply prints everything and exits.
	With no need for memory allocation, that's one fewer way to fail.
	* strftime.c (my_strftime): Parse the colons of %:::z *after* the
	optional field width, not before, so we accept %9:z, not %:9z.
	(my_strftime): Be sure to use L_('x') for literals.

	* backupfile.c, canon-host.c, canonicalize.c, chown.c, cloexec.c:
	* dup-safer.c, dup2.c, euidaccess.c, fd-safer.c, fileblocks.c:
	* fopen-safer.c, fsusage.c, ftruncate.c, getcwd.c, getcwd.h:
	* getloadavg.c, getopt_.h, getpagesize.h, getugroups.c, group-member.c:
	* human.h, idcache.c, mkdir-p.c, mountlist.c, nanosleep.c, pathmax.h:
	* physmem.c, posixver.c, putenv.c, raise.c, safe-read.c, same.c:
	* save-cwd.c, setenv.c, settime.c, tempname.c, unlinkdir.c:
	* unsetenv.c, userspec.c, xgethostname.c, xreadlink.c:
	Assume HAVE_UNISTD_H, i.e., include <unistd.h> unconditionally.

	* chown.c, cloexec.c, dup-safer.c, dup2.c, fsusage.c, getcwd.c:
	* getloadavg.c, mountlist.c, openat.h, save-cwd.c, tempname.c:
	Assume HAVE_FCNTL_H (i.e., include <fcntl.h> unconditionally,
	and don't include <sys/file.h>).

2005-09-22  Eric Blake  <ebb9@byu.net>  (tiny change)

	Sync from coreutils.

	* getloadavg.c (getloadavg) [__CYGWIN__]: Port to cygwin.
	[__linux__]: Allocate a big enough buffer for /proc/loadavg.
	[!LDAV_DONE]: Avoid unused variable warning.

2005-09-21  Bruno Haible  <bruno@clisp.org>

	* unicodeio.h (unicode_to_mb): New declaration.

2005-09-20  Derek Price  <derek@ximbiot.com>

	* getaddrinfo.c: Don't include <netdb.h> included from getaddrinfo.h.

2005-09-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	Use a consistent style for including <config.h>.
	* __fpending.c, acl.c, argmatch.c,
	argp-help.c, argp-parse.c,
	argp-pvh.c, backupfile.c, basename.c, c-stack.c,
	calloc.c, check-version.c, cloexec.c, closeout.c, copy-file.c,
	creat-safer.c, cycle-check.c, dirfd.c, dirname.c, dup-safer.c,
	dup2.c, euidaccess.c, exclude.c, exitfail.c, fatal-signal.c,
	fd-safer.c, file-type.c, fileblocks.c, filemode.c,
	filenamecat.c, findprog.c, fnmatch.c, fopen-safer.c, free.c,
	fsusage.c, ftruncate.c, full-write.c, fwriteerror.c,
	getaddrinfo.c, getcwd.c, getdelim.c, getline.c, getlogin_r.c,
	getndelim2.c, getnline.c, getopt1.c, getpass.c, group-member.c,
	hard-locale.c, hash-pjw.c, hash.c, human.c, idcache.c,
	inet_ntop.c, isdir.c, long-options.c, malloc.c, memcasecmp.c,
	memcmp.c, memcoll.c, memcpy.c, memmove.c, mkdir-p.c,
	modechange.c, mountlist.c, open-safer.c, physmem.c,
	pipe-safer.c, pipe.c, poll.c, posixver.c, progname.c,
	progreloc.c, putenv.c, quote.c, quotearg.c, readline.c,
	readlink.c, realloc.c, regex.c, rename.c, rmdir.c, rpmatch.c,
	safe-read.c, same.c, save-cwd.c, savedir.c, sig2str.c,
	strcspn.c, strerror.c, stripslash.c, strncasecmp.c, strndup.c,
	strnlen.c, strnlen1.c, strsep.c, strstr.c, strtod.c,
	strtoimax.c, strtol.c, strverscmp.c, tempname.c, time_r.c,
	userspec.c, utimecmp.c, version-etc-fsf.c,
	version-etc.c, wait-process.c, xalloc-die.c, xgetcwd.c,
	xmalloc.c, xmemcoll.c, xnanosleep.c, xreadlink.c, xsetenv.c,
	xstrndup.c, xstrtoimax.c, xstrtol.c, xstrtoumax.c, yesno.c:
	Standardize inclusion of config.h.
	* __fpending.h, dirfd.h, getdate.h, human.h,
	inttostr.h:  Removed inclusion of config.h from header files.
	* inttostr.c:  Adjusted in-tree users.
	* timespec.h: Remove superfluous warning to include config.h.
	* atexit.c, chdir-long.c chown.c, fchown-stub.c, getgroups.c,
	gettimeofday.c, lchown.c, lstat.c, mkdir.c, mkstemp.c,
	nanosleep.c, openat.c, raise.c, readtokens0.c, readutmp.c,
	unlinkdir.c: Guard inclusion of config.h with HAVE_CONFIG_H.

2005-09-16  Paul Eggert  <eggert@cs.ucla.edu>

	* stat-time.h: New file.
	* timespec.h (ST_TIME_CMP_NS, ST_TIME_CMP, ATIME_CMP, CTIME_CMP):
	(MTIME_CMP, TIMESPEC_NS): Remove.  Now done by stat-time.h,
	in a different way.
	(timespec_cmp): New function.
	* utimecmp.c: Include stat-time.h.
	(SYSCALL_RESOLUTION): Depend on whether various struct stat
	members exist, not on the obsolescent ST_MTIM_NSEC.
	(utimecmp): Use the new stat-time functions rater than TIMESPEC_NS.

2005-09-15  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* regcomp.c, regexec.c, regex_internal.c: Back out previous
	changes, consolidating in...
	* regex_internal.h: ...this file.

2005-09-15  Derek Price  <derek@ximbiot.com>

	* regex_internal.h: Blank `pure' for GNUC < 3.
	* regex_internal.c: Ditto, using this...
	(__GNUC_PREREQ): ...new macro.
	* regcomp.c, regexec.c: Blank `always_inline' for GNUC < 3.1 using...
	(__GNUC_PREREQ): ...this new macro.

	* strstr.h: Include string.h. Define strstr as a macro here.

2005-09-13  Derek Price  <derek@ximbiot.com>

	* canon-host.c (canon_host_r): Set *cherror on memory allocation
	failure.
	Reported by Jim Meyering  <jim@meyering.net>.

2005-09-13  Jim Meyering  <jim@meyering.net>

	* canon-host.c: Filter through gnu indent and reword comments slightly.
	* canon-host.h (ch_strerror_r): Tweak cpp indentation and spacing.

2005-09-12  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>  (tiny change)

	* lib/base64.c: Typo.
	(base64_encode): Put b64str in initialized data section.

2005-09-12  Derek Price  <derek@ximbiot.com>

	Return usable errors from canon-host.
	* canon-host.h: New file.
	* canon-host.c (canon_host): Wrap...
	(canon_host_r): ...this new function, which now relies exclusively on
	getaddrinfo.
	(ch_strerror): New function.
	(last_cherror): New global.
	* getaddrinfo.c: Move include of getaddrinfo.h first to test interface.
	(getaddrinfo): Add AI_CANONNAME functionality.  Don't do arithmetic on
	void *.
	(freeaddrinfo): Free ai->ai_canonname when set.

2005-09-12  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* glob-libc.h: Renamed from glob_.h.  The new version is
	taken from libc's glob.h, except with '#ifdef __GLOB_GNULIB'
	protecting things that should be done only in gnulib contexts.
	* glob_.h: New file, containing only the glob things needed for
	gnulib.
	(GLOB_PREFIX): Remove.  All uses changed to look for __GLOB_GNULIB.
	(__GLOB_CONCAT, __GLOB_XCONCAT, __GLOB_ID): Remove; no longer needed.
	(glob, globfree, glob_pattern_p): Now defined simply in terms of
	rpl_glob, rpl_globfree, rpl_glob_pattern_p.
	(__GLOB_GNULIB): New macro, to keep the glob.h changes clearer
	and to respect the namespace rules better.

2005-09-12  Paul Eggert  <eggert@cs.ucla.edu>

	Merge glibc and coreutils changes into gnulib, plus a few
	extra fixes.
	* md5.c: Use #error rather than a string.
	(CYCLIC): New macro, from glibc source.  Use it instead of rol.
	* md5.h (__GNUC_PREREQ, __THROW): Define if not defined already.
	(__attribute__): Define to empty for non recent-GCC.
	(__md5_buffer, __md5_finish_ctx, __md5_init_ctx, __md5_process_block):
	(__md5_process_bytes, __md5_read_ctx, __md5_stream):
	Renamed from their non-__ counterparts, with new macros replacing
	them if not _LIBC.  Add __THROW attribute.
	(rol): Remove.
	(struct md5_ctx): Align buffer if using GCC.
	* sha1.h (struct sha1_ctx): Likewise.
	* sha1.c (SWAP): Renamed from the NOTSWAP.  All uses changed.
	The old name was backwards.
	(NOTSWAP): Remove; not used.
	(rol): New macro, moved here from md5.h.
	(sha1_process_block): Remove a FIXME that doesn't make sense.

2005-09-12  Derek Price  <derek@ximbiot.com>

	* gai_strerror.c: Include config.h when available.  Include
	getaddrinfo.h before other headers to test interface.
	Reported by Larry Jones <lawrence.jones@ugs.com>.

2005-09-08  Paul Eggert  <eggert@cs.ucla.edu>

	* glob.c (glob, globfree, __glob_pattern_p): Use old-style function
	definitions, since that's the preferred style in glibc.
	Fix a minor spacing issue, and update copyright notice to match glibc's.

2005-09-06  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.h (bitset_not): Add parens to avoid gcc -Wall warning.

2005-09-06  Simon Josefsson  <jas@extundo.com>

	* getpass.c (getpass): Fix typo, test for HAVE_TCSETATTR and not
	TCSETATTR.  Reported by Derek Price <derek@ximbiot.com>.

2005-09-05  Paul Eggert  <eggert@cs.ucla.edu>

	Change bitset word type from unsigned int to unsigned long int,
	as this has better performance on typical 64-bit hosts.
	Port bitset code to hosts with unusual word sizes.
	* regcomp.c (build_equiv_class, build_charclass, build_range_exp):
	(build_collating_symbol):
	Prefer bitset to re_bitset_ptr_t in prototypes, when the actual
	argument is a bitset.  This is merely a style issue, but it makes
	it clearer that an entire array is expected.
	(re_compile_fastmap_iter, init_dfa, init_word_char, optimize_subexps):
	* regcomp.c (lower_subexp, parse_bracket_exp, built_charclass_op):
	Port to the case where bitset_word is not the same as unsigned int.
	* regex_internal.h (bitset_set, bitset_clear, bitset_contain):
	(bitset_not, bitset_merge, bitset_set_all, bitset_mask):
	Likewise.
	* regexec.c (check_dst_limits_calc_pos_1, check_subexp_matching_top):
	(build_trtable, group_nodes_into_DFAstates):
	Likewise.
	* regcomp.c (re_compile_fastmap_iter, utf8_sb_map, optimize_utf8):
	Don't assume that SBC_MAX is a multiple of BITSET_WORD_BITS.
	* regex_internal.h (bitset_set_all, bitset_not): Likewise.
	* regexec.c (group_nodes_into_DFAstates): Likewise.
	* regcomp.c (utf8_sb_map): Don't assume UINT_MAX == 0xffffffff.
	* regcomp.c (optimize_subexps, lower_subexp):
	Work even if bitset_word has holes in its bitwise representation.
	* regex_internal.h (BITSET_WORD_BITS): Likewise.
	* regexec.c (check_dst_limits_calc_pos_1, check_subexp_matching_top):
	Likewise.
	* regex_internal.c (re_string_reconstruct):
	Don't assume UCHAR_MAX == 255.
	* regex_internal.h (bitset_set_all): Likewise.
	* regex_internal.h (BITSET_WORD_BITS): Renamed from UINT_BITS.
	All uses changed.
	(BITSET_WORDS): Renamed from BITSET_UINTS.  All uses changed.
	(bitset_word): New type, replacing 'unsigned int' for bitset uses.
	All uses changed.
	(BITSET_WORD_MAX): New macro.
	(bitset_set, bitset_clear, bitset_contain, bitset_empty):
	(bitset_set_all, bitset_copy):  Now inline functions, not macros.
	(bitset_empty, bitset_copy):
	Prefer sizeof (bitset) to multiplying it out ourselves.
	(bitset_not_merge): Remove; unused.
	(bitset_contain): Return bool, not unsigned int with one bit on.
	All callers changed.
	* regexec.c (build_trtable): Don't assume bitset has no stricter
	alignment than re_node_set; do this by defining a new internal
	type struct dests_alloc and using it to allocate memory.

2005-09-02  Paul Eggert  <eggert@cs.ucla.edu>

	Check for arithmetic overflow when calculating sizes, to prevent
	some buffer-overflow issues.  These patches are conservative, in the
	sense that when I couldn't determine whether an overflow was possible,
	I inserted a run-time check.
	* regex_internal.h (re_xmalloc, re_xrealloc, re_x2realloc): New macros.
	(SIZE_MAX) [!defined SIZE_MAX]: New macro.
	(re_alloc_oversized, re_x2alloc_oversized, re_xnmalloc):
	(re_xnrealloc, re_x2nrealloc): New inline functions.
	* lib/regcomp.c (init_dfa, analyze, build_range_exp, parse_bracket_exp):
	(build_equiv_class, build_charclass): Check for arithmetic overflow
	in size expression calculations.
	* lib/regex_internal.c (re_string_realloc_buffers):
	(build_wcs_upper_buffer, re_node_set_add_intersect):
	(re_node_set_init_union, re_node_set_insert, re_node_set_insert_last):
	(re_dfa_add_node, register_state): Likewise.
	* lib/regexec.c (re_search_stub, re_copy_regs, re_search_internal):
	(prune_impossible_nodes, push_fail_stack, set_regs, check_arrival):
	(build_trtable, extend_buffers, match_ctx_init, match_ctx_add_entry):
	(match_ctx_add_subtop, match_ctx_add_sublast): Likewise.

2005-09-01  Paul Eggert  <eggert@cs.ucla.edu>

	* glob.c (GET_LOGIN_NAME_MAX): Renamed from LOGIN_NAME_MAX,
	to avoid a collision with bits/local_lim.h in glibc.
	All uses changed.  Problem reported by Dmitry V. Levin in
	<http://sources.redhat.com/bugzilla/show_bug.cgi?id=1060>.

	* regex_internal.c (build_wcs_upper_buffer): Fix portability
	bugs in int versus size_t comparisons.
	(re_string_context_at): Fix bug where the code assumed that
	Idx is signed.

	Use bool where appropriate.
	* regcomp.c (re_set_fastmap): ICASE arg is bool, not int.
	All callers changed.
	(calc_eclosure_iter): Likewise, for ROOT arg.
	(parse_bracket_element): Likewise, for ACCEPT_HYPHEN arg.
	(build_charclass_op): Likewise, for NON_MATCH arg.
	* regex_internal.c (re_string_allocate, re_string_construct):
	(re_string_construct_common): Likewise, for ICASE arg.
	* regexec.c (re_search_2_stub, re_search_stub):
	Likewise, for RET_LEN arg.
	(check_matching): Likewise, for FL_LONGEST_MATCH arg.
	(set_regs): Likewise, for FL_BACKTRACK arg.
	* regcomp.c (re_compile_fastmap_iter, optimize_utf8):
	(duplicate_node_closure, calc_inveclosure, calc_eclosure):
	(calc_eclosure_iter, parse_bracket_exp):
	Use bool for internal variables that are booleans.
	* regexec.c (re_search_internal, check_matching, proceed_next_node):
	(set_regs, build_sifted_states, sift_states_bkref):
	(check_arrival_add_next_nodes, check_arrival_expand_ecl_sub):
	(expand_bkref_cache, build_trtable, group_nodes_into_DFAstates):
	(find_collation_sequence_value):
	Likewise.
	* regex_internal.c (re_node_set_insert, re_node_set_insert_last):
	(re_node_set_compare):
	Return bool, not int. All callers changed.
	* regexec.c (check_halt_node_context, check_dst_limits):
	(build_trtable, check_node_accept): Likewise.
	* regex_internal.h: Include stdbool.h.

	Fix bugs uncovered when converting to bool.
	* regcomp.c (calc_eclosure_iter): Check for storage allocation
	failure instead of charging ahead blindly.
	* regex_internal.c (register_state): Likewise.
	* regexec.c (re_search_2_stub): Use simpler method than boolean
	for freeing internal storage.
	(group_nodes_into_DFA_states): Use unsigned int, not int, for
	bitset pieces used as boolean, to avoid undefined behavior
	on hosts that do int overflow checking.

2005-08-31  Derek Price  <derek@ximbiot.com>

	* getdelim.c (getdelim): Return EOF on EOF.
	Reported by Larry Jones <lawrence.jones@ugs.com>.

2005-08-31  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.c (re_string_reconstruct): Don't assume buffer
	lengths fit in regoff_t; this isn't true if regoff_t is the same
	width as size_t.
	* regex.c (re_search_internal): 5th arg is LAST_START
	(= START + RANGE) instead of RANGE.  This avoids overflow
	problems when regoff_t is the same width as size_t.
	All callers changed.
	(re_search_2_stub): Check for overflow when adding the
	sizes of the two strings.
	(re_search_stub): Check for overflow when adding START
	to RANGE; if it occurs, substitute the extreme value.

2005-08-31  Jim Meyering  <jim@meyering.net>

	* regcomp.c (search_duplicated_node): Make first pointer arg
	a pointer-to-const.
	* regex_internal.c (create_ci_newstate, create_cd_newstate):
	(register_state): Likewise.
	* regexec.c (search_cur_bkref_entry, check_dst_limits):
	(check_dst_limits_calc_pos_1, check_dst_limits_calc_pos):
	(group_nodes_into_DFAstates): Likewise.

2005-08-31  Paul Eggert  <eggert@cs.ucla.edu>

	On 64-bit hosts (where size_t is 64 bits and int is 32 bits), the
	old glibc regex code mishandles strings longer than 2**31 bytes.
	This patch fixes this when the regex code is used in gnulib
	(i.e., outside glibc).

	This patch should not affect the use of the regex code inside
	glibc.  No doubt this problem also needs to be handled for glibc
	as well, but the result will be an incompatible change to the
	glibc ABI, and the old ABI will have to be supported too.  That
	can be the the subject for another patch.

	* regex.h (_REGEX_LARGE_OFFSETS): New feature-test macro,
	governing whether the rest of this patch is active.  By default,
	the macro is disabled and the patch has no effect.
	(regoff_t) [defined _REGEX_LARGE_OFFSETS]: Define to off_t, not int.
	(__re_idx_t, __re_size_t, __re_long_size_t): New types.
	(struct re_pattern_buffer, re_search, re_search_2, re_match):
	(re_match_2, re_set_registers): Use the new types.
	* regex_internal.h (Idx, re_hashval_t): New types.
	(REG_MISSING, REG_ERROR, REG_VALID_INDEX, REG_VALID_NONZERO_INDEX):
	New macros.
	(re_node_set, re_charset_t, re_token_t, re_string_realloc_buffers):
	(re_string_context_at, bin_tree_t, re_dfastate_t):
	(struct re_state_table_entry, state_array_t, re_sub_match_last_t):
	(re_sub_match_top_t, re_match_context_t, re_sift_context_t):
	(struct re_fail_stack_ent_t, struct re_fail_stack_t, struct re_dfa_t):
	(re_string_char_size_at, re_string_wchar_at):
	(re_string_elem_size_at):
	Use the new types and macros to port to 64-bit hosts.
	Use unsigned types for internal values, so that the code
	mostly works even for arrays larger than SSIZE_MAX.
	* regcomp.c (re_compile_internal, init_dfa, duplicate_node):
	(search_duplicated_node, calc_eclosure_iter, fetch_number):
	(parse_reg_exp, parse_branch, parse_expression, parse_sub_exp):
	(build_equiv_class, build_charclass, re_compile_fastmap_iter):
	(free_dfa_content, create_initial_state, optimize_utf8, analyze):
	(optimize_subexps, calc_first, link_nfa_nodes, duplicate_node_closure):
	(calc_inveclosure, parse_dup_op, build_range_exp):
	(build_collating_symbol, parse_bracket_exp, build_charclass_op):
	(fetch_number, create_token_tree, mark_opt_subexp):
	Likewise.
	* regex_internal.c (re_string_construct_common, create_ci_newstate):
	(create_cd_newstate, re_string_allocate, re_string_construct):
	(re_string_realloc_buffers, build_wcs_upper_buffer):
	(re_string_skip_chars, build_upper_buffer, re_string_translate_buffer):
	(re_string_reconstruct, re_string_peek_byte_case):
	(re_string_fetch_byte_case, re_string_context_at):
	(re_node_set_alloc, re_node_set_init_1, re_node_set_init_2):
	(re_node_set_init_copy, re_node_set_add_intersect):
	(re_node_set_init_union, re_node_set_merge, re_node_set_insert):
	(re_node_set_insert_last, re_node_set_compare, re_node_set_contains):
	(re_node_set_remove_at, re_dfa_add_node, calc_state_hash):
	(re_acquire_state, re_acquire_state_context, register_state):
	Likewise.
	* regex.c (match_ctx_init, match_ctx_add_entry, search_cur_bkref_entry):
	(match_ctx_add_subtop, match_ctx_add_sublast, sift_ctx_init):
	(re_search_internal, re_search_2_stub, re_search_stub)
	(re_copy_regs, check_matching, check_halt_state_context, update_regs):
	(push_fail_stack, sift_states_iter_mb, build_sifted_states):
	(update_cur_sifted_state, check_dst_limits):
	(check_dst_limits_calc_pos_1, check_dst_limits_calc_pos):
	(check_subexp_limits, sift_states_bkref, merge_state_array):
	(check_subexp_matching_top, get_subexp, get_subexp_sub):
	(find_subexp_node, check_arrival, check_arrival_add_next_nodes):
	(check_arrival_expand_ecl, check_arrival_expand_ecl_sub):
	(expand_bkref_cache, check_node_accept_bytes):
	(group_nodes_into_DFAstates, check_node_accept, regexec, re_match):
	(re_search, re_match_2, re_search_2, prune_impossible_nodes):
	(acquire_init_state_context, check_halt_node_context):
	(proceed_next_node, pop_fail_stack, set_regs, free_fail_stack_return):
	(sift_states_backward, clean_state_log_if_needed):
	(sub_epsilon_src_nodes, add_epsilone_src_nodes, merge_state_with_log):
	(find_recover_state, transit_state_sb, transit_state_mb):
	(transit_state_bkref, build_trtable, match_ctx_clean):
	Likewise.
	* regcomp.c (parse_dup_op): Add an extra test if Idx is unsigned,
	to work around an assumption that REG_MISSING is negative.

	* regcomp.c (re_comp) [defined _REGEX_RE_COMP || defined _LIBC]:
	(seek_collating_symbol_entry) [defined _LIBC]:
	(lookup_collation_sequence_value) [defined _LIBC]:
	(build_range_exp, build_collating_symbol) [defined _LIBC]:
	Use prototypes rather than old-style function definitions.
	* regexec.c (re_exec) [defined _REGEX_RE_COMP || defined _LIBC]:
	(transit_state_sb) [0]:
	(find_collation_sequence_value) [defined _LIBC]: Likewise.

	* regexec.c (re_search_internal): Simplify update of rm_so and
	rm_eo.

	* regcomp.c (re_compile_fastmap_iter, init_dfa, init_word_char):
	(optimize_subexps, lower_subexp):
	Don't assume 1<<31 has defined behavior on hosts with 32-bit int,
	since the signed shift might overflow.  Use 1u<<31 instead.
	* regex_internal.h (bitset_set, bitset_clear, bitset_contain): Likewise.
	* regexec.c (check_dst_limits_calc_pos_1, check_subexp_matching_top):
	Likewise.

	* regcomp.c (optimize_subexps, lower_subexp):
	Use CHAR_BIT rather than 8, for clarity.
	* regexec.c (check_dst_limits_calc_pos_1):
	(check_subexp_matching_top): Likewise.
	* regcomp.c (init_dfa): Make table_size unsigned, so that we don't
	have to worry about portability issues when shifting it left.
	Remove no-longer-needed test for table_size > 0.
	* regcomp.c (parse_sub_exp): Do not shift more bits than there are
	in a word, as the resulting behavior is undefined.
	* regexec.c (check_dst_limits_calc_pos_1): Likewise;
	in one case, a <= should have been an <, and in another case the
	whole test was missing.
	* regex_internal.h (BYTE_BITS): Remove.  All uses changed to
	the standard name CHAR_BIT.
	* regexec.c (match_ctx_add_entry): Don't assume that ~0 == -1;
	this is not true on one's complement and signed-magnitude hosts.

	* regex_internal.h (re_sub_match_top_t): Remove unused member
	next_last_offset.
	(struct re_dfa_t): Remove unused member states_alloc.
	* regcomp.c (init_dfa): Don't initialize unused members.

2005-08-31  Bruno Haible  <bruno@clisp.org>

	* strstr.c: Include <stddef.h>, for NULL.
	* strcasestr.c: Likewise.
	Reported by Yoann Vandoorselaere <yoann.v@prelude-ids.com>.

2005-08-30  "Oskar Liljeblad" <oskar@osk.mine.nu>

	* iconvme.h: Add prototype for iconv_alloc.

2005-08-29  Simon Josefsson  <jas@extundo.com>

	* iconvme.c: Fix errno.

2005-08-29  "Oskar Liljeblad" <oskar@osk.mine.nu>

	* iconvme.c: Split iconv_string into iconv_alloc.

2005-08-27  Jim Meyering  <jim@meyering.net>

	* fopen-safer.c: Merge minor changes from coreutils.
	* dup-safer.c: Likewise.
	* fd-safer.c: Likewise.

	Merge from coreutils.
	* stdio--.h: New file.
	* stdlib--.h: New file.
	* mkstemp-safer.c: New file.

	GNU tar needs these.
	* pipe-safer.c: New file.
	* creat-safer.c: New file.
	* fcntl--.h (creat): Define to creat_safer.
	* fcntl-safer.h: Include <sys/types.h> and declare creat_safer.
	* unistd--.h (pipe): Define to pipe_safer.
	* unistd-safer.h: Declare pipe_safer.

2005-08-26  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.h: Remove all references to
	RE_NO_INTERNAL_PROTOTYPES; no longer neeeded now that we assume C89
	or better.
	(bitset_not, bitset_merge, bitset_not_merge):
	(bitset_mask, re_string_allocate, re_string_construct):
	(re_string_reconstruct, re_string_destruct, re_string_elem_size_at):
	(re_string_char_size_at, re_string_wchar_at, re_string_peek_byte_case):
	(re_string_fetch_byte_case, re_node_set_alloc, re_node_set_init_1):
	(re_node_set_init_2, re_node_set_init_copy, re_node_set_add_intersect):
	(re_node_set_init_union, re_node_set_merge, re_node_set_insert):
	(re_node_set_insert_last, re_node_set_compare, re_node_set_contains):
	(re_node_set_remove_at, re_dfa_add_node, re_acquire_state):
	(re_acquire_state_context):
	Remove unnecessary forward decls.
	(re_string_char_size_at, re_string_wchar_at, re_string_elem_size_at):
	Put __attribute at function definition,
	now that the function decl has been removed.
	* lib/regex_internal.c (re_string_peek_byte_case):
	(re_string_fetch_byte_case, re_node_set_compare, re_node_set_contains):
	Likewise.

2005-08-26  Simon Josefsson  <jas@extundo.com>

	* getpass.c: Use _WIN32 instead of WIN32, suggested by Bruno
	Haible <bruno@clisp.org>.

2005-08-25  Paul Eggert  <eggert@cs.ucla.edu>

	* regexec.c (set_regs): Don't alloca with an unbounded size.

	alloca modernization/simplification for regex.
	* regex.c: Remove portability cruft for alloca.  This no longer
	needs to be at the start of the file, and can be moved into
	regex_internal.h and simplified.
	* regex_internal.h: Include <alloca.h>.
	(__libc_use_alloca) [!defined _LIBC]: New macro.
	* regexec.c (build_trtable): Remove "#ifdef _LIBC", since the code
	now works outside glibc.

2005-08-24  Simon Josefsson  <jas@extundo.com>

	* getpass.c: Add WIN32 implementation.  Conditionalize use of
	termios.h, tcgetattr, tcsetattr and __fsetlocking.  Remove some
	GLIBC specific code.

2005-08-25  Paul Eggert  <eggert@cs.ucla.edu>

	Make regex safe for g++.  This fixes one real bug (an "err"
	that should have been "*err").  g++ problem reported by
	Sam Steingold.
	* regex_internal.h (re_calloc): New macro, consistent with
	re_malloc etc.  All callers of calloc changed to use re_calloc.
	* regex_internal.c (build_wcs_upper_buffer): Return reg_errcode_t,
	not int.  All callers changed.
	* regcomp.c (re_compile_fastmap_iter): Don't use alloca (mb_cur_max);
	just use an array of size MB_LEN_MAX.
	* regexec.c (push_fail_stack): Use re_realloc, not realloc.
	(find_recover_state): Change "err" to "*err"; this fixes what
	appears to be a real bug.
	(check_arrival_expand_ecl_sub): Be consistent about reg_errcode_t
	versus int.

2005-08-25  Jim Meyering  <jim@meyering.net>

	* open-safer.c: Include <config.h>.
	Otherwise, we'd lose LARGEFILE support in any file using
	e.g. "fcntl--.h"

2005-08-24  Paul Eggert  <eggert@cs.ucla.edu>

	* regcomp.c (regerror): 2nd arg is 'restrict', as per POSIX.
	* regex.h (regerror): Likewise.

	* regex.c: Do not include <sys/types.h>, as POSIX no longer
	requires this.  (The code never needed it.)

	* regcomp.c, regex_internal.c, regex_internal.h, regexec.c:
	All uses of recently-renamed identifiers changed to use the new,
	POSIX-compliant names.  The code will build and run just fine
	without these changes, but it's better to eat our own dog food
	and use the standard-conforming names.

	* regex.h: Fix a multitude of POSIX name space violations.
	These changes have an effect only for programs that define
	_POSIX_C_SOURCE, _POSIX_SOURCE, or _XOPEN_SOURCE; they
	do not change anything for programs compiled in the normal way.
	Also, there is no effect on the ABI.

	(_REGEX_SOURCE): New macro.
	Do not include <stddef.h> if _XOPEN_SOURCE and VMS are both
	defined and _GNU_SOURCE is not; this fixes a name space violation.

	Rename the following macros to obey POSIX requirements.
	The old names are still visible as macros if _REGEX_SOURCE is defined.
	(REG_BACKSLASH_ESCAPE_IN_LISTS): renamed from
	RE_BACKSLASH_ESCAPE_IN_LISTS.
	(REG_BK_PLUS_QM): renamed from RE_BK_PLUS_QM.
	(REG_CHAR_CLASSES): renamed from RE_CHAR_CLASSES.
	(REG_CONTEXT_INDEP_ANCHORS): renamed from RE_CONTEXT_INDEP_ANCHORS.
	(REG_CONTEXT_INDEP_OPS): renamed from RE_CONTEXT_INDEP_OPS.
	(REG_CONTEXT_INVALID_OPS): renamed from RE_CONTEXT_INVALID_OPS.
	(REG_DOT_NEWLINE): renamed from RE_DOT_NEWLINE.
	(REG_DOT_NOT_NULL): renamed from RE_DOT_NOT_NULL.
	(REG_HAT_LISTS_NOT_NEWLINE): renamed from RE_HAT_LISTS_NOT_NEWLINE.
	(REG_INTERVALS): renamed from RE_INTERVALS.
	(REG_LIMITED_OPS): renamed from RE_LIMITED_OPS.
	(REG_NEWLINE_ALT): renamed from RE_NEWLINE_ALT.
	(REG_NO_BK_BRACES): renamed from RE_NO_BK_BRACES.
	(REG_NO_BK_PARENS): renamed from RE_NO_BK_PARENS.
	(REG_NO_BK_REFS): renamed from RE_NO_BK_REFS.
	(REG_NO_BK_VBAR): renamed from RE_NO_BK_VBAR.
	(REG_NO_EMPTY_RANGES): renamed from RE_NO_EMPTY_RANGES.
	(REG_UNMATCHED_RIGHT_PAREN_ORD): renamed from
	RE_UNMATCHED_RIGHT_PAREN_ORD.
	(REG_NO_POSIX_BACKTRACKING): renamed from RE_NO_POSIX_BACKTRACKING.
	(REG_NO_GNU_OPS): renamed from RE_NO_GNU_OPS.
	(REG_DEBUG): renamed from RE_DEBUG.
	(REG_INVALID_INTERVAL_ORD): renamed from RE_INVALID_INTERVAL_ORD.
	(REG_IGNORE_CASE): renamed from RE_ICASE.  This renaming is a bit
	unusual, since we can't clash with the POSIX REG_ICASE.
	(REG_CARET_ANCHORS_HERE): renamed from RE_CARET_ANCHORS_HERE.
	(REG_CONTEXT_INVALID_DUP): renamed from RE_CONTEXT_INVALID_DUP.
	(REG_NO_SUB): renamed from RE_NO_SUB.
	(REG_SYNTAX_EMACS): renamed from RE_SYNTAX_EMACS.
	(REG_SYNTAX_AWK): renamed from RE_SYNTAX_AWK.
	(REG_SYNTAX_GNU_AWK): renamed from RE_SYNTAX_GNU_AWK.
	(REG_SYNTAX_POSIX_AWK): renamed from RE_SYNTAX_POSIX_AWK.
	(REG_SYNTAX_GREP): renamed from RE_SYNTAX_GREP.
	(REG_SYNTAX_EGREP): renamed from RE_SYNTAX_EGREP.
	(REG_SYNTAX_POSIX_EGREP): renamed from RE_SYNTAX_POSIX_EGREP.
	(REG_SYNTAX_ED): renamed from RE_SYNTAX_ED.
	(REG_SYNTAX_SED): renamed from RE_SYNTAX_SED.
	(_REG_SYNTAX_POSIX_COMMON): renamed from _RE_SYNTAX_POSIX_COMMON.
	(REG_SYNTAX_POSIX_BASIC): renamed from RE_SYNTAX_POSIX_BASIC.
	(REG_SYNTAX_POSIX_MINIMAL_BASIC): renamed from
	RE_SYNTAX_POSIX_MINIMAL_BASIC.
	(REG_SYNTAX_POSIX_EXTENDED): renamed from RE_SYNTAX_POSIX_EXTENDED.
	(REG_SYNTAX_POSIX_MINIMAL_EXTENDED): renamed from
	RE_SYNTAX_POSIX_MINIMAL_EXTENDED.
	(REG_DUP_MAX): renamed from RE_DUP_MAX.  No need to undef it.
	(REG_UNALLOCATED): Renamed from REGS_UNALLOCATED.
	(REG_REALLOCATE): Renamed from REGS_REALLOCATE.
	(REG_FIXED): Renamed from REGS_FIXED.
	(REG_NREGS): Renamed from RE_NREGS.

	(REG_ICASE, REG_NEWLINE, REG_NOSUB): Do not depend on the values
	of other REG_* macros, since POSIX says the user is allowed to
	#undef these macros selectively.

	(reg_errcode_t): Update comment stating what other tables need
	to be consistent.

	Rename the following enum values to obey POSIX requirements.
	The old names are still visible as macros.
	(_REG_ENOSYS): Renamed from REG_ENOSYS.  Define even if _XOPEN_SOURCE
	is not defined, since GNU is supposed to be a superset of POSIX as
	much as possible, and since we want reg_errcode_t to be a signed
	type for implementation consistency.
	(_REG_NOERROR): Renamed from REG_NOERROR.
	(_REG_NOMATCH): Renamed from REG_NOMATCH.
	(_REG_BADPAT): Renamed from REG_BADPAT.
	(_REG_ECOLLATE): Renamed from REG_ECOLLATE.
	(_REG_ECTYPE): Renamed from REG_ECTYPE.
	(_REG_EESCAPE): Renamed from REG_EESCAPE.
	(_REG_ESUBREG): Renamed from REG_ESUBREG.
	(_REG_EBRACK): Renamed from REG_EBRACK.
	(_REG_EPAREN): Renamed from REG_EPAREN.
	(_REG_EBRACE): Renamed from REG_EBRACE.
	(_REG_BADBR): Renamed from REG_BADBR.
	(_REG_ERANGE): Renamed from REG_ERANGE.
	(_REG_ESPACE): Renamed from REG_ESPACE.
	(_REG_BADRPT): Renamed from REG_BADRPT.
	(_REG_EEND): Renamed from REG_EEND.
	(_REG_ESIZE): Renamed from REG_ESIZE.
	(_REG_ERPAREN): Renamed from REG_ERPAREN.
	(REG_ENOSYS, REG_NOERROR, REG_NOMATCH, REG_BADPAT, REG_ECOLLATE):
	(REG_ECTYPE, REG_EESCAPE, REG_ESUBREG, REG_EBRACK, REG_EPAREN):
	(REG_EBRACE, REG_BADBR, REG_ERANGE, REG_ESPACE, REG_BADRPT, REG_EEND):
	(REG_ESIZE, REG_ERPAREN): Now macros, not enum constants.

	(_REG_RE_NAME, _REG_RM_NAME): New macros.
	(REG_TRANSLATE_TYPE): Renamed from RE_TRANSLATE_TYPE.  All uses
	changed.  But support the old name if the new one is not defined
	and if _REGEX_SOURCE.

	Change the following member names in struct re_pattern_buffer.
	The old names are still supported if !_REGEX_SOURCE.
	The new names are always supported, regardless of _REGEX_SOURCE.
	(re_buffer): Renamed from buffer.
	(re_allocated): Renamed from allocated.
	(re_used): Renamed from used.
	(re_syntax): Renamed from syntax.
	(re_fastmap): Renamed from fastmap.
	(re_translate): Renamed from translate.
	(re_can_be_null): Renamed from can_be_null.
	(re_regs_allocated): Renamed from regs_allocated.
	(re_fastmap_accurate): Renamed from fastmap_accurate.
	(re_no_sub): Renamed from no_sub.
	(re_not_bol): Renamed from not_bol.
	(re_not_eol): Renamed from not_eol.
	(re_newline_anchor): Renamed from newline_anchor.

	Change the following member names in struct re_registers.
	The old names are still supported if !_REGEX_SOURCE.
	The new names are always supported, regardless of _REGEX_SOURCE.
	(rm_num_regs): Renamed from num_regs.
	(rm_start): Renamed from start.
	(rm_end): Renamed from end.

	(re_set_syntax, re_compile_pattern, re_compile_fastmap):
	(re_search, re_search_2, re_match, re_match_2, re_set_registers):
	Prepend __ to parameter names.

	Undo yesterday's changes.

2005-08-24  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.
	* fcntl--.h, fcntl-safer.h, open-safer.c: New files.

2005-08-21  Bruno Haible  <bruno@clisp.org>

	* lock.h: Add multiple inclusion guard.
	* tls.h: Add multiple inclusion guard.

2005-08-23  Paul Eggert  <eggert@cs.ucla.edu>

	* regex.h (REG_NOSYS)
	[!defined _XOPEN_SOURCE && 200112L <= _POSIX_C_SOURCE]:
	Define, since POSIX requires it as of 2001.
	(_REG_ENOSYS) [! (defined _XOPEN_SOURCE || 200112L <= _POSIX_C_SOURCE)]:
	New private symbol, used to keep the enum signed in all cases.
	* regex.h (RE_NO_EMPTY_RANGES): Fix doc bug reported by James Youngman
	in <http://lists.gnu.org/archive/html/bug-gnulib/2005-07/msg00132.html>.

	* regex_internal.c (re_string_skip_chars, register_state):
	(calc_state_hash):
	Remove forward decls; no longer needed now that we use prototypes.
	* regexec.c (acquire_init_state_context, check_halt_node_context):
	(proceed_next_node, pop_fail_stack, sub_epsilon_src_nodes):
	(clean_state_log_if_needed): Likewise.

2005-08-20  Paul Eggert  <eggert@cs.ucla.edu>

	Fix problems reported by Sam Steingold in
	<http://lists.gnu.org/archive/html/bug-gnulib/2005-08/msg00007.html>.
	* regexec.c (sift_states_bkref): Fix portability bug: the code
	assumed that reg_errcode_t is a signed type, which is not
	necessarily true if _XOPEN_SOURCE is not defined.
	* regex_internal.c (calc_state_hash): Put 'inline' before type, since
	some compilers warn about it otherwise.

2005-08-20  Jim Meyering  <jim@meyering.net>

	* regexec.c (regexec, re_search_stub) [!_LIBC]: Omit declaration
	of unused local, dfa.

2005-08-20  Paul Eggert  <eggert@cs.ucla.edu>

	* regcomp.c (create_initial_state): Remove duplicate decl.
	(init_word_char, create_initial_state, duplicate_node_closure):
	(fetch_token, peek_token_bracket, build_range_exp):
	(build_collating_symbol): Remove forward decls; no longer needed
	now that we use prototypes.

	* regcomp.c:
	(re_compile_pattern, re_set_syntax, re_compile_fastmap):
	(re_compile_fastmap_iter, regcomp, regerror, regfree):
	(re_compile_internal, init_dfa, init_word_char, free_workarea_compile):
	(create_initial_state, optimize_utf8, analyze, postorder, preorder):
	(optimize_subexps, lower_subexps, lower_subexp, calc_first, calc_next):
	(link_nfa_nodes, duplicate_node_closure, search_duplicated_node):
	(duplicate_node, calc_inveclosure, calc_eclosure, calc_eclosure_iter):
	(fetch_token, peek_token, peek_token_bracket, parse, parse_reg_exp):
	(parse_branch, parse_expression, parse_sub_exp, parse_dup_op):
	(build_range_exp, build_collating_symbol, parse_bracket_exp):
	(parse_bracket_element, parse_bracket_symbol, build_equiv_class):
	(build_charclass, build_charclass_op, fetch_number, create_tree):
	(create_token_tree, mark_opt_subexp, duplicate_tree):
	Use prototypes rather than old-style definitions.

	* regex_internal.c:
	(re_string_allocate, re_string_construct, re_string_realloc_buffers):
	(re_string_construct_common, build_wcs_buffer, build_wcs_upper_buffer):
	(re_string_skip_chars, build_upper_buffer, re_string_translate_buffer):
	(re_string_reconstruct, re_string_peek_byte_case):
	(re_string_fetch_byte_case, re_string_destruct, re_string_context_at):
	(re_node_set_alloc, re_node_set_init_1, re_node_set_init_2):
	(re_node_set_init_copy, re_node_set_add_intersect):
	(re_node_set_init_union, re_node_set_merge, re_node_set_insert):
	(re_node_set_insert_last, re_node_set_compare, re_node_set_contains):
	(re_node_set_remove_at, re_dfa_add_node, calc_state_hash):
	(re_acquire_state, re_acquire_state_context, register_state):
	(create_ci_newstate, create_cd_newstate, free_state):
	Likewise.
	* regexec.c (regexec, re_match, re_search, re_match_2, re_search_2):
	(re_search_2_stub, re_search_stub, re_copy_regs, re_set_registers):
	(re_search_internal, prune_impossible_nodes):
	(acquire_init_state_context, check_matching, static):
	(check_halt_node_context, check_halt_state_context, proceed_next_node):
	(push_fail_stack, pop_fail_stack, set_regs, free_fail_stack_return):
	(update_regs, sift_states_backward, build_sifted_states):
	(clean_state_log_if_needed, merge_state_array):
	(update_cur_sifted_state, add_epsilon_src_nodes):
	(sub_epsilon_src_nodes, check_dst_limits, check_dst_limits_calc_pos_1):
	(check_dst_limits_calc_pos, check_subexp_limits, sift_states_bkref):
	(sift_states_iter_mb, transit_state, merge_state_with_log, static):
	(find_recover_state, check_subexp_matching_top, transit_state_mb):
	(transit_state_bkref, get_subexp, get_subexp_sub, find_subexp_node):
	(check_arrival, check_arrival_add_next_nodes):
	(check_arrival_expand_ecl, check_arrival_expand_ecl_sub):
	(expand_bkref_cache, build_trtable, group_nodes_into_DFAstates):
	(check_node_accept_bytes, check_node_accept, extend_buffers):
	(match_ctx_init, match_ctx_clean, match_ctx_free, match_ctx_add_entry):
	(search_cur_bkref_entry, match_ctx_add_subtop, match_ctx_add_sublast):
	(sift_ctx_init):
	Likewise.

	* regex_internal.h:
	(re_string_allocate, re_string_construct, re_string_reconstruct):
	(re_string_realloc_buffers, build_wcs_buffer, build_wcs_upper_buffer):
	(build_upper_buffer, re_string_translate_buffer, re_string_destruct):
	(re_string_elem_size_at, re_string_char_size_at, re_string_wchar_at):
	(re_string_context_at, re_string_peek_byte_case):
	(re_string_fetch_byte_case): Declare even if RE_NO_INTERNAL_PROTOTYPES
	is defined, since we now use prototypes always.

	* regex.h (_RE_ARGS): Remove.  No longer needed, since we assume
	C89 or better.  All uses removed.

2005-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.c (re_acquire_state, re_acquire_state_context)
	[defined lint]: Suppress bogus uninitialized-variable warnings.

	* regcomp.c (duplicate_node): Return new index, not an error code,
	and let the caller return REG_ESPACE if out of space.  This
	removes an uninitialied-variable warning with GCC 4.0.1, and also
	avoids taking the address of a local variable.  All callers
	changed.

2005-08-19  Jim Meyering  <jim@meyering.net>

	* regexec.c (proceed_next_node): Redo local variables to
	avoid GCC shadowing warnings.

2005-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	* regex_internal.c (re_string_realloc_buffers, re_node_set_insert):
	(re_node_set_insert_last, re_dfa_add_node):
	Rename local variables to avoid GCC shadowing warnings.

2005-08-18  Bruno Haible  <bruno@clisp.org>

	* strstr.c (strstr): Fix return value in multibyte case.
	* strcasestr.c (strcasestr): Likewise.

2005-08-17  Jim Meyering  <jim@meyering.net>

	Make the %s format (seconds since the epoch) work for a negative
	number and when used with a zero-padded field width, e.g. %015s.

	* strftime.c (my_strftime): Move the `do_number_sign_and_padding'
	label so that it precedes the code to set `digits'.  Otherwise,
	%0Ns wouldn't work.  Before this change, `date -d @-22 +%05s' would
	print `00-22'.  Now, it prints `-0022', as it should.

2005-08-17  Paul Eggert  <eggert@cs.ucla.edu>

	* regex.h: Remove useless space-before-tab.  From coreutils.

2005-08-17  Bruno Haible  <bruno@clisp.org>

	* strcasestr.h: New file.
	* strcasestr.c: New file.

2005-08-17  Bruno Haible  <bruno@clisp.org>

	* strstr.h: Ignore HAVE_STRSTR, always declare the gnulib function.
	* strstr.c: Completely rewritten, with multibyte locale support.

2005-08-17  Bruno Haible  <bruno@clisp.org>

	* strcasecmp.c: Use mbuiter.h.

2005-08-17  Bruno Haible  <bruno@clisp.org>

	* mbuiter.h: New file.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* strcasecmp.c (struct mbiter_multi): Remove at_end field.
	(mbi_init): Update.
	(mbi_avail, mbi_advance): Let the iteration end before the terminating
	NUL byte, not after it.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* mbchar.h (mb_cmp, mb_casecmp): Order the invalid characters after
	the valid ones. Makes the comparison operations transitive:
	cmp (a, b) < 0 && cmp (b, c) < 0 ==> cmp (a, c) < 0.
	* strcasecmp.c (strcasecmp): Use mb_casecmp.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* strcase.h (strcasecmp): Add note in comments.
	* strncasecmp.c: Use code from strcasecmp.c.
	* strcasecmp.c: Use mbchar module. Define private mbiter variant.
	(strcasecmp): Work correctly in multibyte locales.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* strnlen1.h: New file.
	* strnlen1.c: New file.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* mbfile.h: New file.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* mbiter.h: New file.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* mbchar.h: New file.
	* mbchar.c: New file.

2005-08-16  Bruno Haible  <bruno@clisp.org>

	* tls.h: New file, from GNU gettext.
	* tls.c: New file, from GNU gettext.

2005-08-15  Bruno Haible  <bruno@clisp.org>

	* regex.h (__restrict_arr): Don't define to __restrict if __cplusplus
	is defined.

2005-08-14  Jim Meyering  <jim@meyering.net>

	Sync from coreutils.

	* fts-cycle.c (setup_dir, enter_dir, leave_dir, free_dir):
	Use the hash-table-based cycle-detection code not just when
	FTS_TIGHT_CYCLE_CHECK if specified, but also with FTS_LOGICAL.
	Reported by James Youngman in
	<http://lists.gnu.org/archive/html/bug-gnulib/2005-08/msg00011.html>.
	* fts_.h: Mention that with FTS_LOGICAL, we use FTS_TIGHT_CYCLE_CHECK.
	* fts.c (fts_cross_check) [FTS_DEBUG]: s/active_dir_ht/fts_cycle.ht/.
	This lets us compile with -DFTS_DEBUG, once again.
	* fts.c [! _LIBC]: Include "lstat.h" rather than rolling our own.
	* fts.c (fd_safer): Remove decl.
	Include fcntl--.h rather than unistd-safer.h
	(fts_safe_changedir): Don't call fd_safer; no longer needed
	now that we include fcntl--.h.

2005-08-11  Simon Josefsson  <jas@extundo.com>

	* readline.h, readline.c: New file.

2005-08-11  Bruno Haible  <bruno@clisp.org>

	* strnlen.h (strnlen): Change parameter name to match comment.

2005-08-10  Simon Josefsson  <jas@extundo.com>

	* strndup.c: Use strnlen.h.

	* strnlen.h: New file.

2005-08-02  Simon Josefsson  <jas@extundo.com>

	* getline.h, getline.c: Rewrite.

	* getdelim.h, getdelim.c: New files, ported from glibc.

2005-07-31  Bruno Haible  <bruno@clisp.org>

	* lock.h (gl_lock_initializer): New macro.
	(gl_lock_define_initialized): Use it.
	(gl_rwlock_initializer): New macro.
	(gl_rwlock_define_initialized): Use it.
	(gl_recursive_lock_initializer): New macro.
	(gl_recursive_lock_define_initialized): Use it.

2005-07-26  Bruno Haible  <bruno@clisp.org>

	* lock.h: Update from GNU gettext.
	* lock.c: Update from GNU gettext.

2005-07-18  Bruno Haible  <bruno@clisp.org>

	* lock.h (gl_once_t): New type.
	(gl_once_define, gl_once): New macros.
	* lock.c (fresh_once): New variable.
	(glthread_once, glthread_once_call, glthread_once_singlethreaded): New
	functions.

2005-07-18  Simon Josefsson  <jas@extundo.com>

	* check-version.c (check_version): Accept identical versions too.

2005-07-18  Bruno Haible  <bruno@clisp.org>

	* lock.h: New file, from GNU gettext.
	* lock.c: New file, from GNU gettext.

2005-07-15  Paul Eggert  <eggert@cs.ucla.edu>

	* quotearg.c: Add translator comment suggested by Bruno Haible,
	with a minor change.

2005-07-11  Paul Eggert  <eggert@cs.ucla.edu>

	* version-etc-fsf.c (version_etc_copyright): Parameterize the
	copyright symbol and the year.
	* version-etc.c (COPYRIGHT_YEAR): New constant.
	(version_etc_va): Use parameterized copyright notice.
	Reword to conform to the current GNU coding standards.

2005-07-11  Simon Josefsson  <jas@extundo.com>

	* size_max.h: New file.

2005-07-09  Sergey Poznyakoff  <gray@gnu.org.ua>

	* argp-namefrob.h: Include unlocked-io.h. Removed unnecessary
	block of defines.

2005-07-08  Eric Blake  <ebb9@byu.net>  (tiny change)
       and  Paul Eggert  <eggert@cs.ucla.edu>

	* regcomp.c (init_dfa, build_range_exp): Store __btowc value
	in wint_t, not wchar_t.  Remove now-unnecessary cast.

2005-07-07  Paul Eggert  <eggert@cs.ucla.edu>

	* regex.c, regex.h: Sync from libc.
	* regcomp.c, regexec_internal.c, regex_internal.h, regexec.c:
	New files, synced from libc, except that regex_internal.h
	currently has a small porting fix.

2005-07-03  Paul Eggert  <eggert@cs.ucla.edu>

	Remove the dependency of the strftime module on the tzset module.
	* strftime.c (my_strftime) [! defined _LIBC && ! HAVE_RUN_TZSET_TEST]:
	Copy the input structure, to work around some of the bug with
	Solaris 2.5.1 and Solaris 2.6.  If you still care about these old
	Solaris releases, you should also use the tzset module, but we won't
	require it as a dependency any more since we don't want LGPLed code
	to depend on GPLed code.

2005-07-02  Jim Meyering  <jim@meyering.net>

	* backupfile.c (backup_args): Change a `0' to NULL.

2005-07-01  Jim Meyering  <jim@meyering.net>

	* chown.c, cloexec.c, dup-safer.c, dup2.c, fsusage.c, getcwd.c:
	* getloadavg.c, mountlist.c, openat.h, pagealign_alloc.c:
	* save-cwd.c, tempname.c:
	Assume HAVE_FCNTL_H (i.e., include <fcntl.h> unconditionally,
	and don't include <sys/file.h>).

2005-07-01  Paul Eggert  <eggert@cs.ucla.edu>

	* xnanosleep.c: Include timespec.h, since OpenBSD 3.4 <time.h>
	declares only 'struct timespec;' (!).

2005-06-29  Jim Meyering  <jim@meyering.net>

	* mkdir-p.c (make_dir_parents): Don't apply sizeof to a hard-coded
	type name.  Use the variable name instead.
	* idcache.c (getuser, getuidbyname, getgroup, getgidbyname): Likewise.

2005-06-28  Simon Josefsson  <jas@extundo.com>

	* check-version.h, check-version.c: New files.

2005-06-28  Simon Josefsson  <jas@extundo.com>

	* base64.c (base64_encode): Indent.  Rename 'b64' to avoid
	collision with global variable.  Better indentation.  Don't
	increment buffer pointer beyond buffer end.  Based on comments
	from Paul Eggert <eggert@cs.ucla.edu>.

	* base64.h: Indent.

2005-06-24  Paul Eggert  <eggert@cs.ucla.edu>

	* canon-host.c (canon-host): Append trailing "," to 0 in
	initializer of struct addrinfo, as an indication that we don't
	care how many members the structure has.

2005-06-24  Derek Price  <derek@ximbiot.com>
	and Bruno Haible  <bruno@clisp.org>

	Remove stat module & update lstat.
	* stat.c: Remove this file...
	(slash_aware_lstat): ...moving this content and its support...
	* lstat.c (rpl_lstat): ...into here.
	* lstat.h: New file.

2005-06-23  Paul Eggert  <eggert@cs.ucla.edu>

	* mktime.c: Include <string.h> even if !DEBUG.  (From glibc.)
	(ranged_convert): Don't save conversion in a temporary struct.
	This causes a warning with GCC 4.0.0, and anyway in the typical
	case it's not worth the extra 100 bytes or so of code.
	(ranged_convert, __mktime_internal): When calling a function via a
	pointer P, use P () rather than (*P) (), as we now assume C89 or
	better.

2005-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	* readutmp.c (desirable_utmp_entry): Fix bug where "who -b" and
	"who -r" failed to give output.  Problem reported by Tim Waugh.

	* xmalloc.c (HAVE_GNU_CALLOC): New constant.
	(xcalloc): Use it to avoid needless tests.
	Problem reported by Jim Meyering.

2005-06-16  Jim Meyering  <jim@meyering.net>

	* calloc.c (rpl_calloc): Allocate a 1-byte buffer (not 1xS or Nx1)
	when either N or S is zero.

2005-06-16  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* argp.h (__option_is_short): Check upper limit of
	__key. Isprint() requires its argument to have the value
	of an unsigned char or EOF.

2005-06-10  Paul Eggert  <eggert@cs.ucla.edu>

	* fnmatch.c (fnmatch): If there is an encoding error in a
	multibyte string or pattern, fall back on unibyte matching.
	Problem reported by James Youngman.

2005-06-08  Bruno Haible  <bruno@clisp.org>

	* binary-io.h (fileno): Undefine before defining it. Avoids a gcc
	warning on mingw.

2005-06-08  Bruno Haible  <bruno@clisp.org>

	* csharpcomp.h: New file, from GNU gettext.
	* csharpcomp.c: New file, from GNU gettext.
	* csharpcomp.sh.in: New file, from GNU gettext.

2005-06-07  Derek Price  <derek@ximbiot.com>

	Sync from CVS.
	* glob_.h: Indent nested #ifdef.

2005-06-02  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.
	Use "file name" when talking about file names, instead of "filename"
	or "path", as per the GNU coding standards.
	* mkdir-p.c: Renamed from makepath.c.
	(make_dir_parents): Renamed from make_path.  All callers changed.
	* mkdir-p.h: Likewise.  All includers changed.
	* filenamecat.c: Renamed from path-concat.c.
	(file_name_concat): Renamed from path_concat.  All callers changed.
	[TEST_FILE_NAME_CONCAT]: Renamed from TEST_PATH_CONCAT.
	* filenamecat.h: Likewise.  All includers changed.
	* acl.c: Don't use "path" or "filename" to mean "file name"
	in comments or local variable names.
	* basename.c: Likewise.
	* canonicalize.c, canonicalize.h: Likewise.
	* dirname.c, dirname.h: Likewise.
	* euidaccess.c: Likewise.
	* exclude.c: Likewise
	* fnmatch_.h, fnmatch_loop.c: Likewise.
	* fsusage.c, fsuage.h: Likewise.
	* fts.c, fts_.h: Likewise.
	* getcwd.c: Likewise.
	* getloadavg.c: Likewise.
	* mkstemp.c: Likewise.
	* mountlist.c, mountlist.h: Likewise.
	* openat.c, openat.h: Likewise.
	* readlink-stub.c: Likewise.
	* readutmp.c, readutmp.h: Likewise.
	* rename.c: Likewise.
	* rmdir.c: Likewise.
	* same.c: Likewise.
	* savedir.c: Likewise.
	* stripslash.c: Likewise.
	* tempname.c: Likewise.
	* xreadlink.c: Likewise.
	* exclude.c (excluded_file_name): Renamed from excluded_filename.
	All uses changed.
	* exclude.h: Likewise.

	* euidaccess.c (getuid, getgid, getuid, getegid)
	[!defined _POSIX_VERSION]: Remove decls; not needed these days.
	* idcache.c (getpwuid, getpwnam, getgrgid, getgrnam)
	[!defined _POSIX_VERSION]: Remove decls; not needed these days.
	* pathmax.h: Include <limits.h> unconditionally, since other
	files have been getting away with it for years (MORE/BSD 4.3
	is extinct now).
	* userspec.c (getpwnam, getgrnam, getgrgid)
	[!defined _POSIX_VERSION]: Remove decls; not needed these days.

	* pathmax.h (_POSIX_PATH_MAX) [!defined _POSIX_PATH_MAX]:
	Define to 256, not 255, as per modern POSIX.

2005-06-01  Bruno Haible  <bruno@clisp.org>

	* csharpexec.h: New file, from GNU gettext.
	* csharpexec.c: New file, from GNU gettext.
	* csharpexec.sh.in: New file, from GNU gettext.

2005-05-31  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	Sync from cvs.
	* glob_.h: s/MISSING_SYS_CDEFS_H/_SYS_CDEFS_H/ and comment.

2005-05-29  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* glob_.h, glob.c: New files.

2005-05-27  Paul Eggert  <eggert@cs.ucla.edu>

	* getlogin_r.c (getlogin_r): Don't set errno to 0 on return.

	* fts.c: Don't worry about debugging on pre-C99-compatible hosts;
	the configuration hassle isn't worth it.
	Include inttypes.h and stdint.h unconditionally if FTS_DEBUG.
	(LONGEST_MODIFIER, PRIuMAX): Remove.

2005-05-27  Bruno Haible  <bruno@clisp.org>

	* getlogin_r.h: Remove second include of <stddef.h>.

2005-05-25  Bruno Haible  <bruno@clisp.org>
	    Derek Price  <derek@ximbiot.com>

	* getlogin_r.h: Simplify API documentation.

2005-05-25  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* getlogin_r.c, getlogin_r.h: New files.

2005-05-22  Bruno Haible  <bruno@clisp.org>

	* minmax.h: Include <limits.h> only when it defines MIN, MAX.
	Also include <sys/param.h> if it defines MIN, MAX.
	Based on a patch by Derek Price <derek@ximbiot.com>.

2005-05-22  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (_STDINT_H_HAVE_INT64): New macro. Use it in #ifdefs.
	(INT64_MIN): Fix definition.
	Suggested by Paul Eggert <eggert@cs.ucla.edu>.

	* stdint_.h (_STDINT_H_NEED_SIGNED_INT_TYPES): Renamed from
	NEED_SIGNED_INT_TYPES.

	* stdint_.h (_STDINT_H_HAVE_SYSTEM_INTTYPES): Renamed from
	HAVE_SYSTEM_INTTYPES.

2005-05-22  Paul Eggert  <eggert@cs.ucla.edu>

	* fts.c (fd_safer) [_LGPL_PACKAGE]: New static function,
	so that unistd-safer.h (GPL'ed code) need not be included.

2005-05-20  Paul Eggert  <eggert@cs.ucla.edu>

	New fts module.
	* fts.c: Don't include "cycle-check.h" or "hash.h".
	(setup_dir, free_dir): New functions.
	(enter_dir, leave_dir): Define trivial
	alternatives of _LGPL_PACKAGE.  Move to fts-cycle.c if !_LGPL_PACKAGE.
	(HT_INITIAL_SIZE, ENTER_DIR): Remove.  All uses removed.
	(LEAVE_DIR): Fix typo: pass Fts and Ent to leave_dir.
	(struct Active_dir, AD_compare, AD_hash, enter_dir, leave_dir):
	Move to fts-cycle.c.
	(fts_open): Use setup_dir.
	(fts_close): Use free_dir.
	(fts_read): Have just one copy of the ENTER_DIR code rather than three.
	This adds a label and some gotos, but the alternatives were messier.
	Check for memory allocation failure when entering a dir.
	(fts_stat) [_LGPL_PACKAGE]: Bring back glibc cycle detection code.
	* fts_.h (_LGPL_PACKAGE) [defined _LIBC]: New macro.
	(FTS): New member fts_cycle, that is a union that contains the
	old active_dir_ht and cycle_state.  All uses changed to mention
	fts_cycle.ht and fts_cycle.state.
	* fts-cycle.c: New file, containing GPL'ed code migrated out of
	fts.c, with the following changes:
	(setup_dir, free_dir): New functions.
	(enter_dir): Now returns bool.  Return true if successful, false
	if memory exhausted.  All callers changed.
	Do not bother partly cleaning up on
	memory allocation failure; that is free_dir's job.
	However, free ad if hash_insert fails, to avoid memory leak.
	(enter_dir, leave_dir): Accommodate change to FTS by inspecting
	fts->fts_options to see which union member to use.

2005-05-20  Jim Meyering  <jim@meyering.net>

	* unlinkdir.h (cannot_unlink_dir) [UNLINK_CANNOT_UNLINK_DIR]:
	Now a macro, to pacify GCC.

2005-05-20  Eric Blake  <ebb9@byu.net>  (tiny change)

	* chown.c (rpl_chown): Return -1 on failure.

2005-05-18  Paul Eggert  <eggert@cs.ucla.edu>

	* canonicalize.c: Include canonicalize.h first, to test interface.
	Include <stddef.h> unconditionally, since we assume C89 now.
	All uses of PTR_INT_TYPE replaced by ptrdiff_t.
	* fts.c: Include fts_.h first, to check interface.
	Do not include intprops.h; no longer needed.
	Include cycle-check.h and hash.h, since fts_.h no longer does.
	Remove unnecessary casts of closedir to void.
	(fts_build): Use a simpler method (not involving TYPE_SIGNED) to
	decide whether to decrement nlinks.
	* fts_.h: Do not include hash.h or cycle-check.h; no longer needed.
	(FTS): Use struct hash_table * instead of Hash_table, so that
	we no longer need to include hash.h here.

2005-05-17  Jim Meyering  <jim@meyering.net>

	* fts.c, fts_.h: New files, from coreutils.

2005-05-14  Paul Eggert  <eggert@cs.ucla.edu>

	Sync from coreutils.
	* unlinkdir.c, unlinkdir.h: New files.
	* gethrxtime.c, gethrxtime.h, getpass.h, mountlist.h, path-concat.c,
	regex.h, unlocked-io.h, xtime.h:
	White space changes only.
	* makepath.c (make_path): Port to hosts where leading "//" is special.
	* yesno.c: Include getline.h, not ctype.h.
	(yesno): Don't remove leading white space; POSIX doesn't allow it.
	Use getline to remove arbitrary restriction on response length.

2005-05-13  Bruno Haible  <bruno@clisp.org>

	* stdint_.h (int64_t, uint64_t, int_least64_t, uint_least64_t,
	int_fast64_t, uint_fast64_t, intmax_t, uintmax_t, INT64_MIN, INT64_MAX,
	UINT64_MAX, INT_LEAST64_MIN, INT_LEAST64_MAX, UINT_LEAST64_MAX,
	INT_FAST64_MIN, INT_FAST64_MAX, UINT_FAST64_MAX, INTMAX_MIN,
	INTMAX_MAX, UINTMAX_MAX, INT64_C, UINT64_C, INTMAX_C, UINTMAX_C):
	Add support for 64-bit integers in the MSVC compiler.

2005-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	* byteswap_.h, getsubopt.h, iconvme.h, strsep.c, strsep.h:
	Change the initial comment to refer to GPL, not LGPL.
	gnulib-tool will change it to LGPL as needed.

	* __fpending.c, acl.c, acl.h, alloca_.h, allocsa.c, allocsa.h,
	argmatch.c, argmatch.h, argp-ba.c, argp-eexst.c, argp-fmtstream.c,
	argp-fmtstream.h, argp-fs-xinl.c, argp-help.c, argp-namefrob.h,
	argp-parse.c, argp-pv.c, argp-pvh.c, argp-xinl.c, argp.h, argz.c,
	argz_.h, asnprintf.c, asprintf.c, atanl.c, backupfile.c,
	backupfile.h, base64.c, base64.h, basename.c, binary-io.h,
	byteswap_.h, c-ctype.c, c-ctype.h, c-stack.c, c-stack.h,
	c-strtod.c, calloc.c, canon-host.c, canonicalize.c,
	canonicalize.h, ceill.c, chdir-long.c, chdir-long.h, chown.c,
	classpath.c, classpath.h, cloexec.c, closeout.c, closeout.h,
	concatpath.c, config.charset, copy-file.c, copy-file.h,
	cycle-check.c, cycle-check.h, diacrit.c, diacrit.h, dirfd.c,
	dirfd.h, dirname.c, dirname.h, dummy.c, dup-safer.c, dup2.c,
	eealloc.h, error.c, error.h, euidaccess.c, exclude.c, exclude.h,
	execute.c, execute.h, exit.h, exitfail.c, exitfail.h, expl.c,
	fatal-signal.c, fatal-signal.h, fd-safer.c, file-type.c,
	file-type.h, fileblocks.c, filemode.c, filemode.h, findprog.c,
	findprog.h, floorl.c, fnmatch.c, fnmatch_.h, fnmatch_loop.c,
	fopen-safer.c, free.c, frexpl.c, fsusage.c, fsusage.h,
	full-read.c, full-read.h, full-write.c, full-write.h,
	fwriteerror.c, fwriteerror.h, gai_strerror.c, gcd.c, gcd.h,
	getaddrinfo.c, getaddrinfo.h, getcwd.c, getcwd.h, getdate.h,
	getdate.y, getdomainname.c, getdomainname.h, getgroups.c,
	gethostname.c, gethrxtime.c, gethrxtime.h, getline.c, getline.h,
	getloadavg.c, getndelim2.c, getndelim2.h, getnline.c, getnline.h,
	getopt.c, getopt1.c, getopt_.h, getopt_int.h, getpagesize.h,
	getpass.c, getpass.h, getsubopt.c, getsubopt.h, gettext.h,
	gettime.c, gettimeofday.c, getugroups.c, getusershell.c,
	group-member.c, group-member.h, hard-locale.c, hard-locale.h,
	hash-pjw.c, hash-pjw.h, hash.c, hash.h, human.c, human.h,
	iconvme.c, iconvme.h, idcache.c, inet_ntop.h, intprops.h,
	inttostr.c, inttostr.h, isdir.c, javacomp.c, javacomp.h,
	javacomp.sh.in, javaexec.c, javaexec.h, javaexec.sh.in,
	lbrkprop.h, lchown.c, ldexpl.c, linebreak.c, linebreak.h,
	linebuffer.c, linebuffer.h, localcharset.c, localcharset.h,
	logl.c, long-options.c, long-options.h, lstat.c, makepath.c,
	makepath.h, malloc.c, mathl.h, mbswidth.c, mbswidth.h, md5.c,
	md5.h, memcasecmp.c, memcasecmp.h, memchr.c, memcmp.c, memcoll.c,
	memcoll.h, memcpy.c, memmem.c, memmem.h, mempcpy.c, mempcpy.h,
	memrchr.c, memrchr.h, memset.c, minmax.h, mkdir.c, mkdtemp.c,
	mkdtemp.h, mkstemp.c, mktime.c, modechange.c, modechange.h,
	mountlist.c, mountlist.h, nanosleep.c, obstack.c, obstack.h,
	openat.c, openat.h, pagealign_alloc.c, pagealign_alloc.h,
	path-concat.c, path-concat.h, pathmax.h, pathname.h, physmem.c,
	physmem.h, pipe.c, pipe.h, poll.c, poll_.h, posixtm.c, posixtm.h,
	posixver.c, printf-args.c, printf-args.h, printf-parse.c,
	printf-parse.h, progname.c, progname.h, progreloc.c, putenv.c,
	quote.c, quote.h, quotearg.c, quotearg.h, raise.c, readlink.c,
	readtokens.c, readtokens.h, readtokens0.c, readtokens0.h,
	readutmp.c, readutmp.h, realloc.c, ref-add.sin, ref-del.sin,
	regex.c, regex.h, rename.c, rmdir.c, rpmatch.c, safe-read.c,
	safe-read.h, safe-write.c, safe-write.h, same.c, same.h,
	save-cwd.c, save-cwd.h, savedir.c, savedir.h, setenv.c, setenv.h,
	settime.c, sh-quote.c, sh-quote.h, sha1.c, sha1.h, sig2str.c,
	sig2str.h, sincosl.c, snprintf.c, snprintf.h, sqrtl.c,
	stat-macros.h, stat.c, stdbool_.h, stdint_.h, stdio-safer.h,
	stpcpy.c, stpcpy.h, stpncpy.c, stpncpy.h, strcase.h, strcasecmp.c,
	strchrnul.c, strchrnul.h, strcspn.c, strdup.c, strdup.h,
	strerror.c, strftime.c, strftime.h, stripslash.c, strndup.c,
	strndup.h, strnlen.c, strpbrk.c, strpbrk.h, strsep.c, strsep.h,
	strstr.c, strstr.h, strtod.c, strtoimax.c, strtok_r.c, strtok_r.h,
	strtol.c, strtoll.c, strtoul.c, strtoull.c, strverscmp.c,
	strverscmp.h, sysexit_.h, tempname.c, time_r.c, time_r.h,
	timegm.c, timegm.h, timespec.h, trigl.c, trigl.h, ucs4-utf16.h,
	ucs4-utf8.h, unicodeio.c, unicodeio.h, unistd-safer.h,
	unlocked-io.h, unsetenv.c, userspec.c, utf16-ucs4.h, utf8-ucs4.h,
	utime.c, utimecmp.c, utimecmp.h, utimens.c, vasnprintf.c,
	vasnprintf.h, vasprintf.c, vasprintf.h, version-etc-fsf.c,
	version-etc.c, version-etc.h, vsnprintf.c, vsnprintf.h,
	w32spawn.h, wait-process.c, wait-process.h, xalloc-die.c,
	xalloc.h, xallocsa.c, xallocsa.h, xasprintf.c, xgetcwd.c,
	xgetcwd.h, xgetdomainname.c, xgetdomainname.h, xgethostname.c,
	xmalloc.c, xmemcoll.c, xnanosleep.c, xreadlink.c, xreadlink.h,
	xsetenv.c, xsetenv.h, xsize.h, xstrndup.c, xstrndup.h, xstrtod.c,
	xstrtod.h, xstrtoimax.c, xstrtol.c, xstrtol.h, xstrtoumax.c,
	xtime.h, xvasprintf.c, xvasprintf.h, yesno.c, yesno.h:
	Update FSF postal mail address.

2005-05-10  Yoann Vandoorselaere <yoann.v@prelude-ids.com>

	* getaddrinfo.c: Don't fail when SOCK_STREAM or SOCK_DGRAM are
	specified in ai_socktype. Fix invalid ai_protocol
	check. ai_protocol is usually set to 0 or depending on
	ai_family/ai_socktype to IPPROTO_TCP / IPPROTO_UDP.  Checking for
	SOCK_STREAM / SOCK_DGRAM in ai_protocol was invalid.  Set
	ai_socktype / ai_protocol in the returned addrinfo structure.

2005-05-09  Yoann Vandoorselaere <yoann.v@prelude-ids.com>
	    Bruno Haible  <bruno@clisp.org>

	* inet_ntop.h: New file.
	* inet_ntop.c: New file, from glibc with modifications.

2005-05-08  Jim Meyering  <jim@meyering.net>

	* classpath.c (PATH_SEPARATOR): Remove insignificant trailing blank.

2005-05-01  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from coreutils.  Among other things,
	add bulletproofing for cases where stdin, stdout, or stderr are closed.
	* fd-safer.c: New file.
	* fcntl-safer.h, open-safer.c: Remove.
	* chdir-long.c: Fix comment "fetish" -> "coreutils".
	* dup-safer.c: Include unistd-safer.h first.
	Don't include errno.h.
	(dup_safer) [!defined F_DUPFD]: Let fd_safer do the real work.
	* file-type.h: Don't assume invoker included sys/stat.h first.
	* file-type.c: Rely on file-type.h change.
	* getloadavg.c: Include unistd-safer.h.
	(getloadavg): Use safer open.
	* getusershell.c: Include "stdio-safer.h".
	(getusershell): Use safer fopen.
	* long-options.c (long_options): Use NULL rather than 0.
	* modechange.h (mode_free): Remove; all callers changed to invoke
	'free'.
	* modechange.c: Likewise.
	xstrtol.h, stdbool.h, stddef.h: Don't include; no longer needed.
	(MODE_DONE): New constant.
	(struct mode_change): Remove 'next' member.
	(make_node_op_equals): New function; like the old one of the
	same name, except it allocates an array.
	(mode_compile, mode_create_from_ref): Use it.
	(mode_compile): Allocate result as an array, not a linked list.
	Parse octal string ourself, so that we catch mistakes like "+0".
	(mode_adjust): Arg is an array, not a linked list.
	* modechange.c: Include stat-macros.h, xalloc.h.
	(S_ISDIR, S_ISUID, S_ISGID, S_ISVTX, S_IRUSR, S_IWUSR, S_IXUSR):
	(S_IRGRP, S_IWGRP, S_IXGRP, S_IROTH, S_IWOTH, S_IXOTH, S_IRXWU):
	(S_IRWXG, S_IRWXO, CHMOD_MODE_BITS):
	Remove.  This is now stat-macros.h's job.
	(talloc): Remove.  All callers replaced by xalloc, so that
	our invokers don't have to worry about reporting memory failures.
	(make_node_op_equals): Remove.
	(MODE_ORDINARY_CHAGE, MODE_X_IF_ANY_X, MODE_COPY_EXISTING):
	New constants.
	(struct mode_change): Moved here from modechange.h.
	(mode_append_entry): Remove.
	(mode_compile): Remove MASKED_OPS arg, since it encouraged
	apps to have incorrect behavior.  Use simpler algorithm for head
	and tail.  Don't futz with umask; that's now the job of mode_adjust.
	Detect more invalid usages rather than having somewhat-random behavior.
	Don't insert an "a=" action, as that leads to incorrect behavior.
	(mode_compile, mode_create_from_ref): Return NULL on error instead
	of an enum, since now there's only one way to have an error.  All
	callers changed.
	(mode_adjust): Accept new arg UMASK_VALUE, and interpret it
	at the correct time.  Simplify calculation of "+u" and its ilk.
	Don't mishandle "+X".
	(mode_free): Remove "register" and localize decls.
	* modechange.h (MODE_X_IF_ANY_X, MODE_COPY_EXISTING):
	(struct mode_change): Move to modechange.c; callers don't
	need to see this stuff.
	(MODE_MASK_EQUALS, MODE_MASK_PLUS, MODE_MASK_MINUS, MODE_MASK_ALL):
	(MODE_INVALID, MODE_MEMORY_EXHAUSTED, MODE_BAD_REFERENCE): Remove.
	(mode_change, mode_adjust): Reflect the new signatures noted above.
	* nanosleep.c (rpl_nanosleep): Include "timespec.h" before macros
	that might redefine system include files.
	(siginterrupt) [!HAVE_SIGINTERRUPT]: New macro.
	(my_usleep): Use NULL rather than (void *) 0.
	(rpl_nanosleep) [!defined SA_NOCLDSTOP]:
	Use siginterrupt to specify that system calls should be interrupted.
	(rpl_nanosleep): Move initialization of suspended closer to call of
	my_usleep.
	* readutmp.h (read_utmp): New arg OPTIONS.  All uses changed.
	* readutmp.c: Likewise.  Include signal.h, stdbool.h.
	(desirable_utmp_entry): New function.
	(read_utmp) [defined UTMP_NAME_FUNCTION]: Redo memory allocation
	using x2nrealloc, to simplify logic.
	(read_utmp) [!defined UTMP_NAME_FUNCTION]: Check for overflow in
	size calculation.  Do not assume utmp file is a regular file.
	* readutmp.h (UT_PID): Moved here from ../src/who.c.
	(READ_UTMP_CHECK_PIDS): New constant.
	* save-cwd.c: Include unistd-safer.h.
	(save_cwd): Use fd_safer.
	* tempname.c (S_ISDIR, S_IRUSR, S_IRUSR, S_IWUSR, S_IXUSR): Remove.
	[!_LIBC] Include "stat-macros.h" instead.
	* unistd-safer.h (fd_safer): New decl.

2005-05-01  Oskar Liljeblad  <oskar@osk.mine.nu>

	* byteswap_.h: New file.

2005-04-25  Albert Chin  <china@thewrittenword.com>

	* regex.c: Include <stdio.h>, as a workaround to a Compaq Desktop
	Toolkit C bug.

2005-04-13  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (zone): Allow relunit_snumber after tZONE, so
	that "UTC +1 second" continues to work.  Problem reported
	by Dmitry V. Levin.
	(relunit_snumber): New rule.
	(relunit): Use it.

2005-04-12  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (universal_time_zone_table): New constant.
	(time_zone_table): Remove GMT, UT, UTC entries; they're now in
	universal_time_zone_table.
	(lookup_zone): Prefer universal_time_zone_table to
	local_time_zone_table, so that "GMT" time stamps are allowed in
	London during the summer.  Problem reported by Ian Abbott.

2005-04-12  Jim Meyering  <jim@meyering.net>

	* human.c (humblock): Set *options even when returning due to
	xstrtoumax conversion failure.  Thanks to a used-uninitialized
	warning from gcc-4.

2005-04-09  Jim Meyering  <jim@meyering.net>

	* posixtm.c (posixtime) [lint]: Avoid spurious warning from gcc-4's
	-Wuninitialized: initialize tm0.tm_year.

2005-04-04  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (parser_control): rels_seen is now a boolean, not a
	count, since there's no maximum.  All uses changed.
	Add member dsts_seen.
	(local_zone): Accumulate dsts_seen rather than relying on tm_isdst
	not being INT_MAX.
	(get_date): Initialize dsts_seen, and check that it doesn't go over 1.
	Use pc_rels_seen to decide whther a date is absolute.

	* getdate.y (number): Don't overwrite year.
	(get_date): Initialize pc.year.digits to 0, not 4, to enable above
	check.

2005-04-02  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.h: Fix OpenBSD compilation failure, inspired by tiny
	patch from Yoann Vandoorselaere <yoann@prelude-ids.org>.

2005-03-27  Jim Meyering  <jim@meyering.net>

	* argmatch.c: Clarify comment: null-terminated -> NULL-terminated.

2005-03-26  Paul Eggert  <eggert@cs.ucla.edu>

	* intprops.h (INT_STRLEN_BOUND, INT_BUFSIZE_BOUND):
	"one's complement" -> "ones' complement" in comment, as per Knuth.
	"value of type" -> "type or expression" in comment.
	* mktime.c, strftime.c: Propagate intprops.h comment nits.

2005-03-26  Jim Meyering  <jim@meyering.net>

	Comment nits.
	* intprops.h: Add the apostrophe in `(one|two)'s complement'.
	Correct typos: s/or/of/.

2005-03-23  Jim Meyering  <jim@meyering.net>

	* canonicalize.c: Remove duplicate `#include "stat-macros.h"'.

2005-03-21  Jim Meyering  <jim@meyering.net>

	Changes imported from coreutils.

	* cycle-check.c: Don't include xalloc.h.

	* path-concat.c: Don't include assert.h.
	(path_concat): Remove assertion that would have triggered
	for ABASE starting with more than one slash.
	Reported by Andreas Schwab.

	* path-concat.c (path_concat): Set *BASE_IN_RESULT
	properly when ABASE is an absolute file name.
	Correct the description of this function.
	Include <assert.h>.
	Add an assertion and a test driver.
	This fixes a bug introduced on 2004-07-02.
	Andreas Schwab reported the resulting failure of cp --parents:
	http://lists.gnu.org/archive/html/bug-coreutils/2005-01/msg00130.html

2005-03-18  Paul Eggert  <eggert@cs.ucla.edu>

	* strftime.c (my_strftime): If the underlying strftime returns 0
	(which shouldn't happen), generate nothing instead of returning 0
	immediately, so that nstrftime (NULL, ...) doesn't return 0.

2005-03-16  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: Use HAVE_LONG_LONG_64BIT instead of HAVE_LONGLONG_64BIT.

2005-03-15  Paul Eggert  <eggert@cs.ucla.edu>

	* strftime.c (my_strftime): Prepend space to format so that we can
	reliably distinguish strftime failure from empty output on POSIX
	hosts.

2005-03-08  Paul Eggert  <eggert@cs.ucla.edu>

	* iconvme.c (SIZE_MAX): New macro, if not already defined.
	(iconv_string): Don't guess a size-zero buffer, as that might cause
	buffer overrun.  Instead, avoid multiplying by MB_LEN_MAX if the
	result would be 'too large', where 'too large' is (heuristically)
	the square root of SIZE_MAX, divided by MB_LEN_MAX to allay
	overflow concerns.  This will prevent some unwanted malloc failures
	when the inputs are very large.

2005-03-15  Bruno Haible  <bruno@clisp.org>

	* regex.c (byte_re_match_2_internal): Rename local variable 'not' to
	'negate'.

	* regex.c (byte_re_match_2_internal): Reduce scope of same_str_p
	variable.

	* regex.c (EXTEND_BUFFER, regcomp): Cast the realloc/malloc results.

2005-03-14  Paul Eggert  <eggert@cs.ucla.edu>

	* mktime.c (TYPE_TWOS_COMPLEMENT, TYPE_ONES_COMPLEMENT,
	TYPE_SIGNED_MAGNITUDE, TYPE_MINIMUM, TYPE_MAXIMUM): Sync from
	intprops.h.
	* strtol.c: Likewise.

2005-03-14  Simon Josefsson  <jas@extundo.com>

	* timegm.h: Use proper prototype CPP guards, reported by Dave Love
	<fx@gnu.org>.

2005-03-14  Jim Meyering  <jim@meyering.net>

	* strftime.c (my_strftime) [HAVE_STRFTIME && ! (_NL_CURRENT
	&& HAVE_STRUCT_ERA_ENTRY)]: Initialize the first byte of ubuf[]
	to be nonzero so that we (and caller) can detect the difference
	between a valid zero-length expansion and an error return, even
	when the underlying strftime fails before writing anything into
	that location.

2005-03-10  Jim Meyering  <jim@meyering.net>

	* save-cwd.c [!HAVE_FCHDIR]: Define open, fchdir, and chdir_long
	so that this module works on systems without fchdir.

2005-03-09  Paul Eggert  <eggert@cs.ucla.edu>

	Factor int-properties macros into a single file, except for
	glibc-related files.
	* intprops.h: New file.
	* getloadavg.c: Include it instead of limits.h.
	(INT_STRLEN_BOUND): Remove.
	* human.c: Include intprops.h.
	(group_number): Use INT_STRLEN_BOUND instead of rolling it ourself.
	* human.h (LONGEST_HUMAN_READABLE): Use 146/485 rather than 302/1000.
	* inttostr.h: Include intprops.h instead of limits.h.
	(INT_STRLEN_BOUND, INT_BUFSIZE_BOUND): Remove.
	* mktime.c (TYPE_IS_INTEGER, TYPE_TWOS_COMPLEMENT): New macros,
	for consistency with intprops.h.
	(time_t_is_integer, twos_complement_arithmetic): Use them.
	* sig2str.h: Include <signal.h>, intprops.h.
	(INT_STRLEN_BOUND): Remove.
	* strftime.c (TYPE_SIGNED): Remove.
	(INT_STRLEN_BOUND): Switch to same implementation as intprops.h.
	* strtol.c: Adjust comments to match intprops.h.
	* userspec.c: Include intprops.h.
	(TYPE_SIGNED, TYPE_MINIMUM, TYPE_MAXIMUM): Remove.
	* utimecmp.c, xnanosleep.c, xstrtol.c: Likewise.
	* utimecmp.c (utimecmp): Use TYPE_IS_INTEGER, TYPE_TWOS_COMPLEMENT
	instead of rolling our own expressions.
	* xstrtol.c: Include xstrtol.h first, to test interface.

	* strftime.c: Include <stdbool.h>.  Use bool where appropriate,
	instead of int.
	(my_strftime): Do not mishandle years close to INT_MAX, by doing
	the right thing even if adding 1900 would overflow.  Similarly
	for tm_mon + 1 and tm_yday + 1.
	Make %Y always equivalent to %C%y, and similarly for %G and %g.
	(DO_NUMBER, DO_NUMBER_SPACEPAD): Set digits to d, not a conditional.
	(DO_SIGNED_NUMBER): New macro.
	(my_strftime) [HAVE_TZNAME]: Don't dump core if tp->tm_dst > 1.

2005-03-07  Bruno Haible  <bruno@clisp.org>

	* pagealign_alloc.c (MAP_FILE, MAP_FAILED): Define fallbacks.

2005-03-03  Derek R. Price  <derek@ximbiot.com>
	    Bruno Haible  <bruno@clisp.org>

	* pagealign_alloc.h: New file.
	* pagealign_alloc.c: New file.

2005-01-28  Bruno Haible  <bruno@clisp.org>

	* stpncpy.h (stpncpy): Define as a macro without arguments, so that
	stpncpy.c uses it.

2005-03-01  Paul Eggert  <eggert@cs.ucla.edu>

	Remove workaround for bug in Linux kernel 2.6.8 or thereabouts.
	The workaround isn't strictly needed for POSIX conformance, and
	it's too much of a pain to configure and maintain.  We'll ask
	people to fix their kernels instead.
	* xnanosleep.c: Don't include gethrxtime.h or xtime.h.
	(NANOSLEEP_BUG_WORKAROUND): Remove.
	(xnanosleep): Remove the workaround.

2005-02-12  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (EOVERFLOW): Define to a fallback if needed.

2005-02-25  Paul Eggert  <eggert@cs.ucla.edu>

	* gethrxtime.h, gethrxtime.c, xtime.h: New files.
	* timespec.h (gettime): Return void, since it always
	succeeds now.  All uses changed.
	* gettime.c (gettime) Likewise.
	[HAVE_NANOTIME]: Prefer nanotime.
	Assume gettimeofday succeeds, as POSIX requires.
	Assime time () succeeds, since other code already does.
	* xnanosleep.c: Include xtime.h and gethrxtime.h, not xalloc.h.
	(timespec_subtract): Remove.
	(NANOSLEEP_BUG_WORKAROUND): New constant.
	(xnanosleep): Use gethrxtime rather than gettime; this simplifies
	things considerably.  Use it only on GNU/Linux hosts, since the
	workaround shouldn't be needed elsewhere.

2005-02-24  Bruno Haible  <bruno@clisp.org>

	* gettext.h: Update from GNU gettext 0.14.2.

2005-02-24  Bruno Haible  <bruno@clisp.org>

	* localcharset.c: Update from GNU gettext 0.14.2.
	* config.charset: Update from GNU gettext 0.14.2.

2005-02-22  Simon Josefsson  <jas@extundo.com>

	* iconvme.h, iconvme.c: New files, from libc.

2005-02-20  Neil Conway  <neilc@samurai.com>

	* xgethostname.c (xgethostname): Check for ENOMEM, which is
	returned by OSX/Darwin if the specified buffer is not large
	enough for the hostname.

2005-02-03  Paul Eggert  <eggert@cs.ucla.edu>

	* memrchr.h: New file.
	* chdir-long.c: Include it.
	* memrchr.c [!defined _LIBC]: Include it rather than <string.h>
	Don't bother including stddef.h.

2005-02-03  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* argp-help.c (__argp_help): Create a fake struct argp_state and
	pass it to _help, otherwise the latter coredumps trying to
	dereference state.root_argp.

2005-02-01  Paul Eggert  <eggert@cs.ucla.edu>

	* mountlist.h (MOUNTLIST_H_): New macro, to protect against double
	inclusion.
	Include <sys/types.h>, for dev_t.
	(ME_DUMMY, ME_REMOTE): Move from here....
	* mountlist.c (ME_DUMMY, ME_REMOTE): To here.
	(ME_DUMMY): Count "subfs" as a dummy.  Problem reported by
	Dmitry V. Levin.
	Include mountlist.h first, to test the interface.

2005-01-29  Bruno Haible  <bruno@clisp.org>

	* progname.c (program_name): Initialize.
	Needed when linking statically on MacOS X.

2005-01-28  Bruno Haible  <bruno@clisp.org>

	* javacomp.sh.in: New file, from GNU gettext.
	* javacomp.h: New file, from GNU gettext.
	* javacomp.c: New file, from GNU gettext.

2005-01-26  Bruno Haible  <bruno@clisp.org>

	* javaexec.sh.in: New file, from GNU gettext.
	* javaexec.h: New file, from GNU gettext.
	* javaexec.c: New file, from GNU gettext.

2005-01-26  Simon Josefsson  <jas@extundo.com>

	* gai_strerror.c: Use GPL in header.

2005-01-24  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* argp-help.c (hol_entry_help): Avoid using non-constant
	initializers for struct pentry_state.
	(__argp_error): Check return value of __asprintf
	(__argp_failure): Translate error message

	* argp-parse.c: Removed braces around the expansion of N_()

2005-01-21  Jim Meyering  <jim@meyering.net>

	* openat.h (AT_SYMLINK_NOFOLLOW): Define to 4096, so it's the
	same value as for Solaris 9.

	* chdir-long.c (chdir_long): Rewrite to remove limitation on
	component length.  This included changing the parameter to be
	of type `char *' rather than `char const *'.
	* chdir-long.h (chdir_long): Update prototype.

	* openat.c (fdopendir, fstatat): New functions.
	* openat.h: Include headers required for use of DIR and struct stat.
	[AT_SYMLINK_NOFOLLOW]: Define.
	(fdopendir, fstatat): Add prototypes.

2005-01-21  Bruno Haible  <bruno@clisp.org>

	* classpath.h: New file, from GNU gettext.
	* classpath.c: New file, from GNU gettext.

2005-01-20  Simon Josefsson  <jas@extundo.com>

	* version-etc-fsf.c: New file, with version_etc_copyright.
	* version-etc.c: Remove version_etc_copyright.
	* version-etc.h (version_etc_copyright): Use [] instead of * in
	prototype, suggested by Paul Eggert <eggert@CS.UCLA.EDU>.

2005-01-20  Paul Eggert  <eggert@cs.ucla.edu>

	* save-cwd.c (save_cwd): Remove code to support the case
	where fchdir is missing or flaky.

2005-01-20  Simon Josefsson  <jas@extundo.com>

	* base64.h (isbase64): Add.

	* base64.c (isb64): Rename to isbase64, use to_uchar instead of
	using a unsigned prototype, don't inline.
	(base64_decode): Use it.

2005-01-19  Bruno Haible  <bruno@clisp.org>

	* sh-quote.h: New file, from GNU gettext.
	* sh-quote.c: New file, from GNU gettext.

2005-01-18  Paul Eggert  <eggert@cs.ucla.edu>

	Merge changes from coreutils, as described below in several
	changelogs dated today.

	* save-cwd.c: Include "save-cwd.h" before other include files.
	(O_DIRECTORY): Remove; not needed here, since "." must be
	a directory.  All uses removed.
	(save_cwd): Use __sgi || __sun, not sun || __sun.  __sun is
	universal on Suns, and we also need to test for IRIX.
	Revamp code to use 'if' rather than '#if'.
	Avoid unnecessary comparison of cwd->desc to 0.

	* utimens.c (futimens): Robustify the previous patch, by checking
	for known valid error numbers rather than observed invalid ones.

2005-01-18  Jim Meyering  <jim@meyering.net>

	* version-etc.c (version_etc_copyright): Update copyright date.

	* utimens.c (futimens): Account for the fact that futimes
	can also fail with errno == ENOSYS or errno == ENOENT.
	Patch from Dmitry V. Levin.

	Change the name of the robust chdir function from chdir to chdir_long.
	* save-cwd.c: Include chdir-long.h rather than chdir.h.
	(restore_cwd): Use chdir_long, not chdir.
	* chdir-long.c: Renamed from chdir.c.
	* chdir-long.h: Renamed from chdir.h.
	[!defined PATH_MAX]: Define chdir_long to chdir on systems like the
	Hurd.

2005-01-18  Bob Proulx  <bob@proulx.com>

	* obstack.c [DEFAULT_ALIGNMENT]: Use an intermediate type to simplify
	offsetof() macro construct to avoid compile failure with native HP-UX
	11.0 ANSI C compiler.

2005-01-06  Bruno Haible  <bruno@clisp.org>

	* stpncpy.c: Remove HAVE_STPNCPY and gnu_stpncpy renaming, redundant
	because stpncpy.m4 takes care of it.

2004-01-24  Bruno Haible  <bruno@clisp.org>

	* progreloc.c (xstrdup): Define as strdup if no xmalloc should be used.

2003-10-09  Bruno Haible  <bruno@clisp.org>

	* progreloc.c: Include xalloc.h instead of xmalloc.h.

2005-01-06  Bruno Haible  <bruno@clisp.org>

	* fwriteerror.h (fwriteerror): Change specification to include fclose.
	* fwriteerror.c: Include <stdbool.h>.
	(fwriteerror): At the end, close the file stream. Record whether
	stdout was already closed.

2004-05-27  Bruno Haible  <bruno@clisp.org>

	* execute.c (environ): Declare if needed.
	* pipe.c (environ): Likewise.
	Reported by Michael Schloh von Bennewitz <michael.schloh@cw.com>.

2005-01-04  Paul Eggert  <eggert@cs.ucla.edu>

	* human.c (SIZE_MAX, UINTMAX_MAX): Move these conditional
	definitions to be after all include files, to avoid collisions.
	Problem reported by Bob Proulx.

2004-12-28  Paul Eggert  <eggert@cs.ucla.edu>

	* error.c [!_LIBC && !ENABLE_NLS]: Do not include "gettext.h";
	not needed.  This removes a dependency on the gettext module.
	[defined _LIBC]: Do not include <libintl.h>; not needed.

2004-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	* c-strtod.c (STRTOD): Depend on HAVE_C99_STRTOLD, not
	HAVE_DECL_STRTOLD.

2004-12-23  Paul Eggert  <eggert@cs.ucla.edu>

	* argp-parse.c: Include <stddef.h>.
	(alignof, alignto): New macros.
	(parser_init): Don't assume that void * is aligned sufficiently
	for struct option.

	* getdate.y (YYSTACK_USE_ALLOCA): Define to 0, since there's no
	need to extend the stack.
	(YYINITDEPTH): New macro, so that the initial stack isn't overly
	large.

2004-12-22  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* argp-parse.c (parser_init): Avoid arithmetics on void pointers.

2004-12-19  Paul Eggert  <eggert@cs.ucla.edu>

	* alloca_.h: Conditionalize on _GNULIB_ALLOCA_H, not _ALLOCA_H.
	Remove now-obsolete comment about AIX.
	* getdate.y: Include <alloca.h> only if HAVE_ALLOCA.
	(YYSTACK_USE_ALLOCA): Define to 0 if !HAVE_ALLOCA.
	(YYMAXDEPTH): New macro.

2004-12-18  Bruno Haible  <bruno@clisp.org>

	* fatal-signal.c (fatal_signals): Make non-const.
	(init_fatal_signals): New function.
	(uninstall_handlers, install_handlers): Ignore signals that were set to
	SIG_IGN.
	(at_fatal_signal): Call init_fatal_signals.
	(init_fatal_signal_set): Likewise. Ignore signals that were set to
	SIG_IGN.
	Reported by Paul Eggert.

2004-12-08  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (textint): New member "negative".
	(time_zone_hhmm): New function.
	Expect 14 shift-reduce conflicts, not 13.
	(o_colon_minutes): New rule.
	(time, zone): Use it to add support for +HH:MM, UTC+HH:MM.
	(yylex): Set the "negative" member of signed numbers.

2004-12-04  Paul Eggert  <eggert@cs.ucla.edu>

	Changes imported from coreutils.
	* hard-locale.c: Assume <locale.h> exists.
	Include "strdup.h".
	(GLIBC_VERSION): New macro.
	(hard_locale): Assume setlocale exists.
	Rewrite to avoid #ifdef.
	Use strdup rather than malloc + strcpy.
	* human.c: Assume <locale.h> exists.
	(human_readable): Assume localeconv exists.

2004-12-01  Jakub Jelinek  <jakub@redhat.com>

	* mktime.c (__mktime_internal): If SEC_REQUESTED != SEC,
	convert T2, not T.  (Imported from libc.)

2004-11-30  Paul Eggert  <eggert@cs.ucla.edu>

	* getcwd.c (is_ENAMETOOLONG): New macro.
	(__getcwd.c): Don't restore errno; glibc doesn't.
	[HAVE_PARTLY_WORKING_GETCWD && !defined AT_FDCWD]: Try system getcwd
	first, falling back to our code only if its results look suspicious.
	Ensure that the resulting buffer is only as large as necessary.

	* readutmp.c: Include readutmp.h first.
	Include <errno.h>, since readutmp.h no longer does that.
	* readutmp.h: Don't include <errno.h>,
	<sys/param.h>, <time.h>; not needed to establish interface.
	(errno): Remove decl.
	(HAVE_STRUCT_XTMP_UT_TYPE): Remove; no longer needed.
	(UT_TYPE_EQ, UT_TYPE_NOT_DEFINED, UT_TYPE_BOOT_TIME,
	UT_TYPE_USER_PROCESS, IS_USER_PROCESS): New macros.

2004-11-28  Simon Josefsson  <jas@extundo.com>

	* base64.h, base64.c: New file.

2004-11-27  Paul Eggert  <eggert@cs.ucla.edu>

	* getcwd.h: New file, which I forgot to check in on 2004-11-25.

2004-11-25  Paul Eggert  <eggert@cs.ucla.edu>

	Fix problems reported by Scott S. Tinsley for HP-UX 11.11 using
	HP's ANSI C compiler.
	* fsusage.c (statvfs) [HAVE_SYS_STATVFS_H]: Remove decl.
	Declaring int functions causes warnings on some modern systems and
	shouldn't be needed to compile on ancient ones.
	* same.c (MIN) [defined MIN]: Don't define, since it's already
	defined.

	* getcwd.c: Replace by a copy of glibc/sysdeps/posix/getcwd.c, but
	with the following changes.
	(__set_errno): Parenthesize properly.
	Include <stdbool.h>.
	(MIN, MAX, MATCHING_INO): New macros.
	(__getcwd): Define with prototype, not K&R form.
	Use heuristics to allocate default buffer on stack if possible.
	If AT_FDCWD is defined, use openat and fstatat to avoid O(N**2)
	behavior, and to avoid the PATH_MAX limit when computing
	../../../../...
	Use MATCHING_INO to compare inode number to file.
	Check for arithmetic overflow in size calculations.
	Fix bug in reallocation of dot array that caused getcwd to fail
	on directories nested deeper than 75.
	Be more careful about saving errno on error.
	Do not use realloc; use only free+malloc, as this is a bit
	more flexible and avoids a needless copy operation.
	Do not inspect st_dev and st_ino for symbolic links; POSIX
	doesn't specify the latter.
	Check for closedir errors.
	Avoid needless casts.
	Use "#ifdef weak_alias" around weak_alias, to be like other
	glibc code.
	The following changes to getcwd.c have effect only when used in
	gnulib; they have no effect inside glibc proper.
	(#pragma alloca) [defined _AIX && !defined __GNUC__]: Remove,
	as alloca isn't used.
	(alloca, __alloca): Likewise.
	[!_LIBC]: Include "getcwd.h", "mempcpy.h".
	Include <stddef.h>, <stdlib.h>, <string.h>, <limits.h>
	unconditionally, as gnulib assumes C89 or better.
	Do not include <sys/param.h>.
	(errno) [!defined __GNU_LIBRARY__ && !defined STDC_HEADERS]: Remove
	no-longer-necessary 'extern int errno' decl; gnulib assumes C89 or
	better.
	(NULL) [!defined NULL]: Remove; we assume C89 or better.
	Include <dirent.h> in a way that is compatible with modern Autoconf.
	(_D_ALLOC_NAMELEN, _D_EXACT_NAMLEN):
	New macros, if not already defined.
	Include <unistd.h> if _LIBC, not if __GNU_LIBRARY__.
	Use "_LIBC", not "defined _LIBC", for consistency.
	(HAVE_MEMPCPY): Remove; no longer needed now that gnulib has
	a mempcpy module.
	(__lstat, __closedir, __opendir, __readdir) [!_LIBC]: New macros.
	(GETCWD_RETURN_TYPE): Remove.  All uses replaced by char *.
	* xgetcwd.c: David MacKenzie's old code was removed, so give
	credit only to Jim Meyering and adjust the copyright dates.
	Do not include <limits.h>, <stdio.h>, <sys/types.h>,
	<stdlib.h>, <unistd.h>, "pathmax.h".
	Instead, include "xgetcwd.h" (first) and "getcwd.h".
	(INITIAL_BUFFER_SIZE): Remove.
	(xgetcwd): Rely on getcwd, since we now depend on a reliable one.

2004-11-23  Jim Meyering  <jim@meyering.net>

	* getopt_.h: Remove trailing blanks.

2004-11-23  Paul Eggert  <eggert@cs.ucla.edu>

	* utimens.c (__attribute__, ATTRIBUTE_UNUSED): New macros.
	(futimens): New function, which uses futimes if available.
	(futimens, utimens): Support timespec==NULL, with same semantics
	as utime and utimens.
	* utimens.h (futimens): New decl.

2004-11-23  Jim Meyering  <jim@meyering.net>

	* __fpending.c: Add comment.

2004-11-23  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* getopt_.h: Re-addition of __getopt_argv_const caused
	redefinition warnings. To avoid them, include the defines
	in `#if !defined __need_getopt ... #endif'. The only place
	where __getopt_argv_const is used is in definitions
	of getopt_long and getopt_long_only below, which are as well
	protected by `#ifndef __need_getopt'.
	[defined __GETOPT_PREFIX && !defined __need_getopt]: Undef
	__need_getopt after including <stdio.h> and <unistd.h> These
	headers might have defined it.

2004-11-20  Paul Eggert  <eggert@cs.ucla.edu>

	* getopt_.h (__GETOPT_CONCAT, __GETOPT_XCONCAT, __GETOPT_ID):
	New macros.
	(getopt, getopt_long, getopt_long_only, optarg, opterr, optind,
	optopt): Use them instead of invoking ## directly; otherwise, the
	symbols will be __GETOPT_PREFIXgetopt rather than rpl_getopt.

2004-11-19  Bruno Haible  <bruno@clisp.org>

	* strtok_r.c: Move comments from here...
	* strtok_r.h: ... to here.

2004-11-17  Paul Eggert  <eggert@cs.ucla.edu>

	* realloc.c (rpl_realloc): Call 'free' if n==0, since realloc
	might fail.  Problem reported by Yoann Vandoorselaere.
	* calloc.c (rpl_calloc): Defend against buggy calloc implementations
	that mishandle size_t overflow.

2004-11-16  Paul Eggert  <eggert@cs.ucla.edu>

	* canon-host.c: Include "strdup.h".
	(canon_host): Use getaddrinfo if available, so that IPv6 works.
	Use strdup instead of malloc/strcpy to duplicate strings.

	* human.h (LONGEST_HUMAN_READABLE): Add 1 for space before unit.
	(human_space_before_unit): New constant.
	* human.c (human_readable): Support it.

	* xgetcwd.c: Include <limits.h>, for PATH_MAX.
	(xgetcwd): Set errno correctly when failing.
	Work around Solaris 9 bug: getcwd sets errno==ERANGE even though
	the failure is actually due to a PATH_MAX problem.

	Further getopt changes to make it more likely that glibc will
	buy the changes back.
	* getopt.c (POSIXLY_CORRECT): New constant.
	(getopt): Use it, so to preserve glibc semantic
	* getopt1.c (getopt_long, getopt_long_only): Arg is char * const *
	when compiling for libc.
	* getopt_.h (__getopt_argv_const): Bring it back.
	(getopt_long, getopt_long_only): Use it.

	* getopt.c (_getopt_initialize, _getopt_internal_r, _getopt_internal):
	New arg POSIXLY_CORRECT.  All callers changed.
	(getopt): Argv is now char * const *, as per standard.
	(_getopt_internal_r, _getopt_internal): Argv is now char **,
	not char *__getopt_argv_const *.
	* getopt1.c (getopt_long, _getopt_long_r, getopt_long_only,
	_getopt_long_only_r): Likewise.
	* getopt_.h (getopt, getopt_long, geopt_long_only): Likewise.
	* getopt_int.h (_getopt_internal, _getopt_internal_r,
	_getopt_long_r, _getopt_long_only_r): Likewise.
	* getopt_.h (__getopt_argv_const): Remove.
	(getopt): Argv is now char * const *, as per standard.

	* getdate.y (tORDINAL): New token.
	(day, relunit): Allow it for relative times.
	(relative_time_table): Use tORDINAL for ordinals.

2004-11-15  Jim Meyering  <jim@meyering.net>

	* closeout.c: Include "__fpending.h" once again.
	Include <stdbool.h>.
	(close_stdout): Don't fail just because stdout was closed initially,
	since some programs don't write to stdout in the normal course of
	operation (other than --version and --help), and we don't want this
	function to make e.g. `touch file >&-' fail.
	But do fail if it was closed and someone has tried to write to it.
	E.g., `printf foo >&-' must fail.

2004-11-11  Simon Josefsson  <jas@extundo.com>

	* strtok_r.h, strtok_r.c: New file.

2004-11-11  Paul Eggert  <eggert@cs.ucla.edu>

	* getopt_.h (__getopt_argv_const): New macro, to be used so that
	we can stop lying to compilers about the constness of argv when we
	are compiled outside glibc.
	(getopt, getopt_long, getopt_long_only): Use it.
	* getopt.c (_getopt_initialize, _getopt_internal_r, _getopt_internal,
	getopt): Likewise.
	* getopt1.c (getopt_long, _getopt_long_r, getopt_long_only,
	_getopt_long_only_r): Likewise.
	* getopt_int.h (_getopt_internal, _getopt_internal_r, _getopt_long_r,
	_getopt_long_only_r): Likewise.

	* getopt_.h [defined __GETOPT_PREFIX && !defined __need_getopt]:
	Include <stdlib.h> and <stdio.h>, and <unistd.h> if available.
	Then rename getopt to __GETOPT_PREFIX##getopt, and so forth for
	the other external symbols.
	(getopt) [!defined __GNU_LIBRARY]: Use prototype, not old-style
	declaration, since the above renaming now works around collisions.

2004-11-11  Jim Meyering  <jim@meyering.net>

	* linebreak.c: Remove trailing blanks.
	* alloca_.h: Likewise.
	* acosl.c: Likewise.
	* euidaccess.c: Likewise.
	* allocsa.h: Likewise.

2004-11-10  Paul Eggert  <eggert@cs.ucla.edu>

	* mktime.c (SHR): New macro, which is a portable
	substitute for >> that should work even on Crays.
	(TIME_T_MIDPOINT, ydhms_diff, __mktime_internal): Use it.
	Problem reported by Mark D. Baushke in
	<http://lists.gnu.org/archive/html/bug-gnulib/2004-11/msg00071.html>.
	* getdate.y (SHR): Likewise.
	(tm_diff): Use it.
	* strftime.c (SHR): Likewise.
	(tm_diff): Use it.
	* quotearg.c (struct quoting_options): Use unsigned int for
	quote_these_too, so that right shifts are well defined.  All uses
	changed.

2004-11-10  Simon Josefsson  <jas@extundo.com>

	* getaddrinfo.h, getaddrinfo.c: New files.

2004-11-10  Jim Meyering  <jim@meyering.net>

	Ensure that no close failure goes unreported.
	* closeout.c (close_stdout): Always close stdout.  I.e., don't
	return early when it seems there's nothing to flush.
	Don't include __fpending.h.

2004-11-09  Paul Eggert  <eggert@cs.ucla.edu>

	* strftime.c (DO_MULTIBYTE): Check for wchar.h, too.

2004-11-05  Bruno Haible  <bruno@clisp.org>

	* readlink.c: Include stddef.h, needed for size_t on Woe32.
	Reported by Mark D. Baushke <mdb@cvshome.org>.

2004-11-04  Bruno Haible  <bruno@clisp.org>

	2004-09-11  Bruno Haible  <bruno@clisp.org>
		* allocsa.valgrind: New file.
	2004-02-06  Bruno Haible  <bruno@clisp.org>
		* allocsa.h (sa_alignof): Define differently with HP-UX cc, to
		avoid a bug of this cc on HP-UX 10.20 dealing with enums.
		Reported by Christopher Seip <chris.seip@hp.com>.

2004-11-03  Paul Eggert  <eggert@cs.ucla.edu>

	* xreadlink.c (xreadlink): AIX and HP-UX readlink return -1
	with errno == ERANGE if the buffer is too small.
	Problem reported by Mark D. Baushke.

2004-11-02  Paul Eggert  <eggert@cs.ucla.edu>

	* xreadlink.c (MAXSIZE): New macro.
	(xreadlink): Use it instead of SSIZE_MAX.  Ensure initial buffer
	size does not exceed MAXSIZE.  Avoid cast.
	As suggested by Mark D. Baushke in
	<http://lists.gnu.org/archive/html/bug-gnulib/2004-11/msg00009.html>,
	if readlink fails with buffer size just under MAXSIZE, try again
	with MAXSIZE.

2004-11-02  Derek R. Price  <derek@ximbiot.com>
	and  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y [!TEST]: Include <stdio.h>, since we use sprintf now.
	(get_date): Overparenthesize to avoid GCC warning.

2004-11-02  Bruno Haible  <bruno@clisp.org>

	* setenv.h (unsetenv): Define as a macro if the system's unsetenv()
	function returns void.

2004-11-01  Paul Eggert  <eggert@cs.ucla.edu>

	* getpass.c (fflush_unlocked, flockfile, funlockfile)
	(funlockfile, fputs_unlocked, putc_unlocked): Don't define if
	already declared.

2004-10-29  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y: Add support for TZ="foo" within a date string.
	Fix some bugs near time_t boundaries.  Reject dates with
	out-of-range components, e.g., "Sept 31".
	Include <stdlib.h>, "setenv.h", "xalloc.h".
	(ISDIGIT_LOCALE): Remove; unused.
	Note that the TZ and time functions used here are not reentrant.
	(mktime_ok, get_tz): New functions.
	(TZBUFSIZE): New constant.
	(get_date): Parse leading TZ="foo".  Reject out-of-range components;.
	This requires that we sometimes generate our own TZ="XXX..." setting.

2004-10-27  Derek R. Price  <derek@ximbiot.com>

	* mktime.c (not_equal_tm): Remove redundant check.

2004-10-24  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y: Use Bison 1.875 features, and some minor
	code cleanups.  This change does not affect semantics.
	Don't include <stdlib.h>; no longer needed.
	Don't include unlocked-io.h; only the "#if TEST" code uses
	stdio, and performance isn't crucial there.
	(PC, YYLEX_PARAM, YYPARSE_PARAM): Remove; replaced by
	Bison 1.875 features as described below.
	All uses of "PC." replaced by "pc->".
	(YYSTYPE): Add a forward declaration.
	(yylex, yyerror): Use full prototypes in forward decls.
	Use "%pure-parser" rather than obsolescent "%pure_parser".
	Use %parse-param and %lex-param instead of obsolescent
	YYPARSE_PARAM and YYLEX_PARAM.
	(meridian_table, month_and_day_table, time_units_table,
	relative_time_table, time_zone_table, military_table,
	lookup_zone, lookup_word, get_date):
	Use NULL instead of 0 where appropriate.
	(to_hour): Avoid abort (), to avoid a dependency on
	stdlib.h.
	(yyerror, yylex): Now accepts parser_control * arg.
	(main) [TEST]: Use '\0' rather than 0 for char.

2004-10-22  Paul Eggert  <eggert@cs.ucla.edu>

	* getpagesize.c (getpagesize): Don't assume <sys/param.h> exists.
	It's now the caller's responsibility to handle the case where
	!HAVE_GETPAGESIZE && !defined getpagesize.

	* mktime.c (leapyear): Arg is long int, not int.

2004-10-18  Paul Eggert  <eggert@cs.ucla.edu>

	* argp-fs-xinl.c, argp-xinl.c: Update from glibc.

2004-10-12  Simon Josefsson  <jas@extundo.com>

	* getpass.c (fflush_unlocked, flockfile, funlockfile)
	(fputs_unlocked, putc_unlocked) [!_LIBCS && !USE_UNLOCKED_IO]: Map
	to real functions.

2004-10-11  Yoann Vandoorselaere  <yoann@prelude-ids.org>

	* vsnprintf.h: New file.
	* vsnprintf.c: New file.

2004-10-07  Bruno Haible  <bruno@clisp.org>

	* snprintf.c (snprintf): Avoid a memory allocation if the result fits
	into the provided buffer.

2004-10-06  Paul Eggert  <eggert@cs.ucla.edu>

	* diacrit.c, diacrit.h: Add GPL notice.

	* atanl.c, logl.c: Add GPL notice, to match glibc's added LGPL notice.
	* atanl.c (atanl): Keep the code as similar to glibc as possible.
	* logl.c (logl): Keep the code as similar to glibc as possible.
	This avoids a potential constant-folding bug.

2004-10-05  Bruno Haible  <bruno@clisp.org>

	* strsep.h: Don't declare strsep() if HAVE_STRSEP.

2004-10-04  Paul Eggert  <eggert@cs.ucla.edu>

	* xalloc.h (xmemdup): Renamed from xclone.  All uses changed.
	* xmalloc.c (xmemdup): Likewise.
	* xalloc.h (CCLONE, CLONE, NEW, XCALLOC, XMALLOC, XREALLOC,
	XFREE): Remove these long-obsolescent macros.
	* xmalloc.c (xstrdup): Implementation moved here from xstrdup.c
	* xstrdup.c: Remove.

	* regex.c (re_comp): Cast gettext return value to char *,
	Problem reported by Martin Neitzel via Mark D. Baushke.

2004-10-04  Simon Josefsson  <jas@extundo.com>

	* error.c, md5.c, regex.c: Use '#if USE_UNLOCKED_IO' instead of
	'#ifdef USE_UNLOCKED_IO'.

2004-10-04  Paul Eggert  <eggert@cs.ucla.edu>

	* argmatch.c, closeout.c, error.c, exclude.c, getdate.y,
	getndelim2.c, getpass.c, getusershell.c, linebuffer.c,
	md5.c, mountlist.c, posixtm.c, readtokens.c, readutmp.c,
	regex.c, sha1.c, version-etc.c, yesno.c:
	Include "unlocked-io.h" only if USE_UNLOCKED_IO.
	* unlocked-io.h: Don't worry about USE_UNLOCKED_IO; that's now
	the includer's responsibility.

	Sync from coreutils.

	* modechange.c (mode_compile): Don't decrement a pointer that
	points to the start of a string, as the C Standard says the
	resulting behavior is undefined.

	* backupfile.h (enum backuptype): Rename none -> no_backups,
	simple -> simple_backups, numbered_existing ->
	numbered_existing_backups, numbered -> numbered_backups
	to avoid shadowing problems.  All uses changed.
	* argmatch.c (enum backuptype) [defined TEST]: Likewise.
	* backupfile.c (check_extension, numbered_backup):
	Rename locals to avoid shadowing 'basename'.
	* backupfile.h (VALID_BACKUP_TYPE): Don't evaluate arg more than
	once.

	* .cppi-disable: Add getopt_.h, getopt_int.h.
	* .cvsignore: Add getopt.h.

2004-10-04  Simon Josefsson  <jas@extundo.com>

	* memmem.h: New file.
	* memmem.c: New file, taken from glibc.

2004-10-02  Jim Meyering  <jim@meyering.net>

	* dirfd.h, getpagesize.h: Add copyright notice.

2004-10-01  Paul Eggert  <eggert@cs.ucla.edu>

	* snprintf.c: Remove comments as to why each header is needed.

2004-10-01  Yoann Vandoorselaere <yoann@prelude-ids.org>

	* strsep.h: New file.
	* strsep.c: New file.

2004-10-01  Simon Josefsson  <jas@extundo.com>

	* snprintf.c (snprintf): Handle size==0.

2004-10-01  Simon Josefsson  <jas@extundo.com>
	    Bruno Haible  <bruno@clisp.org>

	* snprintf.c: Include <stdarg.h>, <stdlib.h>, <string.h>.
	(snprintf): Declare 'args'.

2004-09-30  Simon Josefsson  <jas@extundo.com>

	* snprintf.h, snprintf.c: New files.

2004-09-30  Sergey Poznyakoff  <gray@Mirddin.farlep.net>

	* argp-help.c (canon_doc_option): Fixed coredump if *name==NULL
	(hol_entry_help): Never translate an empty string.
	Do not translate option tag (opt->name) if OPTION_NO_TRANS is set
	* argp.h (OPTION_NO_TRANS): New option.

2004-09-29  Oskar Liljeblad  <oskar@osk.mine.nu>

	* xvasprintf.c: Include xalloc.h.
	(xvasprintf): Use xalloc_die, not xmalloc_die.

2004-09-28  Paul Eggert  <eggert@cs.ucla.edu>

	* dummy.c: Change copyright notice to FSF, and license to GPL.

2004-09-13  Paul Eggert  <eggert@cs.ucla.edu>

	* argp-pvh.c (argp_program_version_hook): Provide initial value.
	Problem reported by Bruno Haible in:
	http://lists.gnu.org/archive/html/bug-tar/2004-09/msg00023.html

2004-09-11  Paul Eggert  <eggert@cs.ucla.edu>

	* mempcpy.h: Wrap the entire include file inside #ifndef mempcpy,
	in case some system header has #define'd it.  Problem reported by
	Soeren D. Schulze in
	<http://lists.gnu.org/archive/html/bug-gnulib/2004-09/msg00017.html>.

2004-09-08  Bruno Haible  <bruno@clisp.org>

	* stdint_.h: New file, taken from GNU clisp.

2004-09-08  Oskar Liljeblad  <oskar@osk.mine.nu>

	* xvasprintf.h: New file.
	* xvasprintf.c: New file.
	* xasprintf.c: New file.

2004-09-08  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (VASNPRINTF): Signal EOVERFLOW if the resulting length
	is > INT_MAX.
	* vasprintf.c (vasprintf): Don't test for length > INT_MAX any more.

2004-08-19  Paul Eggert  <eggert@cs.ucla.edu>

	Import from coreutils.
	* userspec.c: Don't use <alloca.h>, so that we don't use alloca on
	strings on unbounded length.  alloca's performance benefits aren't
	that important here.
	(V_STRDUP): Remove.
	(parse_with_separator): New function, with most of the internals
	of the old parse_user_spec.  Allow user to omit both user and group,
	for compatibility with FreeBSD.
	Clone only the user name, not the entire spec.
	Do not set *uid, *gid unless entirely successful.
	Avoid memory leak in some failing cases.
	Fix regression for USER.GROUP reported by Dmitry V. Levin in
	<http://lists.gnu.org/archive/html/bug-coreutils/2004-08/msg00102.html>
	(parse_user_spec): Rewrite to use parse_with_separator.

2004-08-12  Paul Eggert  <eggert@cs.ucla.edu>

	* argp-help.c, argp-parse.c: Use "gettext.h" instead of
	its complicated substitute.
	* argp-help.c: Include <errno.h>, for program_invocation_short_name
	and program_invocation_name.
	(__argp_basename) [!_LIBC]: Remove; the only use was
	replaced by its body.
	(__argp_short_program_name): Change condition from
	!defined __argp_short_program_name to
	! (defined _LIBC || HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME),
	to match argp-namefrob.h.
	(__argp_failure): Don't assume strerror_r returns char *.
	* argp-parse.c (N_): Define unconditionally.
	(argp_default_options): Fill out initializers with 0 to avoid
	gcc warnings.

2004-08-12  Simon Josefsson  <jas@extundo.com>

	* getopt.c, getopt1.c: Remove ELIDE_CODE hack.
	* getopt_.h: Renamed from getopt.h.

2004-08-11  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from coreutils.

	* fnmatch.c (WIDE_CHAR_SUPPORT): Don't set to 1 if missing
	wmemchr or wmemcpy.  Problem reported by Robert Dahlem
	for Reliant Unix 5.43.

	* obstack.c: Include <inttypes.h> and <stdint.h> if available.
	(union fooround): Use uintmax_t, not long int.
	The rest is a merge from libc:
	[defined _LIBC]: Include <shlib-compat.h>.
	(_obstack) [defined _LIBC]: Remove after 2.3.4.

	* settime.c (settime): Recode to avoid warning with Sun Forte C 6U2.

	* strverscmp.c: Convert to UTF-8.

2004-08-09  Paul Eggert  <eggert@cs.ucla.edu>

	* obstack.h (obstack_empty_p):
	Don't assume that chunk->contents is suitably aligned.
	* obstack.c (_obstack_begin, _obstack_begin_1, _obstack_newchunk):
	Likewise. Problem reported by Benno in
	<http://sources.redhat.com/ml/libc-alpha/2004-08/msg00055.html>.

	* chown.c (rpl_chown): Work even if the file is writeable but not
	readable.  This could be improved further but it'd take some work.

2004-08-08  Simon Josefsson  <jas@extundo.com>

	* xgethostname.c: Don't include error.h (not used).

	* getpass.h: Add.
	* getpass.c: Include getpass.h first.

2004-08-08  Paul Eggert  <eggert@cs.ucla.edu>

	* xalloc-die.c: New files.
	* xalloc.h (xalloc_fail_func, xalloc_msg_memory_exhausted): Remove.
	All uses removed.
	* xmalloc.c (xalloc_fail_func, xalloc_msg_memory_exhausted): Likewise.
	Move inclusions of gettext.h, error.h, exitfail.h to xalloc-die.c.
	(_, N_, xalloc_die): Move to xalloc-die.c.
	* userspec.c (parse_user_spaec): Use xstrdup rather than strdup,
	so that we needn't mess with xalloc_msg_memory_exhausted.

	* sha1.h: Renamed from sha.h.
	(SHA1_H): Renamed from _SHA_H.
	(sha1_ctx): Renamed from sha_ctx.
	(sha1_init_ctx): Renamed from sha_init_ctx.
	(sha1_process_block): Renamed from sha_process_block.
	(sha1_process_bytes): Renamed from sha_process_bytes.
	(sha1_finish_ctx): Renamed from sha_finish_ctx.
	(sha1_read_ctx): Renamed from sha_read_ctx.
	(sha1_stream): Renamed from sha_stream.
	(sha1_buffer): Renamed from sha_buffer.
	* sha1.c: Likewise; renamed from sha.c.
	Do not include <sys/types.h>.
	Include <stddef.h> rather than <stdlib.h>.

2004-08-08  Bruno Haible  <bruno@clisp.org>

	* pathname.h (FILE_SYSTEM_PREFIX_LEN): Renamed from
	FILESYSTEM_PREFIX_LEN.
	* progreloc.c: Likewise.
	* concatpath.c (concatenated_pathname): Use FILE_SYSTEM_PREFIX_LEN.

2004-08-06  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from tar.
	* argp-help.c (make_hol, hol_append): Don't assume that
	SIZE_MAX is a valid preprocessor constant.
	(__argp_basename): Change from "#ifndef _LIBC"
	to "#ifndef __argp_short_program_name", so that
	we don't compile these functions for tar.

	More merges from coreutils.
	* raise.c, readtokens0.h, readtokens0.c, strftime.h, utimens.h,
	utimens.c, utimecmp.h, utimecmp.c, xnanosleep.h, xnanosleep.c,
	yesno.h: New files.
	* addext.c: Remove; no longer needed.
	* yesno.c, argmatch.h, argmatch.c, backupfile.h, backupfile.c,
	euidaccess.c, filemode.c, closeout.c, dup2.c, exclude.c,
	fileblocks.c, filemode.c, fnmatch.c, fnmtahc_loop.c,
	fopen-safer.c, fsusage.c, fsusage.h, ftruncate.c, full-write.c,
	getdate.y, getloadavg.c, getugroups.c, hard-locale.c, hard-locale.h,
	hash.c, human.c, human.h, lchown.c, lchown.h, makepath.c, makepath.h,
	md5.c, md5.h, memchr.c, memcoll.c, memrchr.c, modechange.c,
	modechange.h, mountlist.c, mountlist.h, nanosleep.c, posixtm.c,
	putenv.c, quotearg.c, quotearg.h, readtokens.c, readutmp.c,
	readutmp.h, rmdir.c, safe-read.c, save-cwd.c, savedir.c, setenv.c,
	sig2str.c, stat.c, strtoimax.c, strverscmp.c, userspec.c, utime.c,
	version-etc.c., xgethostname.c, xmemcoll.c, xreadlink.c, xstrtod.c,
	xstrtod.h, xstrtoimax.c, xstrtol.c, xstrtol.h, xstrtoumax.c:
	Import changes from coreutils.

2004-08-05  Paul Eggert  <eggert@cs.ucla.edu>

	Merge from coreutils.

	* .gdb-history: Remove; this doesn't belong here.

	* c-strtod.c, c-strtod.h, c-strtold.c, cycle-check.c,
	cycle-check.h, dev-ino.h, canonicalize.h, canonicalize.c,
	fcntl-safer.h, fcntl-safer.c, getcwd.c: New files.

	* dirname.h: Include <stdbool.h>.
	(FILE_SYSTEM_PREFIX_LEN): Renamed from FILESYSTEM_PREFIX_LEN,
	for consistency with POSIX terminology.  All uses changed.
	(IS_ABSOLUTE_FILE_NAME, IS_RELATIVE_FILE_NAME): New macros.
	(strip_trailing_slashes): Use bool for booleans.
	* stripslash.c (strip_trailing_slashes): Likewise.

	* error.c: Work around bug in OpenBSD 3.4 sterror_r: it
	sometimes returns a positive errno value even when it succeeds.
	(print_errno_message) [!LIBC]: Fall back on strerror if
	__strerror_r fails.

	* path-concat.c (mempcpy): Don't define if a system header defines it.
	Don't include stdio.h, stdlib.h, unistd.h, strdup.h.
	(longest_relative_suffix): New function.
	(path_concat): Use it.  Assume first argument is not NULL.
	Port to DOS.  Omit redundant separators.
	Report an error instead of returning NULL.
	Use mempcpy instead of memcpy.
	(xpath_concat): Remove: not declared or used.

	* same.h: Include <stdbool.h>
	(same_name): Return bool, not int.
	* same.c (same_name): Likewise.
	(errno): Don't declare; we assume C89 or better now.

	* stat-macros (S_ISCTG, S_ISOFD, S_ISOFL): New macros,
	if not already defined.

	* xgetcwd.c (errno): Don't declare; we assume C89 or better now.
	* dup-safer.c (errno): Likewise.

2004-08-03  Paul Eggert  <eggert@cs.ucla.edu>

	* fatal.c, fatal.h: Remove as the "fatal" module wasn't used or
	working.

2004-08-03  Simon Josefsson  <jas@extundo.com>

	* strdup.h: Only use HAVE_DECL_STRDUP if defined.
	* progname.h: Don't include stdbool.h.

2004-08-02  Simon Josefsson  <jas@extundo.com>

	* getsubopt.h: New file, with comments from Bruno Haible.
	* getsubopt.c: New file, from glibc, but slightly modified based on
	suggestions from Paul Eggert <eggert@cs.ucla.edu>.

2004-08-01  Simon Josefsson  <jas@extundo.com>

	* xgetdomainname.c: Include stdlib.h, for free().

2004-07-16  Simon Josefsson  <jas@extundo.com>

	* dummy.c: New file.

2004-07-16  Bruno Haible  <bruno@clisp.org>

	* backupfile.h: Add extern "C" for C++.
	* closeout.h: Likewise.
	* copy-file.h: Likewise.
	* findprog.h: Likewise.
	* full-write.h: Likewise.
	* pathname.h: Likewise.
	* progname.h: Likewise.
	* stpcpy.h: Likewise.
	* stpncpy.h: Likewise.
	* strcase.h: Likewise.
	* strstr.h: Likewise.
	* xalloc.h: Likewise.

	* mbswidth.h: Add extern "C" for C++.
	Reported by Albert Chin-A-Young <china@thewrittenword.com>.

2004-07-09  Simon Josefsson  <jas@extundo.com>

	* getndelim2.c: Include stddef.h, for ptrdiff_t.  (FreeBSD 4.9
	failed without this.)

2004-07-09  Paul Eggert  <eggert@cs.ucla.edu>

	* fchown-stub.c: New file.

2004-06-24  Jim Meyering  <jim@meyering.net>

	* obstack.h (obstack_base): Cast to (void *), per documentation.

2004-06-22  Paul Eggert  <eggert@cs.ucla.edu>

	* argz.c, argz_.h: New files, which are autoupdated from libtool.

2004-06-01  Jim Meyering  <jim@meyering.net>

	* calloc.c: New file.

2004-06-06  Paul Eggert  <eggert@cs.ucla.edu>

	* getdate.y (yylex): Allow space between sign and number.
	Problem reported by Dan Jacobson.

2004-06-01  Paul Eggert  <eggert@cs.ucla.edu>
	and  Jim Meyering  <jim@meyering.net>

	Merge from coreutils CVS.

	* stat-macros.h: New file, with contents from file-type.h
	and coreutils' system.h.
	* file-type.c: Include "stat-macros.h".
	* file-type.h (file_type): Move all macro definitions to new file,
	stat-macros.h.

	* chown.c (rpl_chown) [CHOWN_FAILS_TO_HONOR_ID_OF_NEGATIVE_ONE]:
	Wrap old code with this conditional.
	[CHOWN_MODIFIES_SYMLINK]: Try to work around a chown
	function that does not dereference symlinks.
	* lchown.c (lchown) [CHOWN_MODIFIES_SYMLINK]: Just call chown.

	* xreadlink.c: Include xreadlink.h first, to catch .h file
	dependency problems.
	(xreadlink): Accept new arg SIZE, for efficiency.
	All decls and uses changed.
	* xreadlink.h: Include <stddef.h>, for size_t.

	* .cppi-disable: Add alloca_.h, allocsa.h, exit.h, getndelim2.h,
	gettext.h, localcharset.h, strdup.h, strndup.h, strtoul.c, time_r.h.

	* .cvsignore: Add alloca.h, fnmatch.h, poll.h, stdbool.h, sysexits.h.

2004-05-30  Paul Eggert  <eggert@cs.ucla.edu>

	* xmalloc.c (HAVE_MALLOC, HAVE_REALLOC): Do not require these
	macros to be defined.
	(xnmalloc_inline, xnrealloc_inline, xcalloc): Do not die if
	the allocator returns NULL because the requested size is zero.

2004-05-20  Paul Eggert  <eggert@cs.ucla.edu>

	* malloc/obstack.c (_obstack) [defined _LIBC]: Bring back this
	var.  Add comment explaining why libc still defines it.  This
	merges the following patch from glibc:
	http://sources.redhat.com/ml/libc-alpha/2004-05/msg00157.html

2004-05-19  Paul Eggert  <eggert@cs.ucla.edu>

	* obstack.c (_obstack): Remove unused variable.  It hasn't been
	present in glibc since revision 1.1 of this file.
	* obstack.h (_obstack_free, obstack_1grow, obstack_1grow_fast,
	obstack_alignment_mask, obstack_alloc, obstack_base,
	obstack_blank, obstack_blank_fast, obstack_chunk_size,
	obstack_copy, obstack_copy0, obstack_finish, obstack_grow,
	obstack_grow0, obstack_init, obstack_int_grow,
	obstack_int_grow_fast, obstack_make_room, obstack_memory_used,
	obstack_next_free, obstack_object_size, obstack_ptr_grow,
	obstack_ptr_grow_fast, obstack_room): Remove declarations of
	nonexistent functions.

2004-05-17  Derek R. Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	* argp-help.c, argp-parse.c: Assume <alloca.h> rather than freecoding.

2004-05-14  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (VASNPRINTF): Correctly handle the case of a precision
	that consists of a '.' followed by an empty digit string.
	Patch by Tor Lillqvist <tml@iki.fi>.

2004-05-17  Paul Eggert  <eggert@cs.ucla.edu>

	Port obstack to the AS/400, where pointers are 16 bytes wide and
	you cannot cast an integer to a valid pointer.  This patch is
	currently waiting to be integrated into glibc; see
	<http://sources.redhat.com/ml/libc-alpha/2004-05/msg00073.html>.

	* obstack.h (__PTR_TO_INT, __INT_TO_PTR): Remove.
	All uses of __INT_TO_PTR (PTR_TO_INT ...) replaced by __PTR_ALIGN.
	(__BPTR_ALIGN, __PTR_ALIGN): New macros.
	(struct obstack): temp member is now a union of a pointer and
	an integer, instead of an integer.  All integer uses changed.
	This does not affect the physical layout of struct obstack,
	except on hosts (like the AS/400) where the size or alignment of
	void * is greater than that of ptrdiff_t.
	(obstack_finish) [! (defined __GNUC__ && defined __STDC__ &&
	__STDC__)]: Store temporary in pointer member of union, not
	integer member.
	* obstack.c: Include <stddef.h>, for offsetof.
	(struct fooalign): Remove; it doesn't need a name.
	(union fooround): Change double to long double, and add void *.
	(DEFAULT_ALIGNMENT): Use offsetof to compute.
	(DEFAULT_ALIGNMENT, DEFAULT_ROUNDING): Now an enum constant,
	not a macro.  Hence the values are always int; so remove all
	casts-to-int in uses.

2004-05-16  Paul Eggert  <eggert@cs.ucla.edu>
	    Derek Price  <derek@ximbiot.com>

	* alloca.c: Include <alloca.h>, to get our interface.
	* alloca_.h: Use __alloca on AIX, so that we don't have to
	include <alloca.h> first.  Use C89 prototype for alloca; this
	requires including <stddef.h> for size_t.  Use extern "C" if C++.
	Use #elif for simplicity, since we can assume C89 now.
	Don't try to source the system alloca.h since it will not be found
	and to prevent recursively including its replacement.
	* fnmatch.c: Include <alloca.h> instead of opencoding.
	* regex.c: Likewise.

2004-05-16  Derek Price  <derek@ximbiot.com>
	    Paul Eggert  <eggert@cs.ucla.edu>

	getline cleanup.  This changes the getndelim2 API: both order of
	arguments, and meaning of delim2 (now uses EOF, not 0, to indicate
	no delimiter).

	* getline.c: Don't include stddef.h or stdio.h, since our
	interface does that.
	(getline): Always use getdelim, so that we don't have two
	copies of this code.
	* getndelim2.c: Include <limits.h>, <inttypes.h>, <stdint.h>
	if available.
	(PTRDIFF_MAX, SIZE_MAX, SSIZE_MAX): Define if not defined.
	(GETNDELIM2_MAXIMUM): New macro.
	(getndelim2): Reorder arguments.  delim==EOF now means no delimiter,
	instead of the old practice of delim2==0.  All callers changed.
	Return -1 on overflow, instead of returning junk.
	Do not set *linesize unless allocation succeeds.
	* getndelim2.h: Do not include stddef.h; no longer needed, now
	that we include sys/types.h.
	* getnline.h: Likewise.
	* getndelim2.h (GETNLINE_NO_LIMIT): New macro.
	(getndelim2): Reorder arguments.
	* getnline.c (getnline, getndelim):
	Don't discard the NMAX argument.
	(getnline): Invoke getndelim, to avoid code duplication.
	* getnline.h (GETNLINE_NO_LIMIT): New macro, used instead
	of (size_t) -1 by callers of the getnline family.

2004-05-13  Paul Eggert  <eggert@cs.ucla.edu>

	* nanosleep.c (suspended): Change its type from int to
	sig_atomic_t volatile.
	(first_call): Make it private to rpl_nanosleep, and have it
	be zero initially as that's a bit faster.
	(my_usleep): Round up fractional times instead of truncating them,
	as this is the usual meaning for 'sleep'.

	* gettime.c (gettime): Fall back on `time' if `gettimeofday'
	doesn't work.
	* settime.c: Include <unistd.h>, for stime (on Solaris 8, anyway).
	(ENOSYS): Define if not defined.
	(settime): Fall back on stime if it exists and settimeofday fails.
	But don't bother with fallbacks if a method fails with errno == EPERM.

2004-05-11  Jim Meyering  <jim@meyering.net>

	Prior to this change, the save_cwd caller required read access to the
	current directory on most systems (ones with the fchdir function).

	* save-cwd.c (save_cwd) [HAVE_FCHDIR]: If opening `.' read-only
	fails, try write-only, and finally, resort to using xgetcwd.

2004-05-06  Paul Eggert  <eggert@cs.ucla.edu>

	* obstack.c, obstack.h: Import changes from libc.

2004-04-28  Bruno Haible  <bruno@clisp.org>

	* findprog.c (find_in_path): Treat Cygwin like Windows, since it also
	implicitly appends .exe to executables.
	* localcharset.c (ISSLASH): Treat Cygwin like Windows, since it now
	accepts Windows pathnames.
	* pathname.h (ISSLASH, IS_PATH_WITH_DIR, FILESYSTEM_PREFIX_LEN): Treat
	Cygwin like Windows, since it now accepts Windows pathnames.
	* progreloc.c (ISSLASH, IS_PATH_WITH_DIR, FILESYSTEM_PREFIX_LEN): Treat
	Cygwin like Windows, since it now accepts Windows pathnames.
	Reported by Derek Robert Price <derek@ximbiot.com>.

2004-04-20  Jim Meyering  <jim@meyering.net>

	* getndelim2.c (getndelim2): Upon realloc failure, don't leak memory.

2004-04-20  Jim Meyering  <jim@meyering.net>
	    Bruno Haible  <bruno@clisp.org>

	* localcharset.c (get_charset_aliases) [!VMS && !WIN32]: Don't leak
	memory when realloc fails.

2004-04-18  Jim Meyering  <jim@meyering.net>

	* readutmp.c (read_utmp) [UTMP_NAME_FUNCTION]: Upon realloc failure,
	don't leak memory and do call END_UTMP_ENT.

2004-04-11  Paul Eggert  <eggert@twinsun.com>

	* inttostr.h: Include <limits.h> unconditionally, since we assume C89.
	(CHAR_BIT): Remove, since we assume C89.
	Include <stdint.h> if available, as per current Autoconf CVS advice.

2004-03-30  Paul Eggert  <eggert@twinsun.com>

	* cloexec.h, cloexec.c (set_cloexec_flag): Return int
	not bool, to be more consistent with Unix conventions.
	Suggested by Bruno Haible.

	Merge from coreutils.

	* imaxtostr.c, inttostr.c, inttostr.h, offtostr.c, umaxtostr.c:
	New files.

	* getdate.h: Include stdbool.h, and timespec.h instead of
	the usual <time.h> dance.
	(get_date): Change signature to support fractional time stamps.
	All callers changed.
	* getdate.y: Include "getdate.h" first, as we can now
	assume C89 and don't need to worry about 'const'.
	Similarly, include "unlocked-io.h" near start, not in middle.
	Include <limits.h>.
	(textint.value): Use long int rather than int.
	(textint.digits): Use size_t rather than int.
	(BILLION, LOG10_BILLION): New constants.
	(parser_control): New member rel_ns.  Members day_ordinal,
	time_zone, month, day, hour, minutes, rel_year, rel_month,
	rel_day, rel_hour, rel_minutes, rel_seconds
	are now long int, not int.  Member seconds is now struct timespec,
	not int.  New member timespec_seen.  Members dates_seen, days_seen,
	local_zones_seen, rels_seen, times_seen, zones_seen are now size_t,
	not int.
	(%union.intval): Now long int, not int.
	New member timespec.
	(tSDECIMAL_NUMBER, tUDECIMAL_NUMBER): New tokens.
	(seconds, signed_seconds, unsigned_seconds): New nonterminals.
	(spec): Now is a timespec or an item list.
	(timespec, items): New nonterminals.
	(time, rel, relunit, number, get_date):
	Add support for fractional seconds.
	(time): Fix bug: seconds weren't cleared in "00:00 +0000" syntax.
	(gmtime, localtime, mktime): Remove decls; not needed with C89.
	(to_hour): First arg is now long int, not int.
	(to_year): Returns long int, not int.
	Don't treat year -70 like 70.
	(tm_diff): Returns long int, not int.
	(lookup_word): Use bool instead of int when appropriate.
	(yylex): Use size_t for count, not int.
	Detect overflow when parsing large integer constants.
	Add support for fractions.
	(get_date): Make pointers 'const' if possible.
	Use more-portable code to detect integer overflow.
	(main) [TEST]: Adjust to above changes.  Test for localtime failure.
	Don't use ctime; it's not reliable if the year has >4 digits.

	* human.c (humblock): Inspect BLOCKSIZE if BLOCK_SIZE isn't set.
	This is for compatibility with BSD.

	* timespec.h (ST_TIME_CMP_NS, ST_TIME_CMP): Define.
	(ATIME_CMP, CTIME_CMP, MTIME_CMP, TIMESPEC_NS): Likewise.
	From coreutils' system.h.

	* userspec.c: Don't include "posixver.h".
	(parse_user_spec): Fall back on USER.GROUP parsing, regardless
	of POSIX version, as POSIX 1003.1-2001 allows that behavior as a
	compatible extension.  Simplify code by removing a boolean int
	that was always nonzero if a string was nonnull.

2004-03-30  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.

	* mountlist.c [HAVE_SYS_UCRED_H]: Include grp.h before sys/ucred.h.

	* readtokens.c (readtoken): Don't leak 64 bytes when reading
	an empty input stream.

	* readtokens.c: Include <stdbool.h>.
	(readtoken): Use `size_t' rather than int/long.
	All callers adjusted.
	Use `bool' rather than `int' where appropriate.
	Use memset rather than an explicit loop.
	Use x2nrealloc rather than xrealloc.
	Allow the use of `\0' as a delimiter.
	(readtokens): Likewise.
	* readtokens.h (readtoken, readtokens): Update prototypes.

2004-03-30  Bruno Haible  <bruno@clisp.org>

	* getloadavg.c (getloadavg): Don't assume setlocale returns
	nonnull.

2004-03-29  Paul Eggert  <eggert@twinsun.com>

	Merge changes to getloadavg.c from coreutils and Emacs.

	* getloadavg.c [!defined HAVE_SETLOCALE] (setlocale):
	Define to an expression, not to the empty string.
	Include cloexec.h and xalloc.h.
	(getloadavg): Restore LC_NUMERIC locale after setting it temporarily.
	Use set_cloexec_flag rather than rolling our own.
	* cloexec.c, cloexec.h: New files.

2004-03-18  Paul Eggert  <eggert@twinsun.com>

	* getopt.h: Sync with libc CVS.

2004-03-18  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	* mbswidth.h: Include <wchar.h> only if HAVE_DECL_MBSWIDTH_IN_WCHAR_H,
	not on all platforms that have <wchar.h>.
	* mbswidth.c: Include <stdio.h> and <time.h> before <wchar.h>.

2004-03-09  Paul Eggert  <eggert@twinsun.com>

	* argp-parse.c, getopt.c, getopt.h, getopt1.c:
	Sync with libc CVS.
	* getopt_int.h: New file, also synced from libc.

2004-03-07  Paul Eggert  <eggert@twinsun.com>

	* c-stack.c (SIGACTION_WORKS): New macro.  Use it instead of long
	'#if' expressions.  Unlike the code it replaces, it does not
	depend on (defined _SC_PAGESIZE).  However, it does depend on
	HAVE_STRUCT_SIGACTION_SA_SIGACTION; this last change fixes a bug
	first reported by Jason Andrade in
	<http://mail.gnu.org/archive/html/bug-textutils/2003-03/msg00027.html>.

2004-01-18  Simon Josefsson  <jas@extundo.com>

	* strdup.h: New file.
	* strdup.c: Include it.
	* path-concat.c: Include strdup.h. Drop strdup declaration.
	* userspec.c: Include strdup.h. Drop strdup declaration.

2004-02-06  Karl Berry  <karl@gnu.org>

	* config.charset: update from gettext 0.14.1.

2004-02-05  Paul Eggert  <eggert@twinsun.com>

	Add comments and code, prompted by suggestions from Bruno Haible
	for sh-quote.
	* quotearg.h (quotearg_alloc): New decl.  Improve the comments
	describing the enum quoting_style values.
	* quotearg.c (quotearg_alloc): New function.
	(quotearg_buffer_restyled): Treat lone { and } as special.
	Treat = as special.  Work around bug with older shells
	that "see" a '\' that is really the 2nd byte of a multibyte char.
	Quote empty string with shell_quoting_style.

2004-02-03  Bruno Haible  <bruno@clisp.org>

	* pipe.h: New file, from GNU gettext.
	* pipe.c: New file, from GNU gettext.

2004-01-27  Bruno Haible  <bruno@clisp.org>

	* execute.h: New file, from GNU gettext.
	* execute.c: New file, from GNU gettext.
	* w32spawn.h: New file, from GNU gettext.

2004-01-23  Paul Eggert  <eggert@twinsun.com>

	Exit-status fix from coreutils.

	Use exit_failure consistently in place of EXIT_FAILURE,
	so that program exit statuses are consistent on failure.

	* argmatch.c (ARGMATCH_DIE) [! defined ARGMATCH_DIE]:
	Include "exitfail.h", and use exit_failure rather than EXIT_FAILURE.
	* argmatch.h: Comment fix to match the above.
	* obstack.c (obstack_exit_failure) [!defined _LIBC]:
	Now a macro referring to exit_failure, instead of a separate
	variable.  Include "exitfail.h" to get it.
	* xstrtol.h: Include "exitfail.h".
	(STRTOL_FATAL_ERROR): Exit with status exit_failure, not 2.

	* long-options.c (parse_long_options): Use prototype
	for usage function arg.  Pass it EXIT_SUCCESS rather than 0,
	for clarity.

2004-01-21  Jim Meyering  <jim@meyering.net>

	* mktime.c (__mktime_internal) [!_LIBC]: Define to mktime_internal
	so as not to conflict with a different-sized __mktime_internal
	function in GNU libc.
	* timegm.c (__mktime_internal) [!_LIBC]: Likewise.
	Problem building statically-linked `ls' reported by Michael Brunnbauer.

2004-01-18  Paul Eggert  <eggert@twinsun.com>

	Merge from diffutils.

	* file-type.c (file_type): Add typed memory objects.
	* file-type.h (S_TYPEISTMO): New macro.

	* c-stack.h (c_stack_action): Remove argv argument.
	* c-stack.c (c_stack_action): Likewise.  All uses changed.
	(die): Don't calculate message unless segv_action returns.
	(get_stack_location, min_address_from_argv, max_address_from_argv,
	volatile stack_base, volatile_stack_size): Remove.
	(segv_handler): If ! HAVE_XSI_STACK_OVERFLOW_HEURISTIC, assume
	that every segmentation violation is a stack overflow.  (Ouch!)
	See Debian bug 136249 (still outstanding) for more info about why
	HAVE_XSI_STACK_OVERFLOW_HEURISTIC fails on Linux kernels.

2003-11-30  Bruno Haible  <bruno@clisp.org>

	Safer stack allocation.
	* setenv.c: Include allocsa.h.
	(alloca): Remove fallback definition.
	(freea): Remove macro.
	(__add_to_environ) [!_LIBC]: Use allocsa instead of alloca. Use freesa
	instead of freea.

2003-10-17  Bruno Haible  <bruno@clisp.org>

	* binary-io.h: Avoid warnings on Cygwin.

2003-12-28  Bruno Haible  <bruno@clisp.org>

	* wait-process.c (wait_subprocess): Add ignore_sigpipe argument.
	* wait-process.c (wait_subprocess): Likewise. Handle SIGPIPE specially.

2003-11-28  Bruno Haible  <bruno@clisp.org>

	* wait-process.c (cleanup_slaves): Use ANSI C declaration.

2003-11-27  Bruno Haible  <bruno@clisp.org>

	* wait-process.c: On Windows, include windows.h. Needed on mingw.

2003-11-17  Bruno Haible  <bruno@clisp.org>

	* wait-process.c (wait_process): Disable the 2003-10-31 waitid() patch.

2003-11-24  Bruno Haible  <bruno@clisp.org>

	* xallocsa.h: New file, from GNU gettext.
	* xallocsa.c: New file, from GNU gettext.

2003-11-24  Bruno Haible  <bruno@clisp.org>

	* allocsa.h: New file, from GNU gettext.
	* allocsa.c: New file, from GNU gettext.

2003-11-24  Bruno Haible  <bruno@clisp.org>

	* eealloc.h: New file.

2004-01-15  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.

	* md5.h (rol) [__GNUC__ && __i386__]: Don't use `asm' code.  These
	days, gcc-3.x does better all by itself.  Patch from Dean Gaudet:
	http://mail.gnu.org/archive/html/bug-coreutils/2003-11/msg00144.html

	* posixver.c (DEFAULT_POSIX2_VERSION): Use definition of new,
	optional configure-time default.

	* version-etc.c (version_etc_copyright): Update copyright date.

	* xreadlink.c (xreadlink): Correct outdated comment.

2004-01-15  Paul Eggert  <eggert@twinsun.com>

	Merge from coreutils.

	* posixver.c: Include posixver.h.

	* same.c: Include <stdbool.h>, <limits.h>.
	(_POSIX_NAME_MAX): Define if not defined.
	(MIN): New macro.
	(same_name): If file names are silently truncated, report
	that the file names are the same if they are the same after
	the silent truncation.

	* xstrtod.h (xstrtod): Accept an extra arg, specifying the
	conversion function.
	* xstrtod.c (xstrtod): Likewise.  All callers changed to
	include c-strtod.h and use c_strtod.  Don't include stdlib.h; no
	longer needed.

2004-01-14  Paul Eggert  <eggert@twinsun.com>

	* fnmatch_loop.c (ALLOCA_LIMIT): Remove macro, which collided
	with like-named macro in fnmatch.c.
	(EXT): Use an internal constant instead.

	Merge fnmatch patches from glibc.
	* fnmatch.c (mbsinit): Remove define.
	Add libc_hidden_ver (__fnmatch, fnmatch).
	* fnmatch_loop.c (FCT): Cast to int32_t and UCHAR when appropriate.
	Adjust to renaming of collseq_table_lookup to __collseq_table_lookup.

2003-12-14  Karl Berry  <karl@gnu.org>

	* config.charset: update from gettext-runtime.

2003-12-03  Paul Eggert  <eggert@twinsun.com>

	* getgroups.c (getgroups): xmalloc takes one argument, not two.
	Bug reported by Alfred M. Szmidt.

2003-11-29  Karl Berry  <karl@gnu.org>

	* argp-{help.c,parse.c,namefrob.h}, argp.h: update from libc.

2003-11-23  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	* printf-parse.h: Don't include sys/types.h.
	(ARG_NONE): New macro.
	(char_directive): Change type of *arg_index fields to size_t.
	* printf-parse.c: Don't include sys/types.h.
	(SSIZE_MAX): Remove macro.
	(PRINTF_PARSE): Change the type of the arg_index variables to size_t.
	Remove unnecessary overflow check.
	* vasnprintf.c (VASNPRINTF): Update for type change of *arg_index
	fields.

2003-11-24  Paul Eggert  <eggert@twinsun.com>

	* alloca.c: Remove dependency on xalloc module.
	(xalloc_die): Remove.
	(memory_full) [!defined emacs]: New macro.
	[!defined emacs]: Don't include xalloc.h.
	(alloca): Invoke memory_full, not xalloc_die, if malloc fails or
	address arithmetic overflows.  Change datatypes a bit to avoid
	unnecessary casts.

2003-11-22  Jim Meyering  <jim@meyering.net>

	* xmalloc.c (x2nrealloc_inline): Fix typos in comments: s/size/size_t/.

2003-11-17  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (alloca): Remove fallback definition.
	(freea): Remove definition.
	(VASNPRINTF): Use alloca only for small sizes, say <= 4000 bytes.
	Reported by Paul Eggert.

2003-11-17  Jim Meyering  <jim@meyering.net>

	On systems without utime and without a utimes function capable of
	dealing with a NULL struct utimbuf* argument, this utime replacement
	could -- in unusual circumstances -- leak a file descriptor.
	* utime.c: Include <unistd.h> and <errno.h>.
	(utime_null): Be sure to close `fd' and to preserve errno.
	Reported by Geoff Collyer via Arnold Robbins.

2003-11-16  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	Protect against address arithmetic overflow.
	* printf-args.h: Include stddef.h.
	(arguments): Change type of field 'count' to size_t.
	* printf-args.c (printf_fetchargs): Use size_t instead of
	'unsigned int' where appropriate.
	* printf-parse.h: Include sys/types.h.
	(char_directive): Change type of *arg_index fields to ssize_t.
	(char_directives): Change type of fields 'count', max_*_length to
	size_t.
	* printf-parse.c: Include sys/types.h and xsize.h.
	(SSIZE_MAX): Define fallback value.
	(PRINTF_PARSE): Use size_t instead of 'unsigned int' and ssize_t
	instead of 'int' where appropriate. Check a_allocated, d_allocated
	against overflow. Reject %m$ argument numbers > SSIZE_MAX + 1.
	* vasnprintf.c: Include xsize.h.
	(VASNPRINTF): Use size_t instead of 'unsigned int' where appropriate.
	Check alloca, malloc, realloc, ENSURE_ALLOCATION arguments against
	overflow. Avoid wraparound when converting a width or precision from
	decimal to binary.

2003-11-16  Bruno Haible  <bruno@clisp.org>

	Update from GNU gettext.
	* printf-parse.c: Generalize to it can be compiled for wide strings.
	(PRINTF_PARSE, CHAR_T, DIRECTIVE, DIRECTIVES): New macros.
	* vasnprintf.c: Generalize to it can be compiled for wide strings.
	(VASNPRINTF, CHAR_T, DIRECTIVE, DIRECTIVES, PRINTF_PARSE, USE_SNPRINTF,
	SNPRINTF): New macros.
	Don't include <alloca.h> if the file is used inside libintl.
	(local_wcslen): New function, for Solaris 2.5.1.
	(VASNPRINTF): Use it instead of wcslen.

2003-11-16  Bruno Haible  <bruno@clisp.org>

	* xsize.h (xmax): New function.
	(xsum, xsum3, xsum4): Declare as "pure" functions.

2003-11-12  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h: Do not include <limits.h> or <stdint.h>.
	(xalloc_oversized): Use sizeof (ptrdiff_t) and sizeof (size_t) for
	the heuristic, rather than PTRDIFF_MAX and SIZE_MAX.  This
	heuristic is just as accurate as far as we know, and it removes a
	dependency on size_max.m4 and ptrdiff_max.m4.

2003-11-12  Paul Eggert  <eggert@twinsun.com>

	* xstrtol.c (__xstrtol): Remove "break" immediately after
	"return", to pacify some unknown compiler.  Problem reported
	by Joerg Schilling.

2003-11-11  Bruno Haible  <bruno@clisp.org>

	* xsize.h (SIZE_MAX): Remove fallback definition.
	* xalloc.h: Include limits.h. Assume SIZE_MAX and PTRDIFF_MAX are
	defined.

2003-11-10  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h (xalloc_oversized): [! (defined PTRDIFF_MAX &&
	PTRDIFF_MAX < SIZE_MAX)]: Fix off-by-one error that would have
	rejected some allocations of exactly SIZE_MAX - 2 bytes.
	From Bruno Haible.
	[defined PTRDIFF_MAX && PTRDIFF_MAX < SIZE_MAX]: Use SIZE_MAX,
	not (size_t) -1, since it's defined here.

2003-11-06  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h [HAVE_STDINT_H]: Include <stdint.h>.
	(xalloc_oversized) [! (PTRDIFF_MAX < SIZE_MAX)]:
	Reject sizes of exactly SIZE_MAX bytes.
	* xreadlink.c: Include "xalloc.h" before checking whether SIZE_MAX
	is defined, since "xalloc.h" now defines SIZE_MAX on modern hosts.

2003-11-05  Bruno Haible  <bruno@clisp.org>

	* xsize.h: Include limits.h, to avoid a possible collision with
	SIZE_MAX defined in <limits.h> on Solaris.

2003-11-04  Bruno Haible  <bruno@clisp.org>

	* xsize.h: New file.
	* linebreak.c: Include xsize.h.
	(mbs_possible_linebreaks, mbs_width_linebreaks): Check malloc()
	argument for overflow.
	Suggested by Paul Eggert.

2003-10-31  Bruno Haible  <bruno@clisp.org>

	* wait-process.c (wait_process): Use waitid with WNOWAIT if available,
	to avoid (extremely rare) race condition.
	Suggested by Paul Eggert.

2003-11-03  Jim Meyering  <jim@meyering.net>

	* userspec.c: Include "userspec.h".
	* userspec.h: New file.

2003-10-31  Paul Eggert  <eggert@twinsun.com>

	* mountlist.h (struct mount_entry.me_type_malloced): New member.
	* mountlist.c (SIZE_MAX): Define if not defined already.
	(read_filesystem_list): Set and use me_type_malloced.
	Use "sizeof *me" rather than "sizeof (struct mount_entry)" (or
	whatever the type happens to be), for brevity and consistency.
	Check for size calculation overflow on Alphas running OSF/1.

2003-10-31  Jim Meyering  <jim@meyering.net>

	* hash.c: Include "xalloc.h" for use of xalloc_oversized.

	* linebuffer.c: Include <string.h> for declaration of memset.

2003-10-30  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	* vasprintf.c: Include <limits.h>, <stdlib.h>.
	(vasprintf): Fail if the resulting length doesn't fit in an 'int'.

2003-10-29  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h (xalloc_oversized): Now a macro, not a function,
	so that it works even if SIZE_MAX < N.  Do not include <stdbool.h>;
	no longer needed.
	* quotearg.c (quotearg_n_options): Use it.
	* group-member.c: Include <stdbool.h>.
	(free_group_info): Arg is now const *; don't free arg.
	(get_group_info): Now returns bool and accepts struct group_info *,
	rather than returning a malloc'ed struct group_info *.
	All uses changed.  Check for overflow in internal size calculation.

	* getusershell.c (readname): Simplify the code by using x2nrealloc
	rather than xmalloc/xrealloc.
	* linebuffer.c (initbuffer, readlinebuffer): Simplify the code by
	using x2realloc rather than xmalloc/xrealloc.  Also, fix a C
	conformance bug: the old code used a pointer after freeing the
	storage that it addressed.
	* hash.c (hash_initialize): Simplify the code by using xalloc_oversized
	rather than doing it by hand.
	* getgroups.c (getgroups): Don't use xrealloc, since we don't need
	the buffer preserved.  Use free and xmalloc instead.
	* quotearg.c (quotearg_n_options): Likewise.
	Use a simpler test for size overflow.  Don't use xalloc_oversized
	because unsigned int might be wider than size_t (!); this suggests
	that we should switch from unsigned int to size_t for slot numbers.

2003-10-27  Bruno Haible  <bruno@clisp.org>

	* stdbool_.h: Better support for BeOS.

2003-10-27  Paul Eggert  <eggert@twinsun.com>

	* exclude.c (new_exclude): Use xzalloc rather than xmalloc
	to allocate the returned structure.  Do not allocate a subarray,
	as x2nrealloc will do that.
	(add_exclude): Use x2nrealloc to reallocate ex->exclude,
	instead of xnrealloc.
	(add_exclude_file): Use x2realloc instead of malloc + xnrealloc.

2003-10-26  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h (xalloc_oversized): New static inline function, for
	callers that want to do their own size-overflow checking.  Include
	<stdbool.h>, since xalloc_oversized returns bool.
	* xalloc.c (array_size_overflow): Remove.  All callers changed
	to use xalloc_oversized.

	Add two functions x2realloc, x2nrealloc, for programs that grow
	arrays dynamically by doubling their sizes.
	* xalloc.h (x2realloc, x2nrealloc): New decls.
	* xmalloc.c (x2nrealloc_inline, x2nrealloc, x2realloc):
	New functions.

	Port to C99 semantics for 'inline' of external functions.
	Bug reported by Bruno Haible.
	* xmalloc.c (xnmalloc_inline): New static inline function,
	with the old contents of xnmalloc.
	(xnmalloc, xmalloc): Use it.
	(xnrealloc_inline): New static inline function,
	with the old contents of xnrealloc.
	(xnrealloc, xrealloc): Use it.

	* alloc.c (alloca): xmalloc cannot return NULL, so don't test for that.

2003-10-25  Paul Eggert  <eggert@twinsun.com>

	Fix several address-calculation bugs in the hash modules,
	plus some minor code cleanup.

	* hash.h: Include <stdbool.h>, for bool.
	* hash.c: Don't include <stdbool.h>, since hash.h does it now.
	* hash.h (Hash_hasher, hash_get_n_buckets, hash_get_n_buckets_used,
	hash_get_n_entries, hash_get_max_bucket_length,
	hash_get_entries, hash_do_for_each, hash_string, hash_initialize,
	hash_rehash): Use size_t rather than unsigned.
	* hash.c (struct hash_table, hash_get_n_buckets,
	hash_get_n_buckets_used, hash_get_n_entries,
	hash_get_max_bucket_length, hash_table_ok, hash_print_statistics,
	hash_get_entries, hash_do_for_each, hash_string, is_prime,
	next_prime, hash_initialize, hash_rehash, hash_delete, hash_print):
	Likewise.
	(SIZE_MAX): Define if not defined.
	(hash_get_max_bucket_length, hash_table_ok, hash_lookup,
	hash_get_first, hash_get_next, hash_get_entries, hash_do_for_each,
	hash_print):
	Use const * when possible.
	(hash_string): Use (unsigned char) *P rather than *(unsigned char *) P.
	(check_tuning): Fix bug: if tuning parameters were very close to
	0 or 1, rounding errors could have caused subscript violations.
	(hash_initialize, allocate_entry, hash_print): Remove unnecessary cast.
	(hash_initialize): Add 'fail:' label
	to free table and return NULL, and use it to simplify code.
	Use calloc rather than clearing the storage ourself.
	(hash_initialize, hash_rehash): Check for arithmetic overflow in
	buffer size calculations.
	* hash-pjw.h (hash_pjw): Use size_t, not unsigned.
	Include <stddef.h>, for size_t.
	* hash-pjw.c (hash_pjw): Likewise.
	Switch to method described by Bruno Haible.
	Include <limits.h>, for CHAR_BIT.
	(SIZE_BITS): New macro.

2003-10-21  Paul Eggert  <eggert@twinsun.com>

	* getndelim2.c (getndelim2): When size calculation overflows,
	ceiling the allocation at NMAX bytes rather than silently
	discarding input bytes before NMAX is reached.  This makes
	a difference only if NMAX exceeds SIZE_MAX / 2.

	* obstack.c: Merge from glibc.
	[defined _LIBC]: Include <obstack.h>, not "obstack.h".
	Add libc_hidden_def (_obstack_newchunk).
	(_obstack_free) [! defined _LIBC]: Remove.
	[defined _LIBC]: Make a strong alias from obstack_free, rather than
	a clone of the function body.
	(fputs) [defined _LIBC && defined USE_IN_LIBIO]: Remove.
	[defined _LIBC && !defined USE_IN_LIBIO]: Include <libio/iolibio.h>.

	* obstack.h: Indenting cleanup, to make it easier to merge with glibc.
	(obstack_grow, obstack_grow0): Remove unnecessary parentheses around
	arg to memcpy.

	* obstack.h (obstack_1grow_fast): Properly parenthesize arg.
	(obstack_ptr_grow_fast, obstack_int_grow_fast):
	Don't use lvalue casts, as GCC plans to remove support for them
	in GCC 3.5.  Reported by Joseph S. Myers.  This bug
	was also present in the non-GCC version, indicating that this
	code had always been buggy and had never been widely used.
	(obstack_1grow, obstack_ptr_grow, obstack_int_grow, obstack_blank):
	Use the fast variant of each macro, rather than copying the
	definiens of the fast variant; that way, we'll be more likely to
	catch future bugs in the fast variants.

2003-10-20  Bruno Haible  <bruno@clisp.org>

	* wait-process.h: New file, from GNU gettext.
	* wait-process.c: New file, from GNU gettext.

2003-10-19  Jim Meyering  <jim@meyering.net>

	* vasnprintf.c (vasnprintf): Work around losing snprintf on HPUX 10.20.

2003-10-16  Paul Eggert  <eggert@twinsun.com>

	* getgroups.c: Include <errno.h>, <stdlib.h>.
	(getgroups): First arg is int, not size_t.
	Don't let 'free' mangle errno.

2003-10-16  Jim Meyering  <jim@meyering.net>

	* xmalloc.c: Include <string.h>, for declarations of memset and memcpy.

2003-10-15  Paul Eggert  <eggert@twinsun.com>

	* exclude.c: Do not include <inttypes.h> or <stdint.h>.
	(SIZE_MAX): Remove.
	(new_exclude, add_exclude_file): Initial size no longer needs to
	be a power of 2.
	(add_exclude, add_exclude_file): Use xnrealloc instead of rolling
	our own address arithmetic overflow checking.

	* fnmatch.c (SIZE_MAX): Define if standard headers don't.
	(fnmatch): Do not alloca more than 2000 wide characters;
	instead, use malloc for large buffers.
	Check for address arithmetic overflow, and return -1
	with errno set to ENOMEM in that case.
	* fnmatch_loop.c (ALLOCA_LIMIT): New macro.
	(NEW_PATTERN): Do not alloca more than 8000 bytes;
	instead, return -1.  Check for address arithmetic overflow.

2003-10-14  Paul Eggert  <eggert@twinsun.com>

	Handle invalid suffixes and overflow independently, so that
	callers can treat them independently as needed.  Fix some bugs in
	suffix handling, e.g., "100k@" was not diagnosed as an invalid
	suffix for a human-readable blocksize.  The major caller-visible
	change is the addition of a new
	LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW enum value, indicating
	that both overflow and suffix chars were found.

	* human.c (humblock): Don't check separately for invalid suffix
	char; that is xstrtoumax's job (now that its bug is fixed).
	* xstrtoimax.c (STRTOL_T_MINIMUM, STRTOL_T_MAXIMUM) [defined
	INTMAX_MAX]: New macros.
	* xstrtol.c (STRTOL_T_MINIMUM, STRTOL_T_MAXIMUM, TYPE_MINIMUM,
	TYPE_MAXIMUM): New macros.
	(bkm_scale, bkm_scale_by_power): Return strtol_error, not int.
	(bkm_scale, bkm_scale_by_power, __xstrtol): Return maximal values
	if overflow occurs, as it's what __strtol does and it's more useful
	in practice.
	(__xstrtol): If __strtol reports some error other than ERANGE,
	reflect it to the caller as LONGINT_INVALID.  If it reports
	ERANGE, continue the rest of parsing, and report LONGINT_OVERFLOW
	| LONGINT_INVALID_SUFFIX_CHAR if both errors occur.
	* xstrtol.h (LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW): New enum
	value.
	(_STRTOL_ERROR): Handle it.  Abort when given unknown error codes.
	* xstrtoul.c (STRTOL_T_MINIMUM, STRTOL_T_MAXIMUM): New macros.
	* xstrtoumax.c (STRTOL_T_MINIMUM, STRTOL_T_MAXIMUM)
	[defined UINTMAX_MAX]: New macros.

2003-10-14  Bruno Haible  <bruno@clisp.org>

	* fatal-signal.h: Improved comments. Suggested by Paul Eggert.
	* fatal-signal.c: Use sig_atomic_t. Suggested by Paul Eggert.
	Also use volatile where needed.

2003-10-12  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h (xnmalloc, xzalloc, xnrealloc, xclone): New decls.
	(XMALLOC, XCALLOC, XREALLOC, XFREE, CCLONE, CLONE): Deprecate,
	and define in terms of the other primitives.
	* xmalloc.c: Include stdbool.h; do not include exit.h.
	(SIZE_MAX): Define if not already defined.
	(array_size_overflow): New function.
	(xalloc_die): Abort instead of exiting if 'error' returns.
	(xnmalloc, xnrealloc, xzalloc, xclone): New functions.
	(xmalloc, xrealloc): Use them.
	(xcalloc): Check for address arithmetic overflow.
	* xstrdup.c (xstrdup): Use xclone, since memcpy should be
	a bit faster than strcpy.

2003-10-08  Paul Eggert  <eggert@twinsun.com>

	Merge getpass from libc, plus a few fixes.

	* getpass.c (HAVE_STDIO_EXT) [_LIBC]: Define to 1.
	Include <stdbool.h>.
	Include <stdio_ext.h> if HAVE_STDIO_H, otherwise define
	__fsetlocking to empty.
	[_LIBC]: Do not include "getline.h" or "unlocked-io.h", but
	do include <bits/libc-lock.h>.
	Do not include <fcntl.h>; not needed.
	[_LIBC]: Include <wchar.h>.
	(NOTCANCEL_MODE): New macro.
	(flockfile, funlockfile) [_LIBC]: New macros.
	(__libc_cleanup_push, __libc_cleanup_pop, __getline, __tcgetattr)
	[!_LIBC]: New macros.
	(call_fclose): New function.
	(getpass): Use it.  Save tty stream separately; this simplifies the
	code and makes it more reliable if stdin happens to equal stdout.
	Invoke __fsetlocking on tty.
	Handle thread cancellation if needed.
	Namespace cleanup (use __tcgetattr, __getline).
	Use bool for Booleans.
	[USE_IN_LIBIO]: Handle wide streams.
	[!_LIBC]: Unconditionally do the fseek, since we don't know what
	stream might go where.

	* unlocked-io.h: Include <stdio.h>, so that the caller
	doesn't have to include <stdio.h> before us.
	(clearerr_unlocked, feof_unlocked, ferror_unlocked,
	fflush_unlocked, fgets_unlocked, fputc_unlocked, fputs_unlocked,
	fread_unlocked, fwrite_unlocked, getc_unlocked, getchar_unlocked,
	putc_unlocked, putchar_unlocked): Define to the unlocked counterpart
	if not declared, so that we can use getpass.c code from libc without
	rewriting it.
	(flockfile, ftrylockfile, funlockfile): New macros.

2003-10-06  Bruno Haible  <bruno@clisp.org>

	* version-etc-2.h: Remove file.
	* version-etc-2.c: Remove file.

2003-09-25  Jim Meyering  <jim@meyering.net>
	    Bruno Haible  <bruno@clisp.org>

	This lets translators provide better translations for the
	"Written by ..." part of --version output.
	* version-etc.h: Include stdarg.h.
	(version_etc_copyright): Declare as readonly.
	(version_etc): Make this function variadic with a NULL-terminated list
	of author name strings.
	(version_etc_va): New declaration.
	* version-etc.c: Include stdarg.h, stdlib.h.
	(version_etc_copyright): Declare as readonly.
	(version_etc_va): New function. Provide a different translatable string
	for each possible number of authors < 10. Abbreviate when there are 10
	authors or more.
	(version_etc): Make this function variadic. Call version_etc_va.
	Suggestion from Gary V. Vaughan.

	* long-options.h (parse_long_options): Change prototype: the authors
	string is moved to the end and becomes variadic.
	* long-options.c: Include stdarg.h.
	(parse_long_options): Make this function variadic, too.
	Call version_etc_va, not version_etc.

2003-10-06  Bruno Haible  <bruno@clisp.org>

	* fatal-signal.h: New file, from GNU gettext.
	* fatal-signal.c: New file, from GNU gettext.

2003-10-04  Karl Berry  <karl@gnu.org>

	* argp*: update from libc.

2003-10-01  Larry Jones  <lawrence.jones@eds.com>

	* getpass.c (getpass): Use a no-op fseek when switching from input to
	output mode on the same stream.

2003-09-29  Paul Eggert  <eggert@twinsun.com>

	* strftime.c (tm_diff) [! HAVE_TM_GMTOFF]:
	Fix arg typo in previous patch.

2003-09-28  Jim Meyering  <jim@meyering.net>

	* error.c: Correct cpp indentation.

2003-09-27  Paul Eggert  <eggert@twinsun.com>

	* minmax.h (MIN, MAX) [__STDC__ && defined __GNUC__ && __GNUC__ >= 2]:
	Omit the special code that used __typeof__, since we worry that
	it could be more trouble than it's worth.  See:
	http://mail.gnu.org/archive/html/bug-gnulib/2003-01/msg00090.html
	http://mail.gnu.org/archive/html/bug-gnulib/2003-01/msg00095.html

	* free.c: New file.

2003-09-26  Jim Meyering  <jim@meyering.net>

	* error.c (error_tail): Move some declarations
	into inner scope where the local variables are used.

2003-09-26  Bruno Haible  <bruno@clisp.org>

	* stpncpy.h (gnu_stpncpy): New declaration.
	(stpncpy): Define as alias for gnu_stpncpy.
	* stpncpy.c [!_LIBC]: Define gnu_stpncpy, not stpncpy.

2003-09-26  Paul Eggert  <eggert@twinsun.com>

	* error.c (SIZE_MAX) [!defined SIZE_MAX]: Define.
	(error_tail): Do not loop, reallocating temporary buffer, since
	the output cannot contain more wide characters than the input
	contains bytes, the size must be big enough already.  This avoids
	one potential size overflow calculation.  Check for size overflow
	when calculating temporary buffer size.  Free temporary buffer
	when done, if it was allocated with malloc; this plugs a memory
	leak.  Remove casts from void * to pointers, that are no longer
	needed now that we're assuming C89 or better.

	Merge error changes from glibc.

	* error.c, error.h: Update copyright notice header to match glibc.
	* error.c [defined _LIBC]: Include <errno.h>, <bits/libc-lock.h>.
	(error, error_at_line) [defined _LIBC && defined __libc_ptf_call]:
	Disable cancellation while printing error.
	* error.h: Prepend __ to parameter names.

2003-09-25  Karl Berry  <karl@gnu.org>

	* argp-fmtstream.c, argp-help.c: update from libc.

2003-09-25  Bruno Haible  <bruno@clisp.org>

	* version-etc-2.h: New file, from version-etc.h with modifications.
	* version-etc-2.c: New file, from version-etc.c with modifications.

2003-09-25  Simon Josefsson  <jas@extundo.com>

	* xgetdomainname.h: New file.
	* xgetdomainname.c: New file.

2003-09-25  Simon Josefsson  <jas@extundo.com>
	    Bruno Haible  <bruno@clisp.org>

	* getdomainname.h: New file.
	* getdomainname.c: New file.

2003-09-24  Paul Eggert  <eggert@twinsun.com>

	* linebuffer.c (freebuffer): Don't free the argument, just
	the buffer associated with the argument.  Bug reported by
	Simon Josefsson.

2003-09-19  Karl Berry  <karl@gnu.org>

	* argp.h: update from libc.

2003-09-16  Paul Eggert  <eggert@twinsun.com>

	* linebuffer.c (readlinebuffer): Return NULL immediately upon
	input error, instead of returning NULL the next time we are called
	(and therefore losing track of errno).

2003-09-15  Paul Eggert  <eggert@twinsun.com>

	* getndelim2.c (getndelim2): Don't trash errno when a read
	fails, so that the caller gets the proper errno.

	* readutmp.c (read_utmp): Likewise.
	Check for fstat error.  Close stream and free storage
	when failing.

2003-09-14  Bruno Haible  <bruno@clisp.org>

	* fwriteerror.h: New file.
	* fwriteerror.c: New file.

2003-09-14  Jim Meyering  <jim@meyering.net>

	* getloadavg.c: Correct cpp indentation.
	* strdup.c: Likewise.
	* vasnprintf.c: Likewise.

2003-09-12  Paul Eggert  <eggert@twinsun.com>

	* argmatch.c, fatal.c, xgethostname.c, xmalloc.c: Include exit.h.
	* obstack.c [!defined _LIBC]: Likewise.
	* argmatch.c (EXIT_FAILURE): Remove; now done by exit.h
	* exitfail.c, fatal.c, xgethostname.c, xmalloc.c: Likewise.
	* exitfail.c: Don't include stdlib.h; no longer needed.

	More changes to assume C89 or better.

	* error.c (error_tail): Assume vprintf.

	* argmatch.c (getenv): Remove decl.
	* progreloc.c (get_full_program_name): Define via prototype.
	* setenv.c (clearenv): Likewise.
	* stpncpy.c: Do not include <string.h> or <sys/types.h>; not
	needed.
	* strdup.c: Include <stdlib.h>, <string.h> unconditionally.
	(malloc, memcpy): Remove decls.
	* strftime.c (HAVE_LIMITS_H, STDC_HEADERS) [defined _LIBC]: Remove.
	(HAVE_MEMCPY) [defined emacs && !defined HAVE_BCOPY]: Remove.
	Include <limits.h>, <stddef.h>, <stdlib.h>, <string.h> unconditionally.
	(memcpy): Remove macro.
	(MEMCPY) [!defined COMPILE_WIDE]: Define to memcpy unconditionally.
	(__P): Remove.  All uses removed.
	(PTR): Remove.  All uses changed to void *.
	(CHAR_BIT, NULL): Remove.
	(spaces, zeros, memset_space, memset_zero)
	[!defined memset && !defined HAVE_MEMSET && !defined _LIBC]:
	Remove.
	(LOCALE_PARAM, LOCALE_PARAM_DECL): Remove.
	(memcpy_lowcase, memcpy_uppcase, tm_diff, iso_week_days):
	Define with prototype.
	Remove now-unnecessary prototype decl.
	(extra_args_spec): Assume ANSI C.  All uses changed.
	(extra_args_spec_iso): Remove.
	(my_strftime, emacs_strftimeu): Define via prototype.
	* strtod.c: Include <float.h>, <stdlib.h>, <string.h>
	unconditionally.
	(DBL_MAX, DBL_MIN, HUGE_VAL, NULL): Remove decls.
	* strtoimax.c: Include <stdlib.h> unconditionally.
	(strtoul, strtol): Remove decls.
	* strtol.c (STDC_HEADERS, HAVE_LIMITS_H, NULL, ULONG_MAX,
	LONG_MAX): Remove.
	Include <limits.h>, <stddef.h>, <stdlib.h>, <string.h> unconditionally.
	(LOCALE_PARAM_DECL): Remove.  All uses changed to LOCALE_PARAM_PROTO.
	(LOCALE_PARAM_PROTO): New macro.
	(INTERNAL, INTERNAL1, WEAKNAME): Assume ANSI C, not K&R.
	(INTERNAL (strtol), strtol): Define with a prototype.
	(PARAMS): Remove.  All uses removed.
	* tempname.c: Include <string.h> unconditionally.
	* userspec.c: Include <stdlib.h>, <string.h> unconditionally.
	* xgethostname.c (main): Define with a prototype.
	* xmalloc.c: Include "xalloc.h" first, to check interface.
	Include <stdlib.h> unconditionally.
	(calloc, malloc, realloc, free): Remove decls.
	* xstrtod.c: Include "xstrtod.h" first, to check interface.
	Include <stdlib.h> unconditionally.  Sort include file names.
	(strtod): Remove.
	(xstrtod): Define with a prototype.
	* xstrtol.c: Include <stdlib.h>, <string.h> unconditionally.
	(strtol, strtoul): Remove decls.

2003-09-11  Paul Eggert  <eggert@twinsun.com>

	* strndup.c: Don't include <stdio.h>, <sys/types.h>.
	Include <stdlib.h>, <string.h> unconditionally.
	Remove now-unnecessary cast to char *.
	* strnlen.c: Include <string.h> unconditionally.
	* yesno.c (yesno): Define with a prototype.

2003-09-10  Bruno Haible  <bruno@clisp.org>

	* strcspn.c: Include <string.h> unconditionally.
	* strpbrk.c: Include <string.h> unconditionally.
	* strstr.c: Include <string.h> unconditionally.
	* unicodeio.c: Include <string.h> unconditionally.
	* setenv.c: Include <stdlib.h> and <string.h> unconditionally.
	* unsetenv.c: Likewise.
	* xreadlink.c: Include <stdlib.h> unconditionally.
	* yesno.c: Include <stdlib.h> unconditionally.
	(rpmatch): Add prototype.

2003-09-10  Jim Meyering  <jim@meyering.net>

	* error.c: Correct indentation of cpp directives.

2003-09-09  Paul Eggert  <eggert@twinsun.com>

	More K&R removal.

	* acosl.c (main): Use a prototype.
	* asinl.c, cosl.c, expl.c, frexpl.c, ldexpl.c, sinl.c,
	tanl.c: Likewise.

	* getloadavg.c (getloadavg, main): Define via prototypes.

	* getopt.h (struct option.name): Assume C89, and use 'const'.
	(getopt, etopt_long, getopt_long_only, _getopt_internal)
	[defined __GNU_LIBRARY__]: Assume C89, so we can always declare
	with a prototype.
	* getopt.c (const): Remove macro.
	Include <string.h> unconditionally.
	(my_index): Remove; all uses changed to strchr.
	(strlen): Remove decl.
	(exchange): Remove forward decl; no longer needed.
	(exchange, _getopt_initialize, _getopt_internal, getopt, main):
	Define with prototype.
	* getopt1.c (const): Remove macro.
	(getopt_long, getopt_long_only, main): Define with prototype.

	* getugroups.c: Include <string.h> unconditionally.

	* getusershell.c: Include <stdlib.h> unconditionally.
	(getusershell, setusershell, endusershell, readname, main):
	Define with prototypes.

	* group-member.c: Include group-member.h first.
	Include <stdlib.h> unconditionally.

	* hard-locale.c: Include hard-locale.h first.
	Include <stdlib.h>, <string.h> unconditionally.

	* hash.c (free, malloc): Remove decls.
	Include <stdlib.h> unconditionally.

	* human.c: Include <stdlib.h>, <string.h> unconditionally.
	(getenv): Do not declare.

	* idcache.c: Include <string.h> unconditionally.

	* long-options.c: Include long-options.h first, to test interface.
	Include <stdlib.h> unconditionally.

	* makepath.c: Include makepath.h first, to test interface.
	Include <stdlib.h> and <string.h> unconditionally.

	* linebuffer.c: Include <stdlib.h>.
	(free): Remove decl.

	* malloc.c: Include <stdlib.h>, for malloc; don't bother with stddef.h.
	rpl_malloc returns void *, not char *.
	* realloc.c (rpl_realloc): Likewise.  Also, define with a prototype.

	* md5.h: Include <limits.h> unconditionally.
	(UINT_MAX_32_BITS): Don't worry about non-__STDC__ case.
	(__P): Remove; all uses removed.
	* md5.c: Include "md5.h" first.
	(md5_init_ctx, md5_read_ctx, md5_finish_ctx, md5_stream,
	md5_buffer, md5_process_bytes, md5_process_block):
	Define with prototypes.
	* sha.h (__P): Remove all uses.  (It wasn't defined??)
	* sha.c: Include "sha.h" first.
	Include <stdlib.h>, <string.h> unconditionally.

	* memchr.c (__ptr_t): Remove; all uses changed to void *.
	* memcmp.c (__ptr_t): Likewise.
	* memrchr.c (__ptr_t): Likewise.
	* memchr.c, memcmp.c, memcoll.c, memrchr.c:
	Include <string.h> unconditionally.
	* memchr.c, memrchr.c: Include <limits.h> unconditionally.
	* memchr.c: Include <stdlib.h> unconditionally.
	* memchr.c (LONG_MAX): Remove.
	* memrchr.c (LONG_MAX): Likewise.
	* memchr.c (__memchr): Define via a prototype.
	* memrchr.c (__memrchr): Likewise.
	* memcmp.c (__P): Remove, and remove all uses.
	(memcmp_bytes, memcmp_common_alignment, memcmp_not_common_alignment):
	Remove forward decls; no longer needed.
	* memcpy.c, memmove.c, memset.c: Include <stddef.h>.
	Use types required by C89 in prototype.

	* mkdir.c: Include <stdlib.h>, <string.h> unconditionally.
	* savedir.c: Likewise.
	* mkdir.c (free): Remove decl.
	* rmdir.c (rmdir): Define with a prototype.
	* savedir.c: Include savedir.h first, to test interface.

	* mktime.c (STDC_HEADERS): Remove.
	Include <stdlib.h>, <string.h> unconditionally.

	* modechange.c: Include <stdlib.h> unconditionally.
	(malloc): Remove decl.

	* mountlist.c: Include <stdlib.h>, <string.h> unconditionally.
	(free): Remove decl.

	* obstack.h (PTR_INT_TYPE) [!defined __PTRDIFF_TYPE__]:
	Define to ptrdiff_t, without bothering to check HAVE_STDDEF_H.
	(This type really should be intptr_t, but that's a C99ism.)
	(_obstack_memcpy): Remove: all uses changed to memcpy.
	Include <string.h> unconditionally.
	(struct obstack): Assume __STDC__ for types of members
	chunkfun, freefun, extra_arg.
	(_obstack_newchunk, _obstack_free, _obstack_begin, _obstack_begin_1,
	_obstack_memory_used, obstack_alloc_failed_handler, obstack_init,
	obstack_begin, obstack_specify_allocation,
	obstack_specify_allocation_with_arg, obstack_chunkfun,
	obstack_freefun, obstack_free) [! (defined __STDC__ && __STDC__)]:
	Remove unprototyped decls and the macros that use them.
	* obstack.c (POINTER): Remove.  All uses changed to void *.
	(obstack_alloc_failed_handler, CALL_CHUNKFUN, CALL_FREEFUN,
	_obstack_begin, _obstack_begin_1, _obstack_allocated_p)
	(defined __STDC__ && __STDC__)]:
	Remove nonprototyped code.
	Include <stdlib.h> unconditionally.
	(_obstack_begin, _obstack_begin_1, _obstack_newchunk,
	_obstack_allocated_p, _obstack_free, obstack_free,
	_obstack_memory_used, print_and_abort):
	Define using prototypes.
	(obstack_1grow, obstack_1grow_fast, obstack_alloc, obstack_base,
	obstack_blank, obstack_blank_fast, obstack_copy, obstack_copy0,
	obstack_finish, obstack_grow, obstack_grow0, obstack_make_room,
	obstack_next_free, obstack_object_size, obstack_room) [0]:
	Remove unused, unprototyped code.

	* path-concat.c: Include <stdlib.h>, <string.h> unconditionally.

	* physmem.c (physmem_total, physmem_available, main): Define
	with prototypes.

	* posixtm.c: Include <stdlib.h>, <string.h> unconditionally.
	(main): Define with a prototype.

	* posixver.c (getenv): Remove decl.

	* putenv.c (malloc): Returns void *, not char *.
	Include <string.h> unconditionally.
	(strchr, memcpy, NULL): Do not define.

	* readtokens.c: Include readtokens.h first, to test interface.
	Include <stdlib.h>, <string.h> unconditionally.
	(init_tokenbuffer): Define with a prototype.

	* regex.c (PARAMS): Remove.  All uses removed.
	All uses of _RE_ARGS removed, too.
	Include <stddef.h>, <stdlib.h>, <string.h>, <limits.h>
	unconditionally.
	(bzero): Assume memset exists.
	(memcmp, memcpy, NULL): Remove.
	(SIGN_EXTEND_CHAR): Remove; all uses replaced by casts to signed
	char, or assignments to local vars of type signed char.
	(init_syntax_once, PREFIX(extract_number_and_incr),
	PREFIX(print_partial_compiled_pattern),
	PREFIX(print_compiled_pattern), PREFIX(print_double_string),
	convert_mbs_to_wcs, print_fastmap, re_set_syntax,
	PREFIX(regex_grow_registers), PREFIX(regex_compile),
	PREFIX(store_op1), PREFIX(store_op2), PREFIX(insert_op1),
	PREFIX(insert_op2), PREFIX(at_begline_loc_p),
	PREFIX(at_endline_loc_p), group_in_compile_stack, insert_space,
	wcs_compile_range, byte_compile_range, truncate_wchar,
	PREFIX(re_compile_fastmap), re_compile_fastmap, re_set_registers,
	re_search, re_search_2, PREFIX(re_search_2), re_match, re_match_2,
	count_mbs_length, wcs_re_match_2_internal,
	byte_re_match_2_internal, PREFIX(group_match_null_string_p),
	PREFIX(alt_match_null_string_p),
	PREFIX(common_op_match_null_string_p), PREFIX(bcmp_translate),
	re_compile_pattern, re_comp, re_exec, regcomp, regexec, regerror,
	regfree, PREFIX(extract_number)): Define with prototype.  Remove
	now-unnecessary declaration, if any.
	(byte_compile_range, PREFIX(regex_compile), re_comp, re_exec,
	regcomp, regexec):
	Remove now-unnecessary casts among pointer types.
	* regex.h (_RE_ARGS): Remove.  All uses removed.

	* rename.c: Include <stdlib.h>, <string.h> unconditionally.
	(free): Remove decl.

	* rpmatch.c: Include <stdlib.h> unconditionally.

	* same.c: Include <stdlib.h>, <string.h> unconditionally.
	(free): Remove decl.

	* save-cwd.c: Include <stdlib.h> unconditionally.
	* xgetcwd.c: Likewise.

	* stat.c: Include <stdlib.h>, <string.h> unconditionally.
	(free): Remove decl.

	* strchrnul.c (strchrnul): Define with a prototype.
	Fix bug: c_in was not converted to char before searching.

	The following changes are not K&R related:

	* group-member.h: Include <sys/types.h>, so that this file is
	self-contained.
	* makepath.h: Likewise.

	* getusershell.c (readname, default_index, line_size, readname):
	Use size_t, not int, for sizes.
	(readname): If the size overflows, report an error instead of
	looping forever.

2003-09-09  Derek Robert Price  <derek@ximbiot.com>

	* getndelim2.c: Assume stdlib.h per the C89 spec.

2003-09-08  Paul Eggert  <eggert@twinsun.com>

	Assume C89 or better; remove K&R cruft.
	A few of these changes were first proposed by Derek Robert Price
	in <http://mail.gnu.org/archive/html/bug-gnulib/2003-07/msg00105.html>.

	* addext.c: Include <string.h> unconditionally.
	* backupfile.c: Include <string.h>, <stdlib.h> unconditionally.
	Don't declare getenv or malloc.

	* alloca.c: Include <string.h>, <stdlib.h> unconditionally.
	(POINTER_TYPE, pointer): Remove; all uses changed to void *.
	(NULL): Remove.
	(find_stack_direction, alloca): Use prototypes.

	* atexit.c (atexit): Define using a prototype.

	* basename.c, dirname.c, stripslash.c:
	Include <string.h> unconditionally.

	* bcopy.c: Include <stddef.h>.
	(bcopy): Define with prototype, using 'const' and 'void' and 'size_t'.

	* canon-host.c: Include <stdlib.h>, <string.h> unconditionally.

	* error.h (error, error_at_line, error_print_progname)
	[! (defined (__STDC__) && __STDC__)]: Remove decls.
	* error.c: Include error.h first, to check interface.
	Include <stdarg.h>, <stdlib.h>, <string.h> unconditionally.
	(VA_START): Remove; all uses changeed to va_start.
	(exit, strerror): Remove decls.
	(error_print_progname): Prototype uncondionally.
	Don't include <errno.h>; no longer needed.
	(private_strerror): Remove.
	(error_tail): Always define.
	(error, error_at_line): Assume C89 or better; always use prototypes.
	* fatal.c: Include "fatal.h" first, to test interface.
	Include <stdarg.h>, <stdlib.h>, <string.h> unconditionally.
	(VA_START): Remove; all uses changed to va_start.
	[! (HAVE_VPRINTF || HAVE_DOPRNT || _LIBC)]: Remove support for
	this case.
	(exit): Remove decl.
	(fatal): Prototype unconditionally.  Assume va_start works.
	Abort at end, to pacify gcc.

	* euidaccess.c (main): Define with a prototype.

	* exclude.c: Include <stdlib.h>, <string.h> unconditionally.

	* exitfail.c: Include <stdlib.h> unconditionally.

	* fnmatch_.h (__P): Remove.  All uses changed to assume
	prototypes.
	* fnmatch.c: Include fnmatch.h first, to test interface.
	Include <string.h>, <stddef.h>, <stdlib.h> unconditionally.
	(getenv): Remove decl.
	(fnmatch): Define using a prototype.
	* fnmatch_loop.c (FCT): Remove forward decl; no longer needed.
	(FCT): Define using a prototype.

	* getdate.y: Include <stdlib.h>, <string.h> unconditionally.

	* gethostname.c: Include <stddef.h>.
	(gethostname): Define with prototype.  Length is size_t, not int.

2003-09-08  Paul Eggert  <eggert@twinsun.com>

	* getversion.c: Remove; was migrated to backupfile.c in 1997.
	getversion.c should have been removed then, but was accidentally
	preserved.

	* utime.c [!HAVE_UTIMES_NULL]: Include <sys/stat.h>, <fcntl.h>.
	(utime_null): Fix typo: 'st' was sometimes called 'sb'.

2003-09-07  Paul Eggert  <eggert@twinsun.com>

	* time_r.c (gmtime_r, localtime_r): Fix silly typo: missing arg to
	copy_tm_result.  Bug reported by Simon Josefsson in
	<http://mail.gnu.org/archive/html/bug-gnulib/2003-09/msg00028.html>.

2003-09-06  Paul Eggert  <eggert@twinsun.com>

	* time_r.c, time_r.h: New files.

	* mktime.c (my_mktime_localtime_r): Remove; all uses changed to
	__localtime_r.
	(__localtime_r) [!defined _LIBC]: New macro.  Include <time_r.h>.
	(__mktime_internal) [!defined _LIBC]: Now extern, not static.

	* strftime.c (my_strftime_gmtime_r): Remove; all uses changed to
	__gmtime_r.
	(my_strftime_localtime_r): Remove; all uses changed to __localtime_r.
	(__gtime_r, __localtime_r) [!HAVE_TM_GMTOFF]: New macros.
	Include <time_r.h>.

	* timegm.c: Switch to glibc implementation, with the following changes:
	[defined HAVE_CONFIG_H]: Include <config.h>.
	[!defined _LIBC]: Include "timegm.h" rather than <time.h>.
	(__mktime_internal) [!defined _LIBC]: New decl.
	(__gmtime_r) [!defined _LIBC]: New macro and function.
	(timegm): Use a prototype, since gnulib assumes C89.
	Do not bother declaring tmp to be const, as it's not really usefu.
	* timegm.h: Hoist "#include <time.h>" out of #ifdef.
	(timegm): Declare only if HAVE_DECL_TIMEGM.

2003-09-03  Paul Eggert  <eggert@twinsun.com>

	* human.c (human_readable): Fix bug that rounded 10501 to 10k.
	Bug reported by Lute Kamstra in
	<http://mail.gnu.org/archive/html/bug-gnulib/2003-09/msg00003.html>.

	* getdate.y (relative_time_table): Use tDAY_UNIT for "tomorrow",
	"yesterday", "today", and "now" rather than tMINUTE_UNIT.  Of
	course with correspondingly smaller numbers for tomorrow and
	yesterday.  From Tadayoshi Funaba.  Originally installed into
	sh-utils on 1999-08-07, but the patch got lost (I guess during the
	coreutils merge?).

2003-08-31  Simon Josefsson  <jas@extundo.com>

	* timegm.h: New file.
	* timegm.c: New file.  Based on wget-1.8.2/src/http.c:mktime_from_utc.

2003-08-31  Karl Berry  <karl@gnu.org>

	* argp.h: update from libc.

2003-08-28  Bruno Haible  <bruno@clisp.org>

	* binary-io.h: Undefine O_BINARY before defining it. This avoids a
	warning on QNX, which defines O_BINARY to 000000.

2003-08-24  Bruno Haible  <bruno@clisp.org>

	* binary-io.h: Include <stdio.h>, to avoid a compilation error when
	MSVC7 <stdio.h> is included later.

2003-08-20  Bruno Haible  <bruno@clisp.org>

	* progname.h: New file, from GNU gettext.
	* progname.c: New file, from GNU gettext.
	* progreloc.c: New file, from GNU gettext.

2003-08-19  Bruno Haible  <bruno@clisp.org>

	* xstrdup.c: Assume <string.h> exists.

2003-08-18  Jim Meyering  <jim@meyering.net>

	* setenv.h: Indent nested cpp directive.
	* vasnprintf.c: Remove trailing blanks.

2003-08-17  Simon Josefsson  <jas@extundo.com>
	    Bruno Haible  <bruno@clisp.org>

	* xstrndup.h: New file.
	* xstrndup.c: New file.

2003-08-17  Bruno Haible  <bruno@clisp.org>

	* strndup.h: New file.

2003-08-16  Paul Eggert  <eggert@twinsun.com>

	* regex.h, strdup.c, strtoll.c, strtoul.c: Do not normalize white
	space, undoing this 2003-08-12 change:
	<http://mail.gnu.org/archive/html/bug-gnulib/2003-08/msg00080.html>

2003-08-16  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.
	* xstrtoimax.c: #else #if -> #elif.
	* xstrtoumax.c: Likewise.

2003-08-15  Paul Eggert  <eggert@twinsun.com>

	* config.charset, ref-add.sin, ref-del.sin: Use three spaces,
	rather than tab, after '#' in shell-script copyright notices.
	Suggested by Bruno Haible.

2003-08-15  Jim Meyering  <jim@meyering.net>
	and Paul Eggert  <eggert@twinsun.com>

	Merge from coreutils.
	* readutmp.h (HAVE_UTMPX_H): Undef if struct utmp has the ut_exit
	member but strut utmpx does not.  Needed for AIX 4.3.3.
	(UT_EXIT_E_TERMINATION, UT_EXIT_E_EXIT): Define.

2003-08-15  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.
	* xgethostname.c: Include <stdlib.h>.
	(xghostname): Don't exit for anything other than memory-related
	failure; just return NULL.
	* userspec.c: Include "posixver.h".
	(parse_user_spec): Accept `.' as a separator only
	in pre-POSIX-200112 mode.
	* strtoimax.c: Use #elif rather than #else #if.
	* strftime.c (my_strftime) [!_LIBC && HAVE_TZNAME && HAVE_TZSET]:
	Remove function, now that we can rely on a working tzset function.
	[!_LIBC]: Ensure that the required autoconf test has been run.
	[!defined _NL_CURRENT && HAVE_STRFTIME]:
	Use underlying_strftime for %r.
	* sha.c: Merge in some clean-up and optimization changes from glibc.
	* sha.c (sha_stream) [BLOCKSIZE]: Move definition to top of file.
	Ensure that it is a multiple of 64.
	Rearrange loop exit tests so as to avoid performing an
	additional fread after encountering an error or EOF.
	* realloc.c: Update copyright date.

2003-08-14  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.
	* obstack.h: Whitespace changes.
	* mountlist.c: Remove anachronistic casts of xmalloc, xrealloc,
	and xcalloc return values.
	(read_filesystem_list) [MOUNTED_GETFSSTAT]:
	Use MNT_NOWAIT, rather than MNT_WAIT.  Otherwise, `df DIR' could
	hang on OSF/1 5.1 for DIR on both local and remote file systems.
	Reported by (and fix confirmed by) Nelson H. F. Beebe.
	(read_filesystem_list) [MOUNTED_VMOUNT]: Detect any
	error from mntctl.
	Use mntctl's return value to drive the entry-processing loop, since
	we can't rely on the value of the vmt_length member in the last
	entry.  On some systems doing so could result in exhausting
	virtual memory.  Based in part on a patch from Mike Jetzer.

2003-08-14  Jim Meyering  <jim@meyering.net>
	and Paul Eggert  <eggert@twinsun.com>

	Merges from coreutils, plus other fixes.
	* physmem.c: Merge in portability changes from gcc/libiberty
	to support AIX, IRIX, Tru64, and Windows.  See the ChangeLog there
	for credits and details.  Thanks to Kaveh Ghazi for helping
	to keep these files in sync.
	(ARRAY_SIZE): Define it.
	(physmem_total, physmem_available): Add comments. From Kaveh Ghazi.
	* memcasecmp.c: Remove unnecessary parentheses after 'defined'.
	(memcasecmp): Don't assume size_t fits in unsigned int.
	Remove casts and duplicate code.
	* md5.c: Include <string.h> and <stdlib.h> unconditionally.
	(memcpy): Remove definition.
	Merge in some clean-up and optimization changes from glibc.
	[BLOCKSIZE]: Move definition to top of file.
	Ensure that it is a multiple of 64.
	Rearrange loop exit tests so as to avoid performing an
	additional fread after encountering an error or EOF.
	* md5.h (md5_uintptr): Define.
	* makepath.c (CLEANUP_CWD): Report an error if we failed to
	return to the initial working directory.  Preserve errno
	for caller.
	* idcache.c: Include "xalloc.h".
	(xmalloc, xrealloc): Remove decls.
	(getuser): Remove casts no longer required in C89.
	* human.c: Include stdio.h, for sprintf.
	* group-member.c: Include "xalloc.h".
	(xmalloc, xrealloc): Remove decls.
	(get_group_info): Remove casts no longer required in C89.
	* getusershell.c (readname): Remove casts no longer required in C89.
	* gettimeofday.c (rpl_gmtime, rpl_tzset): New functions.
	* getline.c: Whitespace fix, from coreutils.

2003-08-13  Paul Eggert  <eggert@twinsun.com>

	* exclude.c: Include <ctype.h>
	(IN_CTYPE_DOMAIN): New macro.
	(is_space): New fn.
	(add_exclude_file): If LINE_END is a space, ignore trailing spaces
	and empty lines.

	* argp-help.c, argp-parse.c, config.charset, getopt.h:
	Undo previous (whitespace-only) change.

2003-08-12  Paul Eggert  <eggert@twinsun.com>

	* argp-help.c, argp-parse.c, config.charset, getopt.h:
	Normalize leading white space and remove trailing white space.
	* ref-add.sin, ref-del.sin: Use '#' before empty line in copyright
	notice, as per ../config/srclist-update.

	Merge from coreutils.
	* euidaccess.h: New file.
	* euidaccess.c: Include it.
	* .cppi-disable: Add printf-args.h, printf-parse.h, stdbool_.h,
	vasnprintf.h, vasprintf.h.  Remove strdup.c, gettext.h.
	* regex.h, strdup.c, strtoll.c, strtoul.c: Normalize white space.

2003-08-11  Bruno Haible  <bruno@clisp.org>

	* vasnprintf.c (local_wcslen): New function, for Solaris 2.5.1.
	(vasnprintf): Use it instead of wcslen.

2003-08-11  Bruno Haible  <bruno@clisp.org>

	* stdbool_.h (_Bool): Undo last change; instead use a negative enum
	value to ensure that _Bool promotes to int. Use #define for _Bool when
	using the Solaris C compiler. Adds comments suggested by Paul Eggert.

2003-08-10  Karl Berry  <karl@gnu.org>

	* regex.h: update from libc (whitespace fix).

2003-08-09  Paul Eggert  <eggert@twinsun.com>

	Merge some files from coreutils.  These changes were
	originally made by Jim Meyering.
	* acl.c: Include <sys/types.h> before <sys/stat.h>;
	many older Unixes require this.
	* alloca.c (alloca): Remove cast to argument of free;
	no longer needed in C89.
	* alloca_.h, regex.h: Fix white space to match
	what GNU indent does.

2003-08-05  Paul Eggert  <eggert@twinsun.com>

	* bumpalloc.h: Remove.

2003-08-04  Paul Eggert  <eggert@twinsun.com>

	* getloadavg.c: Change copyright notice and spacing to conform to
	GNU coding style.

	Merge from coreutils.
	* error.c [!USE_IN_LIBIO]: Omit this case; assume USE_IN_LIBIO is 1.
	From glibc.
	* getdate.y (date): Also accept dates like May-23-2003; suggestion
	from Karl Berry, implemented by Jim Meyering.
	* getgroups.c: Include "xalloc.h" instead of declaring xalloc fns;
	from Dmitry V. Levin.
	Remove anachronistic cast of xrealloc.
	* fnmatch_.h (__const): Remove.  Use 'const'.
	* fnmatch_loop.c (NEW_PATTERN): Cast alloca return value to proper
	type. Otherwise, it wouldn't compile with at least /bin/cc on
	ymp-cray-unicos9.0.2.X.
	Combine two mostly-identical uses of alloca into one.
	Thanks to the Cray-Cyber project for access to a Cray Y-MP.

2003-08-04  Dave Love <d.love@dl.ac.uk>

	[From Emacs.]

	* getloadavg.c: Check `__unix' as well as `unix'.  Use #ifdef, not
	#if.  Check HAVE_LIBKSTAT as well as LOAD_AVE_TYPE.  Check
	F_SETFD, not FD_SETFD.  Use HAVE_STRUCT_NLIST_N_UN_N_NAME, not
	obsolete NLIST_NAME_UNION.
	[__GNU__]: Undef BSD and FSCALE.
	[!NLIST_STRUCT]: Remove conditional definition of NLIST_STRUCT.

2003-08-03  Paul Eggert  <eggert@twinsun.com>

	* stdbool_.h (_Bool): Make it signed char, instead of
	an enum type, so that it's guaranteed to promote to int.  See:
	<http://mail.gnu.org/archive/html/bug-gnulib/2003-07/msg00124.html>

2003-07-31  Paul Eggert  <eggert@twinsun.com>

	* strerror.c: Include config.h, limits.h.  Declare sprintf.
	(strerror): Don't assume that a printable int fits in 14 bytes.

2003-07-24  Derek Robert Price  <derek@ximbiot.com>
	    Bruno Haible  <bruno@clisp.org>

	* getline.h (getline, getdelim): Change return type to ssize_t.
	* getline.c (getline, getdelim): Likewise.
	Remove _GNU_SOURCE define; now it's defined in config.h through
	m4/getline.m4.

2003-07-22  Paul Eggert  <eggert@twinsun.com>

	* xalloc.h (XCALLOC, XREALLOC, CCLONE): Fix under- and
	over-parenthesization in macros.

	Sync with coreutils.

	* xalloc.h (XMALLOC, XCALLOC, XREALLOC): Remove casts not
	required by C99.

	Use `exit_failure' for xalloc and xmemcoll instead of their own
	private exit-failure variables.
	* xalloc.h (xalloc_exit_failure): Remove.
	* xmalloc.c: Likewise.  Include exitfail.h.
	(xalloc_die): Use exit_failure instead of xalloc_exit_failure.
	* xmemcoll.h (xmemcoll_exit_failure): Remove.
	* xmemcoll.c: Likewise.  Include exitfail.h.
	(xmemcoll): Use exit_failure instead of xalloc_exit_failure.

2003-07-18  Paul Eggert  <eggert@twinsun.com>

	* closeout.h (close_stdout_set_status, close_stdout_status): Remove.
	* closeout.c: Likewise.  Include "closeout.h" right after config.h,
	to test that it can stand by itself.  Include "exitfail.h".
	Clients should set exit_failure instead.
	(EXIT_FAILURE): Remove; no longer needed.  Do not include <stdlib.h>.

2003-07-18  Andreas Schwab  <schwab@suse.de>

	* memcoll.c (memcoll) [!HAVE_STRCOLL]: Clear errno.

2003-07-18  Bruno Haible  <bruno@clisp.org>

	* getndelim2.h: New file.
	* getndelim2.c: Make into a module of its own. Include config.h,
	getndelim2.h.
	(getndelim2): Make non-static. Change return type to ssize_t.
	* getline.h: Change argument names.
	* getline.c: Include getndelim2.h instead of getndelim2.c.
	* getnline.c: Include getndelim2.h.

2003-07-17  Bruno Haible  <bruno@clisp.org>

	* Makefile.am: Remove file.
	* Makefile.in: Remove file.

2003-07-17  Bruno Haible  <bruno@clisp.org>

	* getnline.h: New file.
	* getnline.c: New file.
	* getndelim2.c: New file, extracted from getline.c.
	(getndelim2): Renamed from getdelim2, with added nmax argument.
	* getline.c: Include getndelim2.c.
	(getdelim2): Moved out to getndelim2.c.
	(getline, getdelim): Update.

2003-07-15    <karl@gnu.org>

	* vasnprintf.c: update from gettext.

2003-07-15  Jim Meyering  <jim@meyering.net>

	* makepath.c (make_path): Enclose diagnostic in _(...).

2003-07-14  Paul Eggert  <eggert@twinsun.com>

	* asnprintf.c, asprintf.c, config.charset, gettext.h,
	localcharset.c, localcharset.h, mkdtemp.c, printf-args.c,
	printf-args.h, printf-parse.c, printf-parse.h, ref-add.sin,
	ref-del.sin, setenv.c, unsetenv.c, vasnprintf.c, vasnprintf.h,
	vasprintf.c, vasprintf.h: Regenerate.  These files are now being
	updated automatically by ../config/srclist-update.  This changes
	their license from LPGL to GPL.

2003-07-14  Jim Meyering  <jim@meyering.net>

	Don't emit diagnostics.  Let callers do that.
	* save-cwd.c: Don't include "error.h".
	(save_cwd): Don't call error.  Ensure that errno is valid
	when returning nonzero.

	* save-cwd.h (restore_cwd): Update prototype.
	* save-cwd.c (restore_cwd): Remove two parameters.
	Simplify.  Don't call error upon failure.  Let callers do that.
	(save_cwd): Mention that Irix 5.3 has the same problem as SunOS 4
	when auditing is enabled.  But don't bother updating the #if.

2003-07-14  Simon Josefsson  <jas@extundo.com>

	* mempcpy.h: New file.
	* mempcpy.c: New file.

2003-07-14  Paul Eggert  <eggert@twinsun.com>

	* ceill.c, expl.c, floorl.c, frexpl.c, ldexpl.c, mathl.h,
	sincosl.c, sqrtl.c, trigl.c, trigl.h, poll.c, poll_.h, mkstemp.c,
	unicodeio.c, unicodeio.h, unlocked-io.h:
	Switch from LGPL to GPL.

2003-07-11  Alexandre Duret-Lutz  <adl@gnu.org>

	* obstack.h (__INT_TO_PTR): Revert change of 2003-03-13;
	it breaks C++ compilation.
	[!__GNUC__ || !__STDC__] (obstack_finish): Cast result to void*.

2003-07-10  Jim Meyering  <jim@meyering.net>

	* vasnprintf.c: Remove trailing blanks.
	Make cpp indentation consistent.

2003-07-09  Paul Eggert  <eggert@twinsun.com>

	* alloca_.h, euidaccess.c, getpass.c, memrchr.c, obstack.h,
	posixver.c, strftime.c, strnlen.c, strverscmp.c:
	Switch from LGPL to GPL.

2003-07-07  Paul Eggert  <eggert@twinsun.com>

	* mktime.c: Fix some boundary cases and remove need for floating point.

	Issue a compile-time diagnostic if time_t is floating point, or if
	two's complement arithmetic is not in effect, or if arithmetic
	right shift does not propagate the sign.  These assumptions were
	all in the original code but they weren't checked.

	(TIME_T_MIDPOINT, verify): New macros.
	(__isleap): Remove; it has integer overflow problems.
	(leapyear): New function, without those problems.
	(ydhms_tm_diff): Remove; splitting into two parts.
	(ydhms_diff): New function, containing the arithmetic part of
	the old ydhms_tm_diff function.  Issue a compile-time
	diagnostic if we are not using C99 integer division.
	Avoid casts when possible.
	(guess_time_tm): New function, containing the checking part of
	the old ydhms_tm_diff function.  Return the new value, rather than
	the difference between it and the old.  Accept a new argument T
	so that *T specifies the old value.  Check for overflow in the result.

	(__mktime_internal): Use a time_t offset, not a long int offset.
	This undoes the 2003-06-04 change, which is no longer needed now
	that we have better overflow checking.
	(localtime_offset): Likewise.

	(__mktime_internal): Avoid harmful overflow on hosts where time_t
	and long are 64-bit but int is only 32-bit.
	(ydhms_diff): Use long int to store year1 and yday1.
	Issue a compile-time diagnostic if long int is not wide enough.

	(__mktime_internal): Use long int to store adjusted year and yday.
	Use plain C rather than preprocessor commands, if that doesn't
	affect efficiency.
	Check for overflow (and try to repair) after each probe
	rather than checking only at the very end.  This avoids some bugs
	(e.g., southern hemisphere, behind GMT, and GMT offset at minimum time
	does not equal GMT offset at maximum time).
	Use integer to check for overflow rather than floating point; this
	is more portable to non-IEEE hosts, and is a tad faster.
	When we detect that we are oscillating between two values,
	don't check whether tm_isdst has the requested value, since
	we already know the answer.  When tm_isdst has the wrong value,
	use a different heuristic to find the right one, based on the
	extreme values actually observed in practice in tz2003a,
	rather than the (overly optimistic) "previous 3 calendar quarters".

	(not_equal_tm, print_tm, check_result): Use "const T" rather than
	"T const" to accommodate glibc style.
	(check_result): Use less-confusing report format.  "long" -> "long int.
	(main): Likewise.
	Don't loop if the iteration overflows time_t.
	Allow a negative step in the iteration.

2003-07-01  Paul Eggert  <eggert@twinsun.com>

	* xreadlink.c: Include <sys/types.h> unconditionally, instead of
	having it depend on HAVE_SYS_TYPES_H.

2003-06-25  Bruno Haible  <bruno@clisp.org>

	* readlink.c: New file.

2003-06-20  Bruno Haible  <bruno@clisp.org>

	Assume C89, so PARAMS isn't needed.
	* unicodeio.h (PARAMS): Remove.
	* unicodeio.c: Don't use PARAMS.

2003-06-18  Jim Meyering  <jim@meyering.net>

	Merge changes from coreutils.
	* readutmp.c: Include <string.h> and <stdlib.h> unconditionally.
	Remove explicit declarations of xmalloc and realloc.
	Include xalloc.h.
	(read_utmp): Remove anachronistic cast of xmalloc.

2003-06-17  Paul Eggert  <eggert@twinsun.com>

	Assume C89, so PARAMS isn't needed.
	* backupfile.h (PARAMS): Remove.  All uses removed.
	* closeout.h, dirname.h, filemode.h, fsusage.h, getdate.h, getline.h,
	group-member.h, hard-locale.h, hash.h, linebuffer.h, long-options.h,
	makepath.h, memcasecmp.h, memcoll.h, modechange.h, mountlist.h,
	path-concat.h, physmem.h, posixtm.h, quote.h, readutmp.h, same.h,
	save-cwd.h, savedir.h, stdio-safer.h, strtoimax.c, strverscmp.h,
	unistd-safer.h, version-etc.h, xalloc.h, xreadlink.h, xstrtod.h,
	xstrtol.h: Likewise.
	* filemode.h, hard-locale.h, memcoll.h, modechange.h, physmem.h,
	same.h, strverscmp.h: Do not include config.h; no longer needed.
	Anyway, config.h should always be included before any other file.

2003-06-11  Simon Josefsson  <jas@extundo.com>

	* sysexit_.h: New file.

2003-05-20  Derek Price  <derek@ximbiot.com>

	* stat.c [LSTAT]: Compile/use slash_aware_lstat only if it is necessary.

2003-06-10  Simon Josefsson  <jas@extundo.com>

	* strchrnul.h: New file.
	* strchrnul.c: New file.

2003-06-10  Simon Josefsson <jas@extundo.com>

	* argp.h: New file, from glibc.
	* argp-ba.c: New file, from glibc.
	* argp-eexst.c: New file, from glibc.
	* argp-fmtstream.c: New file, from glibc.
	* argp-fmtstream.h: New file, from glibc.
	* argp-fs-xinl.c: New file, from glibc.
	* argp-help.c: New file, from glibc.
	* argp-namefrob.h: New file, from glibc.
	* argp-parse.c: New file, from glibc.
	* argp-pv.c: New file, from glibc.
	* argp-pvh.c: New file, from glibc.
	* argp-xinl.c: New file, from glibc.

2003-06-07  Jim Meyering  <jim@meyering.net>

	* readtokens.h: Put `Free Software Foundation, Inc.'
	in place of my name in the copyright comment.
	Remove definition and uses of __P.

	From coreutils.
	* stat.c: Don't declare xmalloc explicitly.
	Instead, include "xalloc.h".
	* readtokens.c (readtokens): Remove anachronistic casts of xmalloc,
	xrealloc, and xcalloc return values.
	* xgetcwd.c (xgetcwd): Include "xgetcwd.h".
	Improve comment.
	* xgetcwd.h: Remove definition/uses of PARAMS.

2003-06-06  Jim Meyering  <jim@meyering.net>

	* stdbool_.h: Renamed from stdbool.h.in.

2003-06-06  Jim Meyering  <jim@meyering.net>

	Merge from coreutils.
	* same.c: (same_name): Declare *_basename locals to be `const'.
	Consolidate declarations and initializations of *_base* locals.

	Merge from coreutils.
	This avoids a core dump on systems without GNU putenv,
	when running `env -u SOME_ALREADY_UNSET_VARIABLE'.
	* putenv.c (__set_errno, LOCK, UNLOCK): Define.
	(unsetenv): New static function, from GNU libc.
	(rpl_putenv): Use it.

	* modechange.c: Remove trailing blanks.

	Merge from coreutils.
	* fsusage.c: Remove declaration of statfs.
	It conflicted with one from OSF/1 5.1 in <sys/mount.h>.

	* posixtm.c: Include <stdbool.h> unconditionally.

2003-06-05  Paul Eggert  <eggert@twinsun.com>

	* mktime.c (__mktime_internal): When resolving a tm_isdst
	mismatch, look in future quarters as well as past.  This fixes a
	bug when processing fall-backwards gaps immediately after a long
	period of daylight-saving time.

	* mktime.c: Assume freestanding C89 or better.
	(HAVE_LIMITS_H): Remove.  Assume it's 1.
	(__P): Remove; not used.
	(CHAR_BIT, INT_MIN, INT_MAX): Remove; <limits.h> defines them.
	(mktime, not_equal_tm, print_tm, check_result,
	main): Use prototypes.  Use const * where appropriate.
	(main): Fix typo in testing code that uncovered by above changes.
	(Local Variables): Remove -DHAVE_LIMITS_H from compile-command.

2003-06-04  Paul Eggert  <eggert@twinsun.com>

	* mktime.c: Fix Debian bug 177940
	<http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=177940>.
	(localtime_offset): Now long int, not time_t, because we want it
	to be guaranteed to be signed.  All uses changed.
	(__mktime_internal): If overflow would occur when adding offset,
	don't add it.

	Merge 'human' changes from coreutils.  Rewrite to support
	locale-specific notations like thousands separators.
	* human.c: Simplify authorship notice.
	Include human.h immediately after config.h.
	<sys/types.h>, <stdio.h>: Do not include; no longer needed.
	<limits.h>: Do not include, since human.h does.
	(SIZE_MAX, UINTMAX_MAX): New macros.
	<strings.h>: Include if HAVE_STRINGS_H, not if !HAVE_STRING_H.
	<locale.h>: Include if HAVE_LOCALE_H and HAVE_LOCALECONV.
	(HUMAN_READABLE_SUFFIX_LENGTH_MAX): New macro.
	(power_letter): Renamed from suffixes.
	(generate_suffix_backwards): Remove.
	(adjust_value): Now takes int style (because of human.h changes)
	and long double value (for greater precision on some platforms).
	(group_number): New function.
	(human_readable): Use it.  Use integer options, not enum.
	Put the options before the sizes in the arg list.
	Support all the new options.
	The old human_readable function has been removed;
	use inttostr.h instead.
	(human_readable, default_block_size, humblock):
	Use uintmax_t, not int, for block sizes.
	(human_readable_inexact, block_size_types): Remove.
	(block_size_opts): New constant.
	(human_options): Renamed from human_block_size, with new signature
	that allows block sizes up to UINTMAX_MAX.  All callers changed.
	* human.h: Add copyright and authorship notice.
	Include <limits.h> and <stdbool.h> unconditionally.
	(PARAMS): Remove.  All uses removed.
	(LONGEST_HUMAN_READABLE): Add support for thousands separator.
	(enum human_inexact_style): Remove tag; now a nameless enum.
	(human_floor, human_ceiling, human_round_to_even): Now have
	values 2, 0, 1 rather than -1, 1, 0.
	(human_group_digits, human_suppress_point_zero, human_autoscale,
	human_base_1024, human_SI, human_B): New constants.
	(human_readable_inexact, human_block_size): Remove.
	(human_readable): Size args are now uintmax_t, not int.
	(human_options): New decl.

	* exclude.c: (new_exclude, add_exclude): Remove casts that are
	unnecessary now that we assume C89 or better.  This change
	imported from coreutils.

	* mktime.c (__mktime_internal): Do not reject negative timestamps
	arbitrarily.  This is the same patch as 2003-05-28, but it got lost
	in the 2003-05-30 sync from glibc.

	.h files should stand alone, but we shouldn't include <sys/types.h>
	if we can get away with just <stddef.h>.

	* __fpending.h, addext.c, backupfile.c, exclude.c, getline.c,
	malloc.c, putenv.c, realloc.c, strcasecmp.c: Include <stddef.h>
	rather than <sys/types.h>, as we merely need size_t.
	* dirname.h, memcoll.h, xalloc.h, xmemcoll.h: Include <stddef.h>,
	to get size_t.
	* hash.h, linebuffer.h, readtokens.h, stdio-safer.h, version-etc.h:
	Include <stdio.h>, to get FILE.
	* memcasecmp.c: Don't include <sys/types.h>, as we can assume
	memcasecmp.h has included <stddef.h> and all we need is size_t.
	* memcoll.c: Include "memcoll.h", which gets us size_t and checks
	our interface, instead of including <sys/types.h>

2003-06-02  Paul Eggert  <eggert@twinsun.com>

	[from coreutils]
	Fix some minor time-related bugs with POSIX time arguments.
	Some valid time stamps were being rejected (notably -1, and
	time stamps before 1900 on 64-bit hosts).  And some invalid
	time stamps were being accepted, e.g. September 31.

	* posixtm.h (posixtime): Return bool instead of time_t, so
	that we can return (time_t) -1 successfully.
	* posixtm.c: Likewise.
	[HAVE_STDBOOL_H]: Include <stdbool.h>.
	(bool, false, true) [!HAVE_STDBOOL_H]: New type.
	(t): Remove static var.
	(year, posix_time_parse): Now takes struct tm * arg to modify, instead
	of static var.  All uses changed.
	(year): Do not reject years before 1900; they can occur with
	64-bit time_t.
	(posix_time_parse): Do not check for out-of-range components;
	that is now the caller's responsibility, since our checks were
	only approximations.
	(posixtime): Use mktime to check for out-of-range components,
	since it knows them exactly.
	If mktime returns (time_t) -1, check whether an error actually occurred
	by invoking localtime on -1.
	(main) [TEST_POSIXTIME]: Check for input data errors, and report
	posixtime failures better.
	Improve the test data (in comments only).

2003-05-30    <karl@gnu.org>

	* mktime.c: update from libc.

2003-05-30  Bruno Haible  <bruno@clisp.org>

	* config.charset: Upgrade to gettext-0.12.1 and libiconv-1.9.1.
	* localcharset.h: Likewise.
	* localcharset.c: Likewise.

2003-05-28  Paul Eggert  <eggert@twinsun.com>

	Assume the headers required for C89 freestanding compilers.
	* addext.c, backupfile.c, fsusage.c, human.c, pathmax.h,
	rpmatch.c, userspec.c, xreadlink.c, xstrtol.c: Include <limits.h>
	without checking for HAVE_LIMITS_H.
	* backupfile.c, fsusage.c, hash.c, human.c, safe-read.c, userspec.c,
	xstrtol.c (CHAR_BIT) : Don't define, since <limits.h> is guaranteed
	to do that.
	* fatal.c: Include <stdarg.h> without checking for __STDC__.
	* exclude.c: Include <stdbool.h> unconditionally.
	* tempname.c: Include <stddef.h> unconditionally.
	* hash.c: Include <limits.h>, since we no longer define CHAR_BIT.
	* modechange.c, rpmatch.c (NULL): Don't define, since
	<stddef.h> does that.
	* quote.c: Dont include <stddef.h> or <sys/types.h>; not needed.
	* safe-read.c (INT_MAX): Don't define, since <limits.h> does that.
	* safe-read.c (TYPE_MINIMUM, TYPE_MAXIMUM): Remove; no longer needed.
	* xstrtol.c: Likewise.
	* safe-read.c: Remove TYPE_SIGNED; no longer needed.
	* savedir.c: Include <stddef.h> instead of defining NULL.

	* addext.c (addext): Use assignment rather than cast, to avoid
	warnings on some platforms.

	* mktime.c (__mktime_internal): Do not reject negative timestamps
	arbitrarily.

2003-05-10  Bruno Haible  <bruno@clisp.org>

	* linebreak.c (iconv_string_length): Don't return -1 just because the
	string is longer than 4 KB.

2003-05-12  Jim Meyering  <jim@meyering.net>

	* strftime.c (my_strftime): Let the `-' (no-pad) flag affect
	the space-padded-by-default conversion specifiers, %e, %k, %l.

2003-05-03  Bruno Haible  <bruno@clisp.org>

	Upgrade to Unicode-4.0.
	* linebreak.c (nonspacing_table_data): Change width of U+00AD,
	U+0350..U+0357, U+035D..U+035F, U+0600..U+0603, U+0610..U+0615,
	U+0656..U+0658, U+0A01, U+0AE2..U+0AE3, U+0CBC, U+17B4..U+17B5,
	U+17DD, U+1920..U+1922, U+1927..U+192B, U+1932, U+1939..U+193B
	from 1 to 0. Change width of U+0CBF, U+0CC6, U+180E from 0 to 1.
	(uc_width): Change width of U+4DC0..U+4DFF from 2 to 1. Change width
	of U+2A6D7..U+2F7FF, U+2FA1E..U+2FFFD, U+30000..U+3FFFD from 1 to 2.
	Change width of U+E0100..U+E01EF from 1 to 0.

2003-04-25  Bruno Haible  <bruno@clisp.org>

	* copy-file.c: Include <stddef.h>, for size_t.

2003-04-25  Jim Meyering  <jim@meyering.net>

	* copy-file.c (copy_file_preserving): Declare buf_size to be
	of type size_t, not int.

2003-04-11  Jim Meyering  <jim@meyering.net>

	Merge changes from Coreutils.

	2003-03-22  Jim Meyering  <jim@meyering.net>

	* strftime.c (widen): Cast alloca return value to proper type.

	2003-01-19  Ulrich Drepper  <drepper@redhat.com>

	From GNU libc.
	* strftime.c (my_strftime): Handle very large width
	specifications for numeric values correctly.  Improve checks for
	overflow.

	2003-01-19  Jim Meyering  <jim@meyering.net>

	* strftime.c (widen) [COMPILE_WIDE]: Merge nearly-identical definitions.
	(nl_get_alt_digit) [! defined my_strftime]: Define.
	(my_strftime) [_NL_CURRENT]: Merge nearly-identical uses of
	_nl_get_alt_digit and _nl_get_walt_digit.

	* strftime.c (my_strftime): Merge in locale-related changes from libc.
	These changes have no effect outside of _LIBC.

2003-04-10  Bruno Haible  <bruno@clisp.org>

	* findprog.h: New file, from GNU gettext.
	* findprog.c: New file, from GNU gettext.

2003-04-05  Jim Meyering  <jim@meyering.net>

	Merge changes from Coreutils.

	* exclude.h (PARAMS): Remove definition and uses.
	* exclude.c: Remove uses of `PARAMS'.

	* dirname.c [TEST_DIRNAME]: Update build instructions for test.
	Add test-cases for DOS filenames. Declare program_name.
	(main): Set up program_name.  Patch by Rich Dawe.

	* mountlist.c (read_filesystem_list) [MOUNTED_VMOUNT]: Detect any
	error from mntctl.
	Use mntctl's return value to drive the entry-processing loop, since
	we can't rely on the value of the vmt_length member in the last
	entry.  On some systems doing so could result in exhausting
	virtual memory.  Based in part on a patch from Mike Jetzer.

2003-04-04  Bruno Haible  <bruno@clisp.org>

	* linebreak.h: New file, from GNU gettext.
	* linebreak.c: New file, from GNU gettext with slight modifications.
	* lbrkprop.h: New file, from GNU gettext.

2003-04-03  Bruno Haible  <bruno@clisp.org>

	* utf8-ucs4.h: New file, from GNU gettext.
	* utf16-ucs4.h: New file, from GNU gettext.
	* ucs4-utf8.h: New file, from GNU gettext.
	* ucs4-utf16.h: New file, from GNU gettext.

2003-04-02  Bruno Haible  <bruno@clisp.org>

	* binary-io.h: New file, from GNU gettext.

2003-04-01  Bruno Haible  <bruno@clisp.org>

	* pathname.h: New file, from GNU gettext.
	* concatpath.c: New file, from GNU gettext.

2003-03-30  Bruno Haible  <bruno@clisp.org>

	* copy-file.c (copy_file_preserving): Don't set owner if the function
	chown() doesn't exist.

2003-03-28  Bruno Haible  <bruno@clisp.org>

	* copy-file.h: New file, from GNU gettext.
	* copy-file.c: New file, from GNU gettext.

2003-03-18  Jim Meyering  <jim@meyering.net>

	* quote.c (quote_n): Fix typo in comment.

2003-03-14  Jim Meyering  <jim@meyering.net>

	Merge changes from Coreutils.
	* obstack.h (obstack_object_size): Declare temporary, __o,
	to be const, in order to avoid warnings.
	(obstack_room): Likewise.
	(obstack_empty_p): Likewise.

2003-03-13  Paul Eggert  <eggert@twinsun.com>

	Merge changes from Bison.
	* obstack.h: (__INT_TO_PTR) [__STDC__]: Cast result to
	(void *) to avoid diagnostic with native c89 on SGI IRIX 6.5
	when compiling Bison 1.875's `bitset bset = obstack_alloc
	(bobstack, bytes);'.  Problem reported by Nelson H. F. Beebe.
	* hash.c: Include <stdbool.h> unconditionally.

2003-03-09  Paul Eggert  <eggert@twinsun.com>

	* argmatch.c (EXIT_FAILURE): Define if the system doesn't.
	Reported by Bruce Becker; see:
	http://mail.gnu.org/archive/html/bug-bison/2003-03/msg00017.html

2003-03-03  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	* mbswidth.h: Include <wchar.h>. Needed for UnixWare 7.1.1.
	Reported by John Hughes, see
	http://mail.gnu.org/archive/html/bug-bison/2003-02/msg00030.html

2003-02-19  Paolo Bonzino  <bonzini@gnu.org>

	* poll_.h: New file.
	* poll.c: New file.

2003-02-18  Paolo Bonzino  <bonzini@gnu.org>

	* mathl.h: New file.
	* acosl.c: New file.
	* asinl.c: New file.
	* atanl.c: New file.
	* ceill.c: New file.
	* cosl.c: New file.
	* expl.c: New file.
	* floorl.c: New file.
	* frexpl.c: New file.
	* ldexpl.c: New file.
	* logl.c: New file.
	* sincosl.c: New file.
	* sinl.c: New file.
	* sqrtl.c: New file.
	* tanl.c: New file.
	* trigl.c: New file.
	* trigl.h: New file.

2003-02-17  Bruno Haible  <bruno@clisp.org>

	* mkdtemp.h: New file, from GNU gettext.
	* mkdtemp.c: New file, from GNU gettext.

2003-01-31  Bruno Haible  <bruno@clisp.org>

	* rename.c: #undef rename before defining rpl_rename.
	* strnlen.c: #undef strnlen, define rpl_strnlen instead of strnlen.

2003-01-30  Bruno Haible  <bruno@clisp.org>

	* printf-args.h: New file, from GNU gettext.
	* printf-args.c: New file, from GNU gettext.
	* printf-parse.h: New file, from GNU gettext.
	* printf-parse.c: New file, from GNU gettext.
	* vasnprintf.h: New file, from GNU gettext.
	* vasnprintf.c: New file, from GNU gettext.
	* asnprintf.c: New file, from GNU gettext.
	* vasprintf.h: New file, from GNU gettext with modifications.
	* vasprintf.c: New file, from GNU gettext.
	* asprintf.c: New file, from GNU gettext.

2003-01-29  Bruno Haible  <bruno@clisp.org>

	* stpncpy.h: New file, from GNU gettext with modifications.
	* stpncpy.c: New file, from GNU gettext with modifications.

2003-01-28  Bruno Haible  <bruno@clisp.org>

	* c-ctype.h: New file, from GNU gettext, with changes suggested by
	Paul Eggert.
	* c-ctype.c: New file, from GNU gettext, with changes suggested by
	Paul Eggert.

2003-01-27  Bruno Haible  <bruno@clisp.org>

	* xsetenv.h: New file, from GNU gettext.
	* xsetenv.c: New file, from GNU gettext.

2003-01-23  Bruno Haible  <bruno@clisp.org>

	* minmax.h: New file, from GNU gettext, with comments from Paul Eggert.

2003-01-22  Bruno Haible  <bruno@clisp.org>

	* exit.h: New file, from GNU gettext.

2003-01-11  Bruno Haible  <bruno@clisp.org>

	* stpcpy.h (stpcpy): Use ANSI C function declarations.
	* strcase.h (strcasecmp, strncasecmp): Likewise.

2003-01-14  Jim Meyering  <jim@meyering.net>

	* same.c (same_name): Tweak a comment.

2003-01-11  Bruno Haible  <bruno@clisp.org>

	* same.c (same_name): Reorder tests so as to avoid calling stat()
	when a string comparison is sufficient.

2003-01-11  Bruno Haible  <bruno@clisp.org>

	* readtokens.c (readtoken): Cast character to 'unsigned char', not
	'unsigned int'.

2003-01-11  Bruno Haible  <bruno@clisp.org>

	* hash-pjw.c: Add comment about low quality of this function.

2003-01-12  Paul Eggert  <eggert@twinsun.com>

	Finish renaming getstr -> getdelim2 and readline -> readlinebuffer,
	to avoid collisions with libcurses and libreadline.

	* Makefile.am (libfetish_a_SOURCES): Remove getstr.c, getstr.h.
	* getstr.h, getstr.c: Remove.
	* getline.c: Include "getline.h", to check interface.
	Move body of old getstr.c here: this defines MIN_CHUNK and
	declares getdelim2, which is renamed from getstr.
	(getline, getdelim): Adjust to renaming of getstr -> getdelim2.

	* linebuffer.c (readlinebuffer): Renamed from readline.
	All uses changed.
	* linebuffer.h: Likewise.
	(readline): Remove backward-compatibility macro.

2003-01-12  Jim Meyering  <jim@meyering.net>

	* makepath.c: Don't test HAVE_ERRNO_H.  It's not necessary.

2003-01-10  Bruno Haible  <bruno@clisp.org>

	* alloca_.h: New file.
	* getdate.y: Unconditionally include alloca.h.
	* makepath.c: Likewise.
	* setenv.c: Likewise.
	* userspec.c: Likewise.

2003-01-09  Bruno Haible  <bruno@clisp.org>

	* stdbool.h.in: New file.

2003-01-08  Bruno Haible  <bruno@clisp.org>

	* safe-read.c: Include specification header first, to ensure its
	selfcontainedness.
	* full-write.c: Likewise.

2003-01-08  Jim Meyering  <jim@meyering.net>

	* full-write.c: Undefine and define-away `const' after inclusion
	of errno.h, not before.  Suggestion from Bruno Haible.

2003-01-07  Jim Meyering  <jim@meyering.net>

	* full-write.c: Rework so that it may serve to define full_read, too.
	* full-read.c: Simply #define FULL_READ and include full-write.c.

2003-01-06  Jim Meyering  <jim@meyering.net>

	* version-etc.c: Update year in translatable copyright string.

2002-12-25  Bruno Haible  <bruno@clisp.org>

	* strtoimax.c: Include <stdint.h> as an alternative to <inttypes.h>.
	* xstrtol.h: Likewise.
	* xstrtoimax.c: Likewise.
	* xstrtoumax.c: Likewise.
	* human.h: Likewise.

	* tempname.c: Include <inttypes.h> too. Avoids a compilation error
	on systems that have <inttypes.h> but not <stdint.h>.

2002-12-31  Paul Eggert  <eggert@twinsun.com>

	* memcoll.c (memcoll): Fall back on a simple algorithm using
	memcmp if strcoll doesn't work.

2002-12-23  Bruno Haible  <bruno@clisp.org>

	* localcharset.h: New file.
	* localcharset.c: Include it.
	* unicodeio.c: Likewise.

2002-12-22  Bruno Haible  <bruno@clisp.org>

	* utime.c (utime_null): No need to call ftruncate if the file was
	nonempty.

2002-12-23  Bruno Haible  <bruno@clisp.org>

	* memcoll.c (STRCOLL): New macro.
	(memcoll): Use it.

2002-12-22  Bruno Haible  <bruno@clisp.org>

	* getstr.h (getstr): Define, to avoid clash with libcurses.
	* linebuffer.h (readline): Define, to avoid clash with libreadline.

2002-12-22  Bruno Haible  <bruno@clisp.org>

	* getdate.y (get_date): Test HAVE_STRUCT_TM_TM_ZONE, not HAVE_TM_ZONE.

2002-12-23  Bruno Haible  <bruno@clisp.org>

	* getline.h: Include <stddef.h>, for size_t.

	* unicodeio.h: Include <stddef.h>, for size_t.
	* unicodeio.c: Don't include <stddef.h>.

2002-12-17  Bruno Haible  <bruno@clisp.org>

	* canon-host.c (strdup): Remove unused declaration.

	* fsusage.c: Include full_read.h.
	(get_fs_usage): Use full_read instead of safe_read.

	* utime.c (utime_null): Use SAFE_READ_ERROR.

2002-12-11  Bruno Haible  <bruno@clisp.org>

	* setenv.h: Rewritten to cope with systems that have setenv() but not
	unsetenv().
	* setenv.c, unsetenv.c: Taken from glibc-2.2.4 with the following
	modifications:

	2002-12-11  Bruno Haible  <bruno@clisp.org>

		* setenv.c (alloca): Fall back to malloc.
		(freea): New macro.
		(setenv): Use freea() to free memory allocated with alloca().

	2002-11-13  Bruno Haible  <bruno@clisp.org>

		* setenv.c (compar_fn_t, __add_to_environ, setenv): Use ANSI C
		function declarations.
		* unsetenv.c (unsetenv): Likewise.

	2002-03-04  Bruno Haible  <bruno@clisp.org>

		Portability to AIX 4.3.3.
		* unsetenv.c: New file, extracted from setenv.c.
		* setenv.c: Move the unsetenv() function to unsetenv.c.

	2001-12-20  Bruno Haible  <bruno@clisp.org>

		* setenv.c (__add_to_environ): Don't call realloc(NULL,...),
		use malloc instead. For SunOS 4.

	2001-12-11  Bruno Haible  <bruno@clisp.org>

		* setenv.c: Declare alloca.
		(compar_fn_t): New typedef.
		(KNOWN_VALUE, STORE_VALUE): Use it.

	* Makefile.am (libfetish_a_SOURCES): Add setenv.c, unsetenv.c,
	setenv.h.

2002-12-10  Paul Eggert  <eggert@twinsun.com>

	Port exclude.c and exclude.h to more non-GNU systems, e.g. Solaris 7.
	* exclude.h (EXCLUDE_ANCHORED, EXCLUDE_INCLUDE, EXCLUDE_WILDCARDS):
	Choose values that are less likely to collide with system fnmatch
	options.
	* exclude.c (FNM_CASEFOLD, FNM_LEADING_DIR): Define to 0 if not
	defined (e.g., a pure POSIX system).
	(EXCLUDE_macros_do_not_collide_with_FNM_macros): Use FNM_PATHNAME
	instead of FNM_FILE_NAME, for compatibility with pure POSIX sytems.

2002-12-06  Jim Meyering  <jim@meyering.net>

	* error.c: Be consistent: change `#ifndef _LIBC' to `#if !_LIBC'.

	Merge in changes from libc's misc/error.c, in preparation
	for the merge of gnulib's changes back into libc.

	* error.c (_): Define only if not already defined.
	Move definition to follow all #include directives.
	Include unlocked-io.h only if !_LIBC.
	[_LIBC]: Include <libio/libioP.h>.
	[USE_IN_LIBIO]: Include <libio/iolibio.h>
	(fflush): Tweak definition to use INTUSE.
	(putc): Define.

2002-12-05  Paul Eggert  <eggert@twinsun.com>

	* alloca.c [defined emacs]: Include "lisp.h".
	(xalloc_die) [defined emacs]: New macro.
	(free) [defined emacs && defined EMACS_FREE]: Define to EMACS_FREE.
	[! defined emacs]: Include <xalloc.h>.
	(POINTER_TYPE) [!defined POINTER_TYPE]: New macro.
	(pointer): Typedef to POINTER_TYPE *.
	(malloc): Remove decl; we now always use xmalloc.
	(alloca): Use old-style definition, since Emacs needs this.
	Check for arithmetic overflow when computing combined size.

2002-12-04  Paul Eggert  <eggert@twinsun.com>

	Do not generate unlocked-io.h automatically, since it's easier to
	maintain it by hand.

	* unlocked-io.h: New file, from GNU diffutils,
	but with proper copyright notice and attribution.
	* gen-uio: Remove.
	* Makefile.am: Add copyright notice.
	(libfetish_a_SOURCES): Add unlocked-io.h.
	(BUILT_SOURCES, all-local): Remove unlocked-io.h.
	(DISTCLEANFILES, io_functions): Remove macros.
	(EXTRA_DIST): Remove gen_uio.
	(unlocked-io.h): Remove rule.

2002-12-04  Jim Meyering  <jim@meyering.net>

	Reflect the fact that stat.c and lstat.c are no longer generated.
	* Makefile.am (BUILT_SOURCES): Remove stat.c and lstat.c.
	(DISTCLEANFILES): Likewise.
	(EXTRA_DIST): Likewise.
	(all_local): Don't depend on stat.c or lstat.c.
	(stat.c, lstat.c): Remove rules.
	(EXTRA_DIST): Remove xstat.in.

	* xstat.in: Remove file.  Contents moved into stat.c.
	* stat.c: New file.  Contents mostly from xstat.in.
	* stat.c: Rework so that it may serve to define rpl_lstat, too.
	* lstat.c: New file. Simply #define LSTAT and include stat.c.

	* safe-read.c: Rework so that it may serve to define safe_write, too.
	* safe-write.c: Simply #define SAFE_WRITE and include safe-read.c.

2002-12-03  Jim Meyering  <jim@meyering.net>

	* safe-read.c, safe-write.c: Change variable names and comments, but
	not semantics, to minimize the differences between these two files.
	(safe_read): Change comment to mention SAFE_READ_ERROR.

	* safe-read.c (IS_EINTR): Define.
	(safe_read): Use IS_EINTR in place of in-function cpp directives.

2002-12-02  Bruno Haible  <bruno@clisp.org>

	* safe-write.c (CHAR_BIT, TYPE_SIGNED, TYPE_MINIMUM, TYPE_MAXIMUM):
	Define, taken from safe-read.c.
	(INT_MAX): Provide fallback.
	(safe_write): Rewrite to iterate IFF the write fails with EINTR.
	* safe-write.h (SAFE_WRITE_ERROR): Define.

	* safe-read.c (EINTR): Remove definition.
	(safe_read): Don't use EINTR if it is absent.

2002-12-02  Jim Meyering  <jim@meyering.net>

	* safe-read.c (EINTR): Define.
	(CHAR_BIT, TYPE_SIGNED, TYPE_MINIMUM, TYPE_MAXIMUM): Define.
	(INT_MAX): Provide fallback.
	(safe_read): Rewrite to iterate IFF the read fails with EINTR.

	* safe-read.h (SAFE_READ_ERROR): Define.

2002-12-01  Jim Meyering  <jim@meyering.net>

	* safe-read.c: (safe_read): Also exit the loop when read returns zero.
	(CHAR_BIT, TYPE_SIGNED, TYPE_MINIMUM, TYPE_MAXIMUM, INT_MAX): Define.

2002-11-27  Paul Eggert  <eggert@twinsun.com>

	* hash.c (hash_lookup, hash_get_first, hash_get_next, hash_find_entry,
	hash_rehash): Replace `if (limit <= value) abort ();' with
	`if (! (value < limit)) abort ();', for readability.

2002-11-26    <karl@gnu.org>

	* strdup.c: copy from libc again, with jim's ok.
	* .cppi-disable: re-add strdup.c

2002-11-25    <karl@gnu.org>

	* strtoll.c: copy from libc, meaning we now #include <strtol.c>
	instead of "strtol.c".

2002-11-25  Jim Meyering  <jim@meyering.net>

	* mktime.c: Sync from libc, now that it has the latest fix.

2002-11-24    <karl@gnu.org>

	* error.c, getopt.c, getopt.h, getopt1.c, obstack.c, regex.c,
	regex.h, strdup.c, strtoll.c, tempname.c: change license to gpl.

2002-11-24  Jim Meyering  <jim@meyering.net>

	Update from coreutils:

	* mktime.c: Merge in changes from libc.

	Avoid a link-time failure on some Linux systems.
	* mktime.c (STATIC): Define to be empty (_LIBC) or `static' (otherwise).
	(__mon_yday): Declare with the STATIC attribute.
	(__mktime_internal): Likewise.
	Based on a report from Greg Schafer.

2002-11-23  Jim Meyering  <jim@meyering.net>

	* sig2str.c (str2signum, sig2str): Avoid a warning from gcc:
	Use `unsigned', not `int', as type of index.

	* xstat.in [@BEGIN_LSTAT_ONLY@]: Include <string.h>.

	* fsusage.c: Remove unneeded parentheses around operands of `defined'.

2002-11-22  Paul Eggert  <eggert@twinsun.com>

	* hash.c: Avoid use of <assert.h>, as the GNU Coding Standards
	hint that one should use `if (! x) abort ();' rather than `assert
	(x);', and anyway it's one less thing to worry about configuring.
	(hash_lookup, hash_get_first, hash_get_next, hash_find_entry,
	hash_rehash, hash_insert): Use abort rather than assert.

2002-11-22  Paul Eggert  <eggert@twinsun.com>

	* quotearg.h: Allow multiple inclusion by surrounding with
	"#ifndef QUOTEARG_H_".  Include <stddef.h>, for size_t,
	so that we can be included first.
	(PARAMS): Remove; we now assume C89 or later.  All uses removed.
	* quotearg.c: Include quotearg.h immediately after config.h.
	No need to include stddef.h or sys/types.h any more.
	Surround local include files with "", not "<>".
	Assume HAVE_LIMITS_H unconditionally, as we assume C89.
	Similarly, assume HAVE_C_BACKSLASH_A, CHAR_BIT, UCHAR_MAX, UINT_MAX,
	HAVE_STDLIB_H, HAVE_STRING_H, STDC_HEADERS.
	(HAVE_MBSINIT): Undef if !HAVE_MBRTOWC.
	(mbsinit): Define to 1 if !defined mbsinit && !HAVE_MBSINIT.
	(ISPRINT): Remove; no longer needed now that we assume C89.

	(clone_quoting_options, quotearg_buffer, quotearg_n_options):
	Preserve errno.

	(quotearg_buffer_restyled, quotearg_n, quotearg_n_style,
	quotearg_char): Use SIZE_MAX rather than
	(size_t) -1 when we are talking about "infinity".

	(quotearg_buffer_restyled): Fix bug when quoting trigraphs.

2002-11-22  Bruno Haible  <bruno@clisp.org>

	* safe-read.h: Assume C89. Add comments.
	(safe_read): Change return type to size_t.
	* safe-read.c (safe_read): Change return type to size_t. Handle byte
	counts > SSIZE_MAX correctly.
	* safe-write.h: New file.
	* safe-write.c: New file.
	* full-read.h: New file.
	* full-read.c: New file.
	* full-write.h: Assume C89. Add comments.
	* full-write.c: Include safe-write.h.
	(full_write): Rewritten to use safe_write.
	Suggested by Jim Meyering and Paul Eggert.

2002-11-21  Bruno Haible  <bruno@clisp.org>

	Remove case insensitive option matching.
	* argmatch.h (argcasematch): Remove declaration.
	(ARGCASEMATCH): Remove macro.
	(__xargmatch_internal): Remove case_sensitive argument.
	(XARGMATCH): Update.
	(XARGCASEMATCH): Remove macro.
	* argmatch.c (argmatch): Renamed from __argmatch_internal. Remove
	case_sensitive argument.
	(argcasematch): Remove function.
	(__xargmatch_internal): Remove case_sensitive argument.
	(main): Use XARGMATCH instead of XARGCASEMATCH.

	* xmalloc.c: Change compile-time error message. Add comment about
	required autoconf version.

2002-11-21  Jim Meyering  <jim@meyering.net>

	* strdup.c (strdup): Tweak comment and initial #if/#include.

	Merge in changes from the coreutils.

	2002-09-25  Paul Eggert  <eggert@twinsun.com>
	* fsusage.c [! HAVE_INTTYPES_H && HAVE_STDINT_H] Include <stdint.h>.
	(UINTMAX_MAX) [!defined UINTMAX_MAX]: New macro.
	(PROPAGATE_ALL_ONES): Work even if X is unsigned and narrower than
	int.  Work more efficiently if X is the same width as uintmax_t.
	Do not compare X to -1, to avoid bogus compiler warning.
	(get_fs_usage): (uintmax_t) -1 -> UINTMAX_MAX to avoid a cast.
	Don't assume that f_frsize and f_bsize are the same type.

	* mountlist.c: #undef MNT_IGNORE before defining it, to avoid warning
	on FreeBSD.

	* makepath.c (make_path): Restore umask *before* creating the final
	component.
	(make_path): Minor reformatting.

	* xmalloc.c: Adjust to work with new autoconf macros, AC_FUNC_MALLOC
	and AC_FUNC_REALLOC: test #ifndef HAVE_MALLOC/HAVE_REALLOC.

	* mountlist.h (ME_DUMMY): Don't count entries of type `auto' as dummy
	ones.  At least on GNU/Linux systems, `auto' means something else.
	From Michael Stone.

2002-11-20  Paul Eggert  <eggert@twinsun.com>

	Merge argmatch cleanups from Bison.  Assume C89.

	* argmatch.c: Include config.h here, not in argmatch.h.
	Include stdlib.h, for EXIT_FAILURE.
	Always include <string.h>, since we assume C89.
	(EXIT_FAILURE): Remove pre-C89 bug workaround.
	* argmatch.h: Do not include <config.h> or <sys/types.h>.
	Include <stddef.h> instead, since it's all we need for size_t.
	(PARAMS): Remove.  All uses removed.
	(ARRAY_CARDINALITY): Do not bother to #undef.
	(ARRAY_CARDINALITY, ARGMATCH, ARGCASEMATCH, invalid_arg,
	ARGMATCH_VALID, XARGMATCH, XARGCASEMATCH):
	Remove unnecessary parentheses.
	(ARGMATCH_VALID, XARGMATCH, XARGCASEMATCH):
	Insert necessary parentheses.
	(ARGMATCH_CONSTRAINT, ARGMATCH_VERIFY): New macros.
	(ARGMATCH_ASSERT): Use ARGMATCH_CONSTRAINT.

2002-11-19  Bruno Haible  <bruno@clisp.org>

	* mbswidth.c: Include mbswidth.h right at the beginning.
	* mbswidth.h: Include <stddef.h>, for size_t.

	* mbswidth.h (PARAMS): Remove macro.
	(mbswidth, mbsnwidth): Use ANSI C function declarations.
	* mbswidth.c (mbswidth, mbsnwidth): Likewise.

	* gcd.h (PARAMS): Remove macro.
	(gcd): Use ANSI C function declarations.
	* gcd.c (gcd): Likewise.

2002-11-15  Bruno Haible  <bruno@clisp.org>

	* strcspn.c: Include <stddef.h>.
	(strcspn): Use ANSI C function declaration. Change return type to
	size_t. Use NULL.
	* strpbrk.c: Minimize diffs to glibc. Include <stddef.h>.
	(strpbrk): Use NULL.
	* strpbrk.h (PARAMS): Remove macro.
	(strpbrk): Use ANSI C function declaration.
	* strstr.c: Don't include <sys/types.h>.
	* strstr.h (PARAMS): Remove macro.
	(strstr): Use ANSI C function declarations.

2002-11-06  Bruno Haible  <bruno@clisp.org>

	* gcd.h (gcd): Change argument type to 'unsigned long'.
	* gcd.c (gcd): Likewise.

2002-11-05  Bruno Haible  <bruno@clisp.org>

	* gcd.h: New file, from gettext-0.11.5.
	* gcd.c: New file, from gettext-0.11.5.

2002-11-05  Bruno Haible  <bruno@clisp.org>

	* error.c [!_LIBC]: Include gettext.h instead of <libintl.h>.
	* getopt.c [!_LIBC]: Include gettext.h instead of <libintl.h>.
	* obstack.c [!_LIBC]: Include gettext.h instead of <libintl.h>.
	* regex.c [!_LIBC]: Include gettext.h instead of <libintl.h>.

	* argmatch.c: Include gettext.h instead of <locale.h> and <libintl.h>.
	* makepath.c: Include gettext.h instead of <locale.h> and <libintl.h>.

	* closeout.c: Include gettext.h instead of <libintl.h>.
	* human.c: Include gettext.h instead of <libintl.h>.
	* quotearg.c: Include gettext.h instead of <libintl.h>.
	* rpmatch.c: Include gettext.h instead of <libintl.h>.
	* unicodeio.c: Include gettext.h instead of <libintl.h>.
	* userspec.c: Include gettext.h instead of <libintl.h>.
	* version-etc.c: Include gettext.h instead of <libintl.h>.
	* xmalloc.c: Include gettext.h instead of <libintl.h>.
	(textdomain): Remove definition.
	* xmemcoll.c: Include gettext.h instead of <libintl.h>.

	* long-options.c: Remove include of <libintl.h> and definition of _.
	* same.c: Remove include of <libintl.h> and definition of _.

2002-11-04  Bruno Haible  <bruno@clisp.org>

	* stpcpy.h: New file, from GNU gettext-0.11.5.
	* strcase.h: New file, from GNU gettext-0.11.5.
	* strpbrk.h: New file, from GNU gettext-0.11.5.
	* strstr.h: New file, from GNU gettext-0.11.5.
	* xgetcwd.h: New file, from GNU gettext-0.11.5.

2002-05-09  Bruno Haible  <bruno@clisp.org>

	* config.charset: Update for newest glibc. Add canonical names
	ISO-8859-14, KOI8-T, TCVN5712-1, GEORGIAN-PS.

2002-05-09  Bruno Haible  <bruno@clisp.org>

	* localcharset.c (get_charset_aliases): Add more Windows specific
	aliases.

2002-05-08  Owen Taylor  <otaylor@redhat.com>

	* config.charset: A few additions for Solaris.

2001-12-05  Bruno Haible  <bruno@clisp.org>

	* localcharset.c (locale_charset): Don't return an empty string.

2001-10-23  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: msdos in uk_UA uses CP1125.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	Make it possible to build libcharset with CC=gcc CFLAGS="-x c++".
	* localcharset.c (locale_charset): Declare as extern "C".

2002-02-15  Bruno Haible  <bruno@clisp.org>

	* config.charset [msdosdjgpp]: For Russian, use CP866.

2002-02-11  Bruno Haible  <bruno@clisp.org>

	* config.charset: Add support for NetBSD.

2002-09-25    <karl@gnu.org>

	* strdup.c: copy from libc/string (via ../config/srclist*).
	* getopt*: copy from libc/posix.
	* gettext.h: copy from gettext.
	* .cppi-disable: add strdup.c, gettext.h.

2002-07-01  Jim Meyering  <meyering@lucent.com>

	* c-stack.c: Include sys/time.h.
	From Volker Borchert.

2002-06-11  Paul Eggert  <eggert@twinsun.com>

	* fnmatch.c, fnmatch_loop.c (WIDE_CHAR_SUPPORT):
	New macro.  Use it uniformly instead of
	(defined HAVE_WCTYPE_H && defined HAVE_WCHAR_H).
	It also uses HAVE_BTOWC, to fix a porting bug on Solaris 2.5.1
	reported by Vin Shelton.

2002-06-22  Jim Meyering  <meyering@lucent.com>

	* fnmatch.c (ISASCII, ISPRINT): Undefine, to avoid warning about
	redefinition due to Solaris 2.6's definition in /usr/include/sys/euc.h.

2002-06-22  Paul Eggert  <eggert@twinsun.com>

	* c-stack.h (segv_handler, c_stack_action) [! defined SA_SIGINFO]:
	Do not assume SA_SIGINFO behavior.
	Bug reported by Jim Meyering on NetBSD 1.5.2.

2002-06-22  Jim Meyering  <meyering@lucent.com>

	* c-stack.c, c-stack.h: New files, from diffutils-2.8.2.

	* exitfail.c, exitfail.h: Likewise.
	* Makefile.am (libfetish_a_SOURCES): Add exitfail.c and exitfail.h.

	* Makefile.am (libfetish_a_SOURCES): Add fnmatch_.h in place
	of fnmatch.h.
	(EXTRA_DIST): Add fnmatch_loop.c.
	(libfetish_a_SOURCES): Add c-stack.c and c-stack.h.

	* fnmatch_loop.c: New file, from diffutils-2.8.2.
	* fnmatch.c: Update from diffutils-2.8.2.
	* fnmatch_.h: New file.  From diffutils-2.8.2.
	* fnmatch.h: Remove file.

2002-06-18  Paul Eggert  <eggert@twinsun.com>

	* file-type.h: Report an error if neither S_ISREG nor
	S_IFREG is defined, instead of using a test specific to glibc
	2.2.  This should be safe, since POSIX requires S_ISREG and
	Unix Version 7 had S_IFREG.  We don't need to check for
	<sys/types.h> since we don't use any symbols that it defines.

2002-06-15  Jim Meyering  <meyering@lucent.com>

	* file-type.h (FILE_TYPE_H): Guard entire contents with #ifndef.
	For GNU libc 2.2 and newer, ensure that <sys/types.h> and <sys/stat.h>
	have been included before this file.

2002-06-13  Richard Dawe  <richdawe@bigfoot.com>

	* Makefile.am (lstat.c, stat.c, .sin.sed): Use t-$@, rather than $@-t,
	so that each temporary file name is unique and valid in the first
	8 characters, for operation under DOS.

2002-06-15  Jim Meyering  <meyering@lucent.com>

	Work even with DJGPP 2.03, which lacks support for symlinks.
	From Richard Dawe.
	* xstat.in (S_ISLNK): Define to 0 if neither S_ISLNK nor S_IFLNK
	is defined.
	* lchown.c (S_ISLNK): Likewise.

2002-06-14  Jim Meyering  <meyering@lucent.com>

	* file-type.h: Use the version from diffutils-2.8.2.
	* file-type.c: Likewise.

2002-05-27  Jim Meyering  <meyering@lucent.com>

	Fix a problem seen only on nonconforming systems whereby ls.c's
	use of localtime, and then of gettimeofday would cause trouble:
	the localtime call used to initialize rpl_gettimeofday's save
	mechanism would clobber ls's current local time information so
	that in any long listing the first file would always be listed
	with date 1970-01-01.  Analysis by Volker Borchert.

	* gettimeofday.c (localtime): Undefine.
	(rpl_localtime): New function.

2002-05-22  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (libfetish_a_SOURCES): Add file-type.c and file-type.h.
	* file-type.h: New file.
	* file-type.c (file_type): New file/function.  Extracted from diffutils.

2002-04-29  Paul Eggert  <eggert@twinsun.com>

	* hard-locale.c: Upgrade to version used in GNU Diffutils 2.8.1.

2002-04-28  Paul Eggert  <eggert@twinsun.com>

	* sig2str.h (SIGNUM_BOUND): Do not use WTERMSIG, to avoid
	depending on <sys/wait.h> and WTERMSIG.  Default to 64 instead
	of 127, since 64 is the largest conceivable number for ancient
	nonstandard hosts.
	* sig2str.c: Do not include <sys/wait.h>; no longer needed.

2002-04-28  Jim Meyering  <meyering@lucent.com>

	* sig2str.c (WTERMSIG): Remove definition (unused).

2002-04-28  Paul Eggert  <eggert@twinsun.com>

	* sig2str.h, sig2str.c: New files.
	* Makefile.am (libfetish_a_SOURCES): Add sig2str.h.

2002-04-24  Jim Meyering  <meyering@lucent.com>

	* gettext.h: New file, from Gettext.
	* Makefile.am (INCLUDES): Remove -I../intl.
	(libfetish_a_SOURCES): Add gettext.h.

2002-04-16  Jim Meyering  <meyering@lucent.com>

	* readutmp.h (UT_TYPE): Remove definition (now in who.c).
	(HAVE_STRUCT_XTMP_UT_EXIT, HAVE_STRUCT_XTMP_UT_ID): Define.
	(HAVE_STRUCT_XTMP_UT_PID, HAVE_STRUCT_XTMP_UT_TYPE): Define.

2002-04-12  Jim Meyering  <meyering@lucent.com>

	* dirfd.h (dirfd): Elide prototype if dirfd is a macro.

2002-03-10  Jim Meyering  <meyering@lucent.com>

	* makepath.c (make_path): Remove a comma from a diagnostic.
	Suggestion from Santiago Vila.

2002-03-08  Jim Meyering  <meyering@lucent.com>

	* rename.c: Mention that this wrapper is needed also on
	mips-dec-ultrix4.4 systems.

2002-03-02  Jim Meyering  <meyering@lucent.com>

	* gettime.c (gettime): Test HAVE_CLOCK_GETTIME,
	not HAVE_CLOCK_SETTIME.

2002-02-27  Paul Eggert  <eggert@twinsun.com>

	* nanosleep.h: Rename to....
	* timespec.h: New name for nanosleep.h.  All uses changed.

	* gettime.c: New file.
	* settime.c: New file.
	* stime.c: Remove.

	* Makefile.am (libfetish_a_SOURCES): Add gettime.c, settime.c,
	timespec.h.  Remove nanosleep.h.

2002-02-25  Paul Eggert  <eggert@twinsun.com>

	* acl.c, acl.h: New files.
	* Makefile.am (libfetish_a_SOURCES): Add acl.h, acl.c.

2002-02-24  Jim Meyering  <meyering@lucent.com>

	* strnlen.c (strnlen): Define-away/undef so that an inconsistent
	prototype in string.h (on at least AIX4.3.2.0 w/gcc-2.95.3) doesn't
	cause trouble.  Reported by Nelson Beebe.

2002-02-23  Paul Eggert  <eggert@twinsun.com>

	* path-concat.c (xpath_concat): Reorder code to pacify
	compilers that don't know that xalloc_die never returns.

2002-02-20  Jim Meyering  <meyering@lucent.com>

	* getdate.c: Regenerate using bison-1.33.

2002-02-15  Paul Eggert  <eggert@twinsun.com>

	* posixver.c, posixver.h: New files.
	* Makefile.am (libfetish_a_SOURCES): Add them.

2002-02-02  Paul Eggert  <eggert@twinsun.com>
	    Bruno Haible  <bruno@clisp.org>

	* unicodeio.h (print_unicode_char): Add exit_on_error argument.
	(fwrite_success_callback): New declaration.
	* unicodeio.c (unicode_to_mb): New function, extracted from
	print_unicode_char. Call failure callback instead of error.
	(fwrite_success_callback): New function.
	(exit_failure_callback): New function.
	(fallback_failure_callback): New function.
	(print_unicode_char): Call unicode_to_mb.

2002-01-26  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (getdate$U.o): Depend on unlocked-io.h.

2002-01-22  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (Makefile): Don't depend on $(BUILT_SOURCES).
	Otherwise, some versions of automake would omit the rule that makes
	Makefile from Makefile.in.

2001-01-21  Paul Eggert  <eggert@twinsun.com>

	* xmemcoll.h, xmemcoll.c: New files.
	* Makefile.am (libfetish_a_SOURCES): Add them.
	* memcoll.c: Include errno.h, and declare errno if not defined.
	(memcoll): Set errno to zero if there is no error.

	* quotearg.c (quotearg_buffer_restyled):
	Fix bug with quoting buffers containing NUL when backslashing escapes.
	This bug was exposed by the other changes in this patch.
	(quotearg_n_options): New arg ARGSIZE.
	All callers changed.
	(quoting_options_from_style): New function.
	(quotearg_n_style): Use it.
	(quotearg_n_style_mem): New function.

	* quotearg.h (quotearg_n_style_mem): New function.

2002-01-16  Jim Meyering  <meyering@lucent.com>

	* getdate.y: Add three semicolons, each just before a closing brace.
	Bison (as of version 1.31) no longer papers over that mistake.

2002-02-14  Paul Eggert  <eggert@twinsun.com>

	* backupfile.c (ISDIGIT): Comment fix.
	* getdate.y (ISDIGIT): Likewise.
	* posixtm.c (ISDIGIT, year): Likewise.
	* strverscmp.c (ISDIGIT): Likewise.
	* userspec.c (ISDIGIT): Likewise.

2002-01-05  Jim Meyering  <meyering@lucent.com>

	* version-etc.c (version_etc_copyright): Update copyright year.

2001-01-19  Paul Eggert  <eggert@twinsun.com>

	* closeout.c (close_stdout_status): If ferror (stdout), do
	not silently exit merely because the output buffer happens to
	have nothing pending.

2001-12-18  Paul Eggert  <eggert@twinsun.com>

	See the big note in ../ChangeLog.
	* human.c (suffixes): Prefer K to k for 1024.
	(generate_suffix_backwards): New function.
	(human_readable_inexact): Use it.
	* xstrtol.c (__xstrtol): If there is no number but there
	is a valid suffix, assume 1.  "MB" now means decimal, "MiB" binary.
	Accept 'K' as well as 'k'.

2001-12-15  Jim Meyering  <meyering@lucent.com>

	* regex.h (__restrict_arr): Update from libc.

	* mountlist.h (ME_REMOTE): Recognize file systems of type smbfs
	as `remote' if the name starts with `//'.  Suggested by Michael Stone.
	(STREQ): Define.

2001-12-10  Jim Meyering  <meyering@lucent.com>

	* linebuffer.c: Remove explicit declarations of xmalloc and xrealloc,
	Instead, include "xalloc.h".
	(initbuffer): Don't cast xmalloc return value to char*.
	(readline): Reword comment.
	Don't cast xrealloc return value to char*
	Return NULL, not 0.

2001-12-09  Jim Meyering  <meyering@lucent.com>

	* modechange.c (mode_compile): Add cast to avoid pedantic warning about
	`signed and unsigned type in conditional expression'.
	* posixtm.c (posix_time_parse): Likewise.

	* xreadlink.c (xreadlink): Add cast to avoid a pedantic warning.

	* readtokens.c (readtoken): Declare an index to be of type unsigned
	to avoid a pedantic warning.

	* getstr.c: Don't include assert.h.
	(getstr): Remove warning-evoking assertions.
	Return -1 if offset parameter is out of bounds.
	Change the type of a local from int to size_t.

	* strftime.c (my_strftime_localtime_r): Include this function
	definition in the `#if ! HAVE_TM_GMTOFF' block.

	* xgethostname.c: Remove declarations of xmalloc and xrealloc.
	Include xalloc.h instead.

2001-12-02  Jim Meyering  <meyering@lucent.com>

	* tempname.c: Don't declare getenv, thus reverting the change of
	2001-11-18.  It's no longer necessary, now that stdlib.h is always
	included.

	* regex.c [!__BOUNDED_POINTERS__]: Define away __bounded,
	__unbounded, and __ptrvalue.  Reported by Uwe H. Steinfeld.

2001-11-30  Akim Demaille  <akim@epita.fr>

	* xstrdup.c: Include xalloc.h, so that xstrdup is declared
	before being defined.

2001-11-27  Paul Eggert  <eggert@twinsun.com>

	* quotearg.h (quotearg_n, quotearg_n_style):
	First arg is int, not unsigned.
	* quotearg.c (quotearg_n, quotearg_n_style): Likewise.
	(SIZE_MAX, UINT_MAX): New macros.
	(quotearg_n_options): Abort if N is negative.
	Avoid overflow check on hosts where size_t is 64 bits and int
	is 32 bits, as overflow is impossible there.
	Fix off-by-one typo that caused unnecessary reallocation.

2001-11-27  Jim Meyering  <meyering@lucent.com>

	* tempname.c: Merge with version from libc.
	* regex.c: Likewise.

	* tempname.c: Include stdlib.h unconditionally.  On some old systems
	for which STDC_HEADERS is 0, it was not included, resulting in a
	warning about an integer-to-pointer conversion problem with getenv.
	Reported by Volker Borchert.

2001-11-26  Jim Meyering  <meyering@lucent.com>

	* gtod.h: Remove file.
	* Makefile.am (libfetish_a_SOURCES): Remove gtod.h.
	* gettimeofday.c: Don't include gtod.h.
	(GTOD_init): Remove function.
	(rpl_gettimeofday): Do its job here instead, rather than aborting.
	Suggestion from Volker Borchert.

2001-11-23  Jim Meyering  <meyering@lucent.com>

	* hash.h (struct hash_table): Don't define here.  Merely declare it.
	* hash.c (struct hash_table): Define it here instead.

2001-11-22  Jim Meyering  <meyering@lucent.com>

	* hash.h: Bracket contents of file with #ifndef HASH_H_ ... #endif.

2001-11-18  Paul Eggert  <eggert@twinsun.com>

	* tempname.c (TMP_MAX): Remove; no longer needed.
	(TEMPORARIES): New macro.
	(__gen_tempname): Use TEMPORARIES rather than TMP_MAX.  This
	removes an artificial limitation (e.g. HP-UX 10.20, where
	TMP_MAX is 17576).

2001-11-18  Jim Meyering  <meyering@lucent.com>

	* tempname.c [!HAVE_DECL_GETENV]: Declare getenv to avoid warning
	on SunOS 4.

	* Makefile.am (Makefile): Depend on $(BUILT_SOURCES), so those
	files will be created before anything else.

2001-11-17  Jim Meyering  <meyering@lucent.com>

	* modechange.c (mode_adjust): Fix error introduced on 1999-04-26
	that made e.g., `chmod a=,o=w,g=o F' cause F to be group readable
	rather than group writable.  Patch by Juan F. Codagnone.

	* readtokens.c: Remove explicit declarations of xmalloc and xrealloc,
	Instead, include "xalloc.h".

	* mountlist.c: Include unlocked-io.h after all system headers.
	Remove explicit declarations of xmalloc, xrealloc,
	and xstrdup.  Instead, include "xalloc.h".

	* argmatch.c, closeout.c, error.c, exclude.c: Include unlocked-io.h.
	* fatal.c, getdate.y, getpass.c, getstr.c, getusershell.c: Likewise.
	* mountlist.c, posixtm.c, readtokens.c, readutmp.c: Likewise.

	* regex.c, sha.c, version-etc.c, yesno.c: Likewise.
	Reported by Padraig Brady.

	* mkstemp.c: #undef mkstemp.
	Include config.h.
	(rpl_mkstemp): Rename from mkstemp.
	Protoize.

2001-11-16  Jim Meyering  <meyering@lucent.com>

	* physmem.c [HAVE_SYS_PSTAT_H]: Include <sys/pstat.h>.
	(physmem_total) [HAVE_PSTAT_GETSTATIC]: If sysconf couldn't be used to
	determine the amount of total physical memory, use pstat_getstatic.
	HPUX-11 doesn't define _SC_PHYS_PAGES.
	(physmem_available) [HAVE_PSTAT_GETSTATIC && HAVE_PSTAT_GETDYNAMIC]:
	If sysconf couldn't be used to determine the amount of available
	physical memory, use both pstat_getstatic and pstat_getdynamic.
	Based on a patch from Bob Proulx.

2001-11-05  Jim Meyering  <meyering@lucent.com>

	* xstat.in (slash_aware_lstat): Correct a misleading comment.

2001-11-03  Jim Meyering  <meyering@lucent.com>

	* argmatch.h (ARGMATCH_TO_ARGUMENT): Remove casts of first two args
	in argmatch_to_argument call.

	* dirfd.c (dirfd): Reflect the fact that DIR_TO_FD now takes an
	argument.

	* hash.c (hash_clear): Fix a bug that could lead to an infloop or
	e.g., a fault due to an attempt to free a NULL pointer.

2001-11-01  Jim Meyering  <meyering@lucent.com>

	* dirfd.c, dirfd.h: New files.
	* Makefile.am (libfetish_a_SOURCES): Add dirfd.h.

	* hash.c (hash_print) [TESTING]: Clean up.

2001-10-22  Paul Eggert  <eggert@twinsun.com>

	* hard-locale.c (alloca): Define to __builtin_alloca if __GNUC__,
	to avoid a warning if -Wall.

2001-10-21  Paul Eggert  <eggert@twinsun.com>

	* regex.c (uintptr_t): Remove macro and decl; it's config.h's job.

2001-10-21  Jim Meyering  <meyering@lucent.com>

	* obstack.c (_): Honor the setting of ENABLE_NLS.  Otherwise,
	this code would end up calling gettext even in packages built
	with --disable-nls.
	* getopt.c (_): Likewise.
	* regex.c (_): Likewise.

2001-10-20  Paul Eggert  <eggert@twinsun.com>

	* error.c (strerror_r): Do not declare unless !_LIBC.
	Do not check for HAVE_DECL_STRERROR_R missing unless STRERROR_R_CHAR_P.
	Use strerror_r that is only a macro, even if it is not a function.
	(strerror): Check for HAVE_DECL_STRERROR before declaring.
	(private_strerror): Use prototypes, not old-style function definition.
	(print_errno_message): New function.
	Support the POSIX 'int'-flavored strerror_r, as well as the traditional
	char*-flavored one.
	(error_tail, error, error_at_line): Use it.

2001-10-11  Jim Meyering  <meyering@lucent.com>

	* argmatch.c (argmatch_invalid): Use quotearg_n_style (0, ...
	and quote_n (1, ... to avoid clobbering a buffer.

2001-10-05  Jim Meyering  <meyering@lucent.com>

	* Makefile.am: (libfetish_a_SOURCES): Add hash-pjw.c and hash-pjw.h.
	* hash-pjw.c: New file (factored out of fileutils' remove.c).
	* hash-pjw.h: New file.

2001-09-30  Jim Meyering  <meyering@lucent.com>

	* mountlist.c [MOUNTED_GETFSSTAT]:
	Include <sys/ucred.h>, for Apple Darwin.
	Include sys/mount.h and sys/fs_types.h only if available.
	(FS_TYPE): Define.
	(read_filesystem_list): Use FS_TYPE.

2001-09-29  Paul Eggert  <eggert@twinsun.com>

	* exclude.c (excluded_filename): 0 -> false, since it's
	a boolean context.

2001-09-28  Paul Eggert  <eggert@twinsun.com>

	Fix bug reported by Petter Reinholdtsen for HP-UX 10.20, which
	#defines strtoimax.  Also treat the other strto* functions
	like strtoimax.

	* xstrtol.c (strtol): Do not declare if HAVE_DECL_STRTOL.
	(strtoul): Do not declare if HAVE_DECL_STRTOUL.
	(strtoimax, strtoumax): Do not declare if already defined as a macro.

2001-09-26  Jim Meyering  <meyering@lucent.com>

	Most macros in unlocked-io.h had the wrong number of arguments.
	* gen-uio: New script.
	(USE_UNLOCKED_IO): Define to 1 if not already defined.
	* unlocked-io.hin: Remove file.
	* Makefile.am (unlocked-io.h): Rewrite to use a separate script,
	rather than trying to embed it here.
	(EXTRA_DIST): Add gen-uio.  Remove unlocked-io.hin
	Reported by Padraig Brady.

2001-09-25  Volker Borchert  <bt@teknon.de>

	* gettimeofday.c (rpl_gettimeofday): Declare local variable `result'.

2001-09-23  Jim Meyering  <meyering@lucent.com>

	* mountlist.c: Remove useless parentheses in #if directives.
	(MOUNTED) [!defined MOUNTED]: Define to _PATH_MOUNTED, for when
	the deprecated MOUNTED symbol is no longer defined in mntent.h.

2001-09-22  Jim Meyering  <meyering@lucent.com>

	* localcharset.c: Update from latest gettext.
	* config.charset: Likewise.

2001-09-20  Jim Meyering  <meyering@lucent.com>

	* xstrtol.c (strtoimax): Guard declaration with
	`#if !HAVE_DECL_STRTOIMAX', rather than just `#ifndef strtoimax'.
	The latter fails because some systems (at least rs6000-ibm-aix4.3.3.0)
	have their own, conflicting declaration of strtoimax in sys/inttypes.h.
	(strtoumax): Likewise, for completeness (it wasn't necessary).

2001-09-06  Paul Eggert  <eggert@twinsun.com>

	* strtoimax.c (HAVE_LONG_LONG):
	Redefine to HAVE_UNSIGNED_LONG_LONG if unsigned.
	(strtoimax): Use sizeof (long), not sizeof strtol (ptr, endptr, base),
	to work around bug in IBM C compiler.

2001-09-16  Jim Meyering  <meyering@lucent.com>

	* mkdir.c: New file.

2001-09-04  Paul Eggert  <eggert@twinsun.com>

	* xgetcwd.c: Revert some of the previous change; intead,
	fix the HAVE_GETCWD_NULL code to behave more like the
	!HAVE_GETCWD_NULL code used to.

	Include "xalloc.h".
	(xgetcwd): Do not return NULL when memory is exhausted; instead,
	invoke xalloc_die.

2001-09-04  Paul Eggert  <eggert@twinsun.com>

	* xreadlink.c (xreadlink): Omit size_t* arg.  All uses changed.
	Use ssize_t, not int, to store result of readlink.
	Check for ssize_t overflow as well as size_t overflow,
	as POSIX says the result of readlink is implementation-defined
	when ssize_t overflows.
	Remove unnecessary cast to char*.
	Use free+malloc instead of realloc, as the storage doesn't need
	to be preserved and it's clearer and can be more efficient that way.
	(SIZE_MAX, SSIZE_MAX): New macros, if <limits.h> doesn't declare.
	* xreadlink.h (xreadlink): Update prototype.

2001-09-03  Paul Eggert  <eggert@twinsun.com>

	* exclude.c (fnmatch_no_wildcards): Fix confusion between
	usage of FNM_CASEFOLD and FNM_LEADING_DIR.  The bug was
	spotted by Jim Meyering.

2001-09-03  Jim Meyering  <meyering@lucent.com>

	* xreadlink.c (xreadlink): Preserve errno around `free' during failure.

2001-09-03  Paul Eggert  <eggert@twinsun.com>

	* xgetcwd.c: Fix the !HAVE_GETCWD_NULL code to behave more
	like the HAVE_GETCWD_NULL code.
	Include pathmax.h if not HAVE_GETCWD.
	Do not include xalloc.h.
	(INITIAL_BUFFER_SIZE): New symbol.
	Do not use xmalloc / xrealloc, since the caller is responsible for
	handling errors.  Preserve errno around `free' during failure.
	Do not overrun buffer when using getwd.

2001-09-03  Paul Eggert  <eggert@twinsun.com>

	* xgetcwd.c (xgetcwd): Use HAVE_GETCWD_NULL, not (defined
	__GLIBC__ && __GLIBC__ >= 2), to decide whether to use getcwd (NULL, 0).

2001-09-02  Jim Meyering  <meyering@lucent.com>

	* error.c: Update from GNU libc.

2001-09-01  Jim Meyering  <meyering@lucent.com>

	* xreadlink.c: New file.
	* xreadlink.h: New file.
	* Makefile.am (libfetish_a_SOURCES): Add xreadlink.c and xreadlink.h.

	* regex.c (uintptr_t) [!_LIBC]: Define to private_uintptr_t, so it
	doesn't conflict with sparc Solaris 7's definition in
	/usr/include/sys/int_types.h.

	* exclude.c: Use `""', not `<>' to #include non-system header files.
	(fnmatch_no_wildcards): Rewrite not to use function names, strcasecmp
	and strncasecmp as r-values.  Unixware didn't have declarations.

2001-08-31  Jim Meyering  <meyering@lucent.com>

	* xgetcwd.c (xgetcwd): Reorganize to avoid some duplication.
	Use an initial, malloc'd, buffer of length 128 rather than
	a statically allocated one of length 1024.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* xgetcwd.c: Don't include pathmax.h.
	Include stdlib.h and unistd.h if available.
	Include xalloc.h.
	(xmalloc, xstrdup, free): Remove decls.
	(xgetcwd): Don't assume sizes fit in unsigned.
	Check for overflow when computing sizes.
	Simplify reallocation code.

2001-08-28  Paul Eggert  <eggert@twinsun.com>

	* Makefile.am (libfetish_a_SOURCES): Remove strtoxmax.c.

	* strtoimax.c: Renamed from strtoxmax.c, removing the
	old strtoimax.c.

	Also, make the following further changes to make this file's
	configuration more similar to that of strtol.c:
	(UNSIGNED): Renamed from STRTOUXMAX_UNSIGNED.  All uses changed.
	(strtoumax, uintmax_t, strtoull, strtol): Remove.
	(intmax_t, strtoimax, strtol, strtoll): New macros, if UNSIGNED.
	(strtoimax): Renamed from strtoumax.  All uses of unsigned values
	changed to signed values.

	And make the following changes as well:
	Fix copyright notice, as 1999 was missing.
	(verify): New macro.
	(strtoimax): Check sizes at compile-time, not run-time.
	Prefer strtol to strtoll if both work.
	(main): Remove; it was not that useful and was a pain to maintain.

	* strtoumax.c: Include strtoimax.c, not strtouxmax.c.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* savedir.c (savedir): Remove size parameter, as POSIX says that
	a directory's st_size can have an arbitrary value, so the old
	usage could waste an arbitrary amount of memory.  All uses
	changed.
	* savedir.h: Update prototype.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* xstrtol.c (strtoimax): New decl.

2001-08-28  Paul Eggert  <eggert@twinsun.com>

	* xstrtol.h: Add copyright notice.
	(_DECLARE_XSTRTOL): Improve quality of diagnostic for
	LONGINT_INVALID_SUFFIX_CHAR.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c: BSD/OS 4.1 wchar.h requires FILE and struct
	tm to be declared.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* hash.c: Remove '2001' from copyright notice.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* full-write.h: New file.
	* Makefile.am (libfetish_a_SOURCES): Add full-write.h.
	* full-write.c: Correct credits, as cccp.c no longer
	exists and anyway it was so heavily changed from the old cccp
	code as to be unrecognizable.  Include full-write.h.
	(full_write) Return size_t, with short writes meaning failure.
	All callers changed.  This fixes a bug with large buffers
	on 64-bit hosts.
	* utime.c: Include full-write.h.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	Merge 'exclude' changes from tar 1.13.22.
	This fixes one or two unlikely storage allocation overflow bugs,
	but doesn't change user-visible behavior otherwise.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* exclude.c (bool): Declare, perhaps by including stdbool.h.
	(<sys/types.h>): Include only if HAVE_SYS_TYPES_H.
	(<stdlib.h>, <string.h>, <strings.h>, <inttypes.h>, <stdint.h>):
	Include if available.
	(<xalloc.h>): Include
	(SIZE_MAX): Define if <stdint.h> or <inttypes.h> doesn't.
	(verify): New macro.  Use it to verify that EXCLUDE macros do not
	collide with FNM macros.
	(struct patopts): New struct.
	(struct exclude): Use it, as exclude patterns now come with options.
	(new_exclude): Support above changes.
	(new_exclude, add_exclude_file):
	Initial size must now be a power of two to simplify overflow checking.
	(free_exclude, fnmatch_no_wildcards): New function.
	(excluded_filename): No longer requires options arg, as the options
	are determined by add_exclude.  Now returns bool, not int.
	(excluded_filename, add_exclude):
	Add support for the fancy new exclusion options.
	(add_exclude, add_exclude_file): Now takes int options arg.
	Check for arithmetic overflow when computing sizes.
	(add_exclude_file): xrealloc might modify errno, so don't
	realloc until after errno might be used.

	* exclude.h (EXCLUDE_ANCHORED, EXCLUDE_INCLUDE,EXCLUDE_WILDCARDS):
	New macros.
	(free_exclude): New decl.
	(add_exclude, add_exclude_file): Now takes int options arg.
	(excluded_filename): No longer requires options arg, as the options
	are determined by add_exclude.  Now returns bool, not int.

2001-08-30  Paul Eggert  <eggert@twinsun.com>

	* alloca.c (alloca): Arg is of type size_t, not unsigned.

2001-08-27  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (libfetish_a_SOURCES): Add strtoxmax.c

	* version-etc.c (N_): Remove definition.
	Revert most of last change.
	Instead, simply don't mark the `Copyright...' string for translation.
	Based on advice from Paul Eggert.

	* strtoxmax.c: Tweak comment.

2001-08-26  Jim Meyering  <meyering@lucent.com>

	* version-etc.c (version_etc_copyright_fmt): Replace literal year
	of copyright with `%s' so translators don't get an untranslated
	message in 2002.
	(COPYRIGHT_YEAR): Define.
	(version_etc): Use fprintf rather than fputs.
	Suggestion from Ulrich Drepper.

	* Makefile.am (libfetish_a_SOURCES): Add xstrtoimax.c.

	* strtoll.c: New file, from GNU libc.
	* xstrtoimax.c: New file.

	* xstrtol.h: Add xstrtoimax.
	* strtoumax.c: New file.  Simply include "strtoumax.c".
	* strtoimax.c: New file.  Likewise, but first define STRTOUXMAX_SIGNED.

	* strtoumax.c: Factor to work both for unsigned and signed types, ...
	* strtoxmax.c: ... then renamed to this.

2001-08-13  Paul Eggert  <eggert@twinsun.com>

	* Makefile.am (unlocked-io.h): Do not append "_unlocked" twice.
	Port to Solaris 8, where 'sed' requires a space after the 'r'
	command, and where sh dislikes "$/".  Clean up the spacing a bit.
	Redirect output to $tmp just once.

2001-08-12  Paul Eggert  <eggert@sic.twinsun.com>

	* addext.c (<errno.h>): Include.
	(errno): Declare if not defined.
	(addext): Work correctly when pathconf returns -1 and leaves
	errno alone because there is no limit.  Also, work even if
	pathconf returns a value greater than SIZE_MAX.

2001-08-12  Jim Meyering  <meyering@lucent.com>

	* xgetcwd.c (xgetcwd) [defined __GLIBC__ && __GLIBC__ >= 2]:
	Simply `return getcwd (NULL, 0);'.
	[! (defined __GLIBC__ && __GLIBC__ >= 2)]:
	Use 1300 as initial value for length, not PATH_MAX.

	* pathmax.h: Clean up cpp syntax.

2001-08-12  Jim Meyering  <meyering@lucent.com>

	* gettimeofday.c: New file.
	* gtod.h: New file.
	* Makefile.am (libfetish_a_SOURCES): Add gtod.h.

2001-08-04  Jim Meyering  <meyering@lucent.com>

	* error.h (__attribute__): Remove `|| __STRICT_ANSI__' from #if stmt,
	to get in sync with glibc.

2001-08-03  Paul Eggert  <eggert@twinsun.com>

	The following changes are from gettext 0.10.39 as maintained by
	Bruno Haible.

	* mbswidth.h (MBSW_REJECT_UNPRINTABLE, MBSW_REJECT_INVALID):
	Renamed from MBSW_ACCEPT_UNPRINTABLE and MBSW_ACCEPT_INVALID
	with inverted sense.  All uses changed.

	* mbswidth.c: Don't include <limits.h>.
	Include <stdlib.h> and <string.h> unconditionally.
	(iswcntrl, mbsinit, ISCNTRL): New macros.
	(mbsnwidth): Use K&R style function declarations.
	Don't bother checking for MB_LEN_MAX == 1, since the compiler
	can optimize it when MB_CUR_MAX == 1.
	The width of control characters is zero, not 1.

2001-07-15  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (EXTRA_DIST): Add unlocked-io.hin.
	(BUILT_SOURCES): Add unlocked-io.h.
	(io_functions): Define.
	(unlocked-io.h): New rule.
	(DISTCLEANFILES): Add unlocked-io.h.
	(all-local): Depend on unlocked-io.h, to ensure it is created.

	* unlocked-io.hin: New file

	* regex.c: Update from glibc.

2001-07-05  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (noinst_HEADERS): Remove definition, per new automake
	recommendation.
	(libfetish_a_SOURCES): Put all .h files here instead.
	Remove a thus-exposed (better checks in automake) duplicate and
	two unnecessary .h files.

2001-06-11  Jim Meyering  <meyering@lucent.com>

	* regex.c: Update from GNU libc.

2001-05-27  Jim Meyering  <meyering@lucent.com>

	* readutmp.h (UT_TYPE): Define.

2001-05-24  Jim Meyering  <meyering@lucent.com>

	* argmatch.c: Include "quote.h".
	(argmatch_invalid): Remove explicit `' quotes.  Instead, use the
	quote function.  Reported by GÃ¶ran Uddeborg.

2001-05-20  Alexandre Duret-Lutz  <duret_g@epita.fr>

	* dirname.c (dir_name): Compute append_dot using path, not newpath
	which is not yet declared.

2001-05-11  Paul Eggert  <eggert@twinsun.com>

	* Makefile.am (libfetish_a_SOURCES):
	Add strftime.c, since we now compile it on all hosts.

	* strftime.c (my_strftime):
	Define to nstrftime if emacs, but only if my_strftime is not defined.
	(extra_args, extra_args_spec, extra_args_spec_iso): Rename from
	ut_argument, ut_argument_spec, ut_argument_spec_iso, respectively.
	Add one more extra argument: a nanoseconds value.
	All uses changed.
	(ns): New macro.
	(my_strftime function): Add %N format.
	(emacs_strftimeu): Renamed from emacs_strftime,
	with extra ut argument.

2001-05-11  Paul Eggert  <eggert@twinsun.com>

	dirname code cleanup.  base_name now behaves more compatibly
	with POSIX basename when given file names that have trailing
	slashes, and similarly for dir_name.  Add new primitives
	base_len and dir_len.  Put the directory-name-related decls
	into dirname.h.

	* addext.c (ISSLASH, base_name): Remove; now in dirname.h.
	* backupfile.c (base_name): Likewise.
	* basename.c (FILESYSTEM_PREFIX_LEN, PARAMS, ISSLASH): Likewise.
	* dirname.c (FILESYSTEM_PREFIX_LEN, ISSLASH): Likewise.
	* makepath.c (strip_trailing_slashes): Likewise.
	* path-concat.c (DIRECTORY_SEPARATOR, FILESYSTEM_PREFIX_LEN, ISSLASH):
	Likewise.
	* rename.c (strip_trailing_slashes): Likewise.
	* same.c (base_name): Likewise.
	* stripslash.c (ISSLASH): Likewise.

	* addext.c: Include <dirname.h> after size_t is defined.
	* backupfile.c: Likewise.

	* addext.c (addext): Use base_len to trim redundant
	trailing slashes instead of doing it ourselves.
	But do not trim the last slash if it is not redundant.

	* backupfile.c (find_backup_file_name,
	max_backup_version): Use base_len instead of rolling it ourselves.
	Handle the case of "" and (on DOS) "C:" correctly.

	* basename.c: Do not include <stdio.h>, <assert.h>; no longer needed.
	Include <string.h>, <dirname.h>.
	(base_name): Allow file names ending in slashes, other than names
	that are all slashes.  In this case, return the basename followed
	by the slashes.  This is more general, and can be used in places
	where the original base_name purposely had an assertion failure.
	(base_len): New function.

	* dirname.c: Include <string.h> instead of <stdlib.h>.
	Do not include <assert.h>; no longer needed.
	Include xalloc.h.
	(memrchr): Remove decl.
	(dir_name_r): Remove.
	(dir_len): Renamed from dirlen.  All callers changed.
	Rewrite in terms of base_name, for simplicity and consistency.
	(dir_name): Never return NULL.  All callers changed.
	Do not include <stdlib.h> in test program; no longer needed.
	return 0; is fine for test program.

	* dirname.h (DIRECTORY_SEPARATOR, ISSLASH, FILESYSTEM_PREFIX_LEN):
	New macros.
	(base_name, base_len, dir_len, strip_trailing_slashes): New decls.

	* path-concat.c (path_concat): Use base_len to compute
	base length, not strlen; this means we cannot rely on memcpy
	to null-terminate.

	* same.c (STREQ): Remove.
	(same_name): Handle the case where the basename ends in trailing '/'.

	* stripslash.c (strip_trailing_slashes): Return nonzero if
	a slash was stripped.  Do not strip the last slash after a
	file system prefix.

2001-04-08  Jim Meyering  <meyering@lucent.com>

	* getdate.y (get_date): Set tm_isdst to -1 to ensure that it is
	recomputed; that's necessary when the offset spans a DST transition.
	Patch by David J. MacKenzie.  Reported by Hon-Yin Kok.

2001-04-02  Jim Meyering  <meyering@lucent.com>

	* regex.h, regex.c: Update from GNU libc.

2001-03-19  Paul Eggert  <eggert@twinsun.com>

	* version-etc.c (version_etc_copyright): Update to 2001.

2001-03-16  Paul Eggert  <eggert@twinsun.com>

	* tempname.c (uint64_t): Define to uintmax_t if
	not defined, and if UINT64_MAX is not defined.
	Required at least for Vax Ultrix4.3, which doesn't define uint64_t.
	Reported by John David Anglin.

2001-03-10  Bruno Haible  <haible@clisp.cons.org>

	* localcharset.c (locale_charset): Allow wildcard syntax. Also resolve
	alias if codeset is empty.
	* config.charset (BeOS): Use wildcard syntax.

2001-03-13  Jim Meyering  <meyering@lucent.com>

	* path-concat.c (path_concat) [FILESYSTEM_ACCEPTS_DRIVE_LETTER_PREFIX]:
	Don't insert a backslash when concatenating e.g., `C:' and `foo'.
	From Bruno Haible.

2001-03-06  Bruno Haible  <haible@clisp.cons.org>

	* localcharset.c (locale_charset): Don't use setlocale(LC_CTYPE,NULL).
	Don't return NULL.
	* unicodeio.c (print_unicode_char): Simplify accordingly.

2001-03-06  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Update for FreeBSD 4.2 and OSF/1 5.1. Add
	support for DOS/DJGPP.

2001-02-28  Paul Eggert  <eggert@twinsun.com>

	* Makefile.am (libfetish_a_SOURCES):
	Add dup-safer.c, fopen-safer.c.
	(noinst_HEADERS): Add stdio-safer.h, unistd-safer.h.

	* dup-safer.c, fopen-safer.c, stdio-safer.h, unistd-safer.h: New files.

2001-02-25  Paul Eggert  <eggert@twinsun.com>

	The mkstemp replacement is taken from glibc 2.2.2, with some
	portability fixes for use outside glibc, as follows:

	* tempname.c (struct_stat64): New macro.
	(direxists, __gen_tempname): Use it.
	This avoids a portability problem with Solaris 8.

	* tempname.c (<config.h>): Include if HAVE_CONFIG_H.
	(<stddef.h>, <stdint.h>, <string.h>):
	Include only if STDC_HEADERS || _LIBC.
	(<fcntl.h>): Include only if HAVE_FCNTL_H || _LIBC.
	(<unistd.h>): Include only if HAVE_UNISTD_H || _LIBC.
	(<sys/time.h>): Include only if HAVE_SYS_TIME_H || _LIBC.
	(__set_errno): Define this macro if <errno.h> doesn't.
	(P_tmpdir, TMP_MAX, __GT_FILE, __GT_BIGFILE, __GT_DIR, __GT_NOCREATE):
	Define these macros if <stdio.h> doesn't.
	(S_ISDIR, S_IRUSR, S_IWUSR, S_IXUSR):
	Define these macros if <sys/stat.h>
	doesn't.  Ignore <sys/stat.h> S_ISDIR if STAT_MACROS_BROKEN.
	(stat64, __getpid, __gettimeofday, __mkdir, __open, __open64, lxstat64,
	__xstat64): Define if not _LIBC.
	(__secure_getenv): Define if ! (HAVE___SECURE_GETENV || _LIBC).
	(__gen_tempname): Invoke gettimeofday only if
	HAVE_GETTIMEOFDAY || _LIBC;
	otherwise, fall back on plain "time".
	Use macros like S_IRUSR | S_IWUSR rather than octal values like 0600.

	* mkstemp.c (__GT_FILE): Define to zero if not defined.

	* mkstemp.c, tempname.c: New files, taken from glibc 2.2.2.

2001-02-17  Jim Meyering  <meyering@lucent.com>

	* strtoul.c: Sync from GNU libc.  Use double quotes, not <...>
	around included file name.

	* strnlen.c (__strnlen): Merge in a change from GNU libc.

	* strftime.c: Update from GNU libc (the only changes were to comments).

2001-02-13  Bruno Haible  <haible@clisp.cons.org>

	* mbswidth.h (mbswidth): Also define as macro, to avoid prototype clash.

2001-02-17  Paul Eggert  <eggert@twinsun.com>

	* mbswidth.c, quotearg.c (mbrtowc, mbsinit):
	Remove workaround macros for hosts that have mbrtowc but not
	mbstate_t, as we now insist on proper declarations for both
	before using mbrtowc.

2001-02-17  Jim Meyering  <meyering@lucent.com>

	* regex.c: Update from libc.

2001-02-16  Paul Eggert  <eggert@twinsun.com>

	* alloca.c (malloc): Undef before defining, since stdlib.h
	may have defined it.  Needed for Encore Umax-3.0.9.16b systems.
	Reported by Mark Hounschell via Paul Eggert.

2001-01-30  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Update for FreeBSD 4.2.

2001-01-26  Jim Meyering  <meyering@lucent.com>

	* quotearg.c: Include stddef.h.
	* quote.c: Include stddef.h.
	Reported by Axel Kittenberger.

	* xmalloc.c [HAVE_DONE_WORKING_MALLOC_CHECK]: Enclose error-evoking
	line in double quotes so that it evokes a better diagnostic.
	[HAVE_DONE_WORKING_REALLOC_CHECK]: Likewise.
	Reported by Axel Kittenberger.

2001-01-15  Bruno Haible  <haible@clisp.cons.org>

	* unicodeio.c (print_unicode_char): Cast the second iconv() arg,
	to avoid a warning.  Add back 'const' to inptr.

2001-01-16  Jim Meyering  <meyering@lucent.com>

	* basename.c: Include <stdio.h>, needed by assert on SunOS 4.
	From Bruno Haible.

2001-01-14  Jim Meyering  <meyering@lucent.com>

	* rename.c: New file.  From Volker Borchert.
	Include stdlib.h, string.h or strings.h, and xalloc.h.
	Use strip_trailing_slashes rather than open-coding it.

2001-01-03  Paul Eggert  <eggert@twinsun.com>

	* strftime.c: Sync with glibc time/strftime.c 1.81.

2001-01-03  Jim Meyering  <meyering@lucent.com>

	* unicodeio.c (print_unicode_char): Remove `const' from declaration of
	local `inptr' to avoid warning with some system declarations of iconv.

2000-12-29  Paul Eggert  <eggert@twinsun.com>

	* modechange.c: Do not assume that mode_t uses the
	traditional octal encoding.  E.g. "chmod 1 FOO" should set
	the other-execute bit of FOO even if S_IXOTH != 1.

	(SUID, SGID, SVTX, RUSR, WUSR, XUSR, RGRP, WGRP, XGRP, ROTH,
	WOTH, XOTH, ALLM): New macros.
	(S_ISUID, S_ISGID, S_ISVTX, S_IRUSR, S_IWUSR, S_IXUSR,
	 S_IRGRP, S_IWGRP, S_IXGRP, S_IROTH, S_IWOTH, S_IXOTH):
	Use them.
	(S_ISGID): Fix typo; it was defaulting to the same value as S_ISUID.
	(S_IRWXU, S_IRWXG, S_IRWXO): Specify defaults in terms of the above.
	(mode_compile):
	No need to use uintmax_t; unsigned long is long enough.
	Don't bother to get suffix since we don't use it.

2000-12-24  Jim Meyering  <meyering@lucent.com>

	* hash.c (is_prime): Return explicit boolean values.
	(hash_get_first): Return NULL to appease Irix5.6's 89.
	Reported by Nelson Beebe.

2000-10-31  Bruno Haible  <haible@clisp.cons.org>

	* localcharset.c (locale_charset): Add support for Win32.

2000-12-18  Paul Eggert  <eggert@twinsun.com>

	* physmem.h, physmem.c: New files.

	* Makefile.am (libfetish_a_SOURCES): Add physmem.c.
	(noinst_HEADERS): Add physmem.h.

	* xstrtol.c (__xstrtol): Add undocumented suffixes 'g' and
	't' for compatibility with Solaris 8 sort.

2000-12-18  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Add support for BeOS.

2000-12-16  Jim Meyering  <meyering@lucent.com>

	* getusershell.c [!SHELLS_FILE && __DJGPP__]: Define
	SHELLS_FILE to a file name that's useful on djgpp systems.
	Include stdlib.h.
	(ADDITIONAL_DEFAULT_SHELLS): Define.
	(default_shells): Prepend ADDITIONAL_DEFAULT_SHELLS.
	Based mostly on a patch from Prashant TR.

2000-12-16  Jim Meyering  <meyering@lucent.com>

	This bug had a serious impact on chown: `chown N:M FILE' (for integer
	N and M) would have treated it like `chown N:N FILE'.

	* userspec.c (parse_user_spec): Fix typo: s/u/g/.

2000-10-31  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Add ISO-8859-3, BIG5HKSCS, GB18030, JOHAB, VISCII,
	CP874, CP949, CP950, CP1250, CP1253, CP1254, CP1255, CP1256, CP1257
	to the list of canonical encodings. Rename EUC-CN to GB2312.

2000-12-08  Andreas Schwab  <schwab@suse.de>

	* mbswidth.c (mbsnwidth): Don't loop endlessly when called with an
	invalid mulitbyte sequence and with the MBSW_ACCEPT_INVALID flag set.

2000-12-07  Jim Meyering  <meyering@lucent.com>

	* stripslash.c (ISSLASH): Define.
	(strip_trailing_slashes): Use ISSLASH rather than comparing against `/'.
	From Prashant TR.

	* dirname.c (FILESYSTEM_PREFIX_LEN): Define.
	(dir_name_r): Declare this function as static.
	[BACKSLASH_IS_PATH_SEPARATOR]: Fix a bug that'd
	manifest itself on a name containing a mix of slashes and
	backslashes.
	Make this function work with names starting with a DOS-style
	drive letter and colon prefix.
	(dir_name): Append `.' if necessary.
	Based mostly on patches from Prashant TR and Eli Zaretskii.

	* dirname.h (dir_name_r): Remove prototype.

2000-12-05  Jim Meyering  <meyering@lucent.com>

	* dirname.c (dir_name_r): Add `const' in a few local declarations.

2000-12-04  Jim Meyering  <meyering@lucent.com>

	* path-concat.c: [!HAVE_DECL_MALLOC]: Declare malloc.
	Also include memory.h, stdlib.h, unistd.h if appropriate.
	Reported by Andreas Jaeger (conflicting declaration of malloc).

2000-12-02  Jim Meyering  <meyering@lucent.com>

	* closeout.h: Make idempotent, to avoid some obscure warnings.

2000-12-01  Paul Eggert  <eggert@twinsun.com>

	* memrchr.c: Include <config.h> before any system include file.

2000-11-29  Paul Eggert  <eggert@twinsun.com>

	* dirname.c (dir_name_r): Fix typo: int -> size_t.

2000-11-26  Jim Meyering  <meyering@lucent.com>

	* memcoll.c: Include sys/types.h.  From Werner Almesberger.

2000-11-22  Paul Eggert  <eggert@twinsun.com>

	* strftime.c (my_strftime): Do not invoke mbrlen with a
	size of (size_t) -1; it's not portable.

2000-11-17  Akim Demaille  <akim@epita.fr>

	* obstack.h: Formatting changes.
	(obstack_grow, obstack_grow0): Don't cast WHERE at all: that would
	prevent type checking.
	(obstack_ptr_grow, obstack_ptr_grow_fast): When assigning, don't
	cast the value to (void *): assigning a `foo *' to a `void *'
	variable is valid.
	(obstack_int_grow, obstack_int_grow_fast): Don't cast AINT to int.

2000-11-17  Jim Meyering  <meyering@lucent.com>

	* strstr.c: Update from GNU libc.

2000-11-16  Jim Meyering  <meyering@lucent.com>

	* strverscmp.c: Incorporate weak-alias-related changes from glibc.

2000-11-11  Jim Meyering  <meyering@lucent.com>

	* error.c: Add a couple #includes, merging from GNU libc version.

2000-11-10  Jim Meyering  <meyering@lucent.com>

	* obstack.h: Update from GNU libc.
	* obstack.c: Likewise.

2000-11-06  Paul Eggert  <eggert@twinsun.com>

	* getusershell.c (setusershell): Use rewind rather than
	fseek/fseeko, to avoid configuration hassles with fseeko.
	Don't bother opening SHELLS_FILE if shellstream is NULL;
	it's not necessary.

2000-11-05  Jim Meyering  <meyering@lucent.com>

	* makepath.h (make_dir): Declare.
	* makepath.c (make_dir): Remove `static' attribute.
	Tweak a comment.

2000-11-04  Alexandre Duret-Lutz  <duret_g@epita.fr>

	* hash.c (hash_get_next): Fix a thinko:  when ENTRY is the
	last one in a bucket, advance to the next bucket.

2000-11-02  Vesselin Atanasov  <vesselin@bgnet.bg>

	* fnmatch.c: Do not comment out all the code if we are using
	the GNU C library, because in some cases we are replacing buggy
	code in the GNU C library itself.

2000-10-30  Paul Eggert  <eggert@twinsun.com>

	* error.h, getline.h, modechange.h:
	Remove "2000" from Copyright line, as the file hasn't been
	changed this year other than in the copyright notice.

	* xalloc.h: Add "2000" to Copyright line, as this file
	was changed this year.

2000-10-30  Paul Eggert  <eggert@twinsun.com>

	* fnmatch.c (FOLD): Do not assume that characters are unsigned.
	(fnmatch): Fix some FNM_FILE_NAME and FNM_LEADING_DIR bugs,
	e.g. fnmatch("d*/*1", "d/s/1", FNM_FILE_NAME) incorrectly yielded zero.

2000-10-29  Greg Louis  <glouis@dynamicro.on.ca>

	* regex.h (__restrict_arr): Move definition out of #ifndef block.
	Required because egcs-2.91.66 (aka 1.1.2) defines __restrict, but
	doesn't define __restrict_arr.

2000-10-29  Jim Meyering  <meyering@lucent.com>

	* xstat.in: Fix grammar in comment.

2000-10-28  Jim Meyering  <meyering@lucent.com>

	* memchr.c: Update from libc.
	Adjust for portability:
	[HAVE_STDLIB_H]: Include stdlib.h.
	[HAVE_BP_SYM_H || _LIBC]: Guard inclusion of bp-sym.h.
	Undef __memchr, too.
	[!weak_alias]: Define __memchr to memchr.

	* regex.c: Update from libc.
	* regex.h: Likewise.
	* getopt1.c: Likewise.
	* memcmp.c: Likewise.

	* getusershell.c (setusershell) [HAVE_FSEEKO]: Use fseeko.
	Avoid using fseek, when possible -- it's broken by design.
	Patch by Ulrich Drepper.

2000-10-26  Jim Meyering  <meyering@lucent.com>

	* strftime.c: Update from libc.

2000-10-25  Jim Meyering  <meyering@lucent.com>

	* obstack.c: Update from libc.

2000-10-23  Jim Meyering  <meyering@lucent.com>

	* hard-locale.c (hard_locale): Revert last change -- it was simply
	wrong.  That set_locale call must not have any side effects.
	From Paul Eggert.

2000-10-22  Jim Meyering  <meyering@lucent.com>

	* md5.c (md5_process_block) [OP]: Use `rol', not CYCLIC.
	[CYCLIC]: Remove now-unused definition.

	* save-cwd.c (O_DIRECTORY): Define, if needed.
	(save_cwd) [HAVE_FCHDIR]: Use O_DIRECTORY when opening ".".
	Suggestion from Ulrich Drepper.

2000-10-21  Jim Meyering  <meyering@lucent.com>

	* dirname.c (dir_name_r): New function, factored out of dir_name.
	(dir_name): Use dir_name_r.
	* dirname.h (dir_name_r): Declare it.

2000-10-21  Jim Meyering  <meyering@lucent.com>

	* dirname.c (memrchr): Declare if necessary.
	(dir_name): Remove the restriction that there be no
	trailing slashes.  Now, this code skips past them, effectively
	ignoring them.
	[TEST_DIRNAME] (main): New unit tests.

	* memrchr.c: New file from GNU libc.
	Undef __memrchr, too.
	[!weak_alias]: Define __memrchr to memrchr.
	Guard weak_alias use with `#ifdef weak_alias'.

2000-10-17  Jim Meyering  <meyering@lucent.com>

	* quote.h (PARAMS): Define and use.
	Reported by Akim Demaille.

	* getopt.c: Update from libc.

2000-10-16  Jim Meyering  <meyering@lucent.com>

	* hard-locale.c (hard_locale): Use "", not 0 as 2nd arg to setlocale.
	From Jan Fedak.

2000-09-25  Jim Meyering  <meyering@lucent.com>

	* md5.h (rol): Define (from GnuPG).

	* sha.c: Give credit (GnuPG) where due.
	(M): Use rol rather than open-coding it.
	Add a FIXME comment.

2000-09-21  Jim Meyering  <meyering@lucent.com>

	* userspec.c (parse_user_spec): Remove debugging printf I'd added.
	Reported by Michael Stone.

2000-09-20  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (libfetish_a_SOURCES): Add sha.c.
	(noinst_HEADERS): Add sha.h.
	Based on code from Scott G. Miller and from GnuPG.

2000-09-15  Jim Meyering  <meyering@lucent.com>

	* regex.c: Update from libc.

2000-09-10  Jim Meyering  <meyering@lucent.com>

	* getopt.c (_getopt_internal): Update from glibc.

2000-09-09  Jim Meyering  <meyering@lucent.com>

	* quotearg.c: Rename ISASCII to IN_CTYPE_DOMAIN, so people don't
	think it should be used as a general replacement for isascii.
	* fnmatch.c: Likewise.
	* mbswidth.c: Likewise
	* regex.c: Likewise.

	Don't use atoi.
	* userspec.c: Include sys/param.h and limits.h.
	Include xstrtol.h.
	(CHAR_BIT, TYPE_SIGNED, TYPE_MINIMUM, TYPE_MAXIMUM): Define.
	(UID_T_MAX, GID_T_MAX, MAXUID, MAXGID): Define.
	(parse_user_spec): Use xstrtoul, not atoi when converting numeric
	UID, GID.  Check range.

2000-09-06  Jim Meyering  <meyering@lucent.com>

	* getopt.c (_getopt_internal): Update from glibc.

2000-08-30  Jim Meyering  <meyering@lucent.com>

	* strftime.c: Merge in changes from GNU libc.

2000-08-26  Jim Meyering  <meyering@lucent.com>

	* closeout.c: Include "__fpending.h".
	(close_stdout_status): Return right away if there's nothing to flush.

	* Makefile.am (noinst_HEADERS): Add __fpending.h.
	* __fpending.c: New file.
	* __fpending.h: New file.

2000-08-07  Paul Eggert  <eggert@twinsun.com>

	Standardize on "memory exhausted" instead of "Memory exhausted"
	or "virtual memory exhausted".
	* obstack.c (print_and_abort): Use "memory exhausted", not
	"virtual memory exhausted".
	* same.c (same_name): Invoke xalloc_die instead of printing
	our own message.
	* userspec.c (parse_user_spec): Likewise.
	* bumpalloc.h: comment fix
	* same.c, userspec.c: Include xalloc.h.

	* xalloc.h (xalloc_msg_memory_exhausted): Now char const[],
	not char *const and pointing to a constant array.
	* xmalloc.c (xalloc_msg_memory_exhausted): Likewise.
	(xrealloc): Comment fix.

	* userspec.c (parse_user_spec):
	Don't translate a message until just before returning,
	to avoid unnecessary translation.

2000-08-07  Jim Meyering  <meyering@lucent.com>

	* addext.c, argmatch.c, argmatch.h, backupfile.h, bumpalloc.h,
	chown.c, diacrit.h, dirname.h, dup2.c, exclude.h, fileblocks.c,
	fnmatch.c, fnmatch.h, fsusage.c, fsusage.h, getdate.h,
	getgroups.c, gethostname.c, getopt.h, group-member.c,
	hard-locale.c, hash.h, isdir.c, lchown.c, linebuffer.c,
	linebuffer.h, long-options.h, malloc.c, md5.c, md5.h, memchr.c,
	memcmp.c, memcoll.c, memset.c, mktime.c, modechange.h, obstack.h,
	pathmax.h, realloc.c, rmdir.c, safe-read.c, save-cwd.c, stime.c,
	stpcpy.c, strcasecmp.c, strcspn.c, strdup.c, stripslash.c,
	strstr.c, strtod.c, strtol.c, strtoul.c, strtoull.c, strtoumax.c,
	utime.c, version-etc.h, xalloc.h, xstrdup.c, xstrtoumax.c,
	yesno.c: Back out Copyright date changes for each file with no change
	this year.  This eases coordination with other programs using the same
	source code modules.  From Paul Eggert.

2000-08-03  Greg McGary  <greg@mcgary.org>

	* regex.c (SET_HIGH_BOUND, MOVE_BUFFER_POINTER,
	ELSE_EXTEND_BUFFER_HIGH_BOUND): New macros.
	(EXTEND_BUFFER): Use them.

2000-08-01  Jim Meyering  <meyering@lucent.com>

	* dirname.c (ISSLASH): Define.
	(BACKSLASH_IS_PATH_SEPARATOR): Define.
	(dir_name) [BACKSLASH_IS_PATH_SEPARATOR]: Handle the case in which
	both `\' and `/' may be use as path separators.
	Based on a patch from Prashant TR.

2000-07-31  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c (quotearg_n_options): Don't make the initial
	slot vector a constant, since it might get modified.

2000-07-31  Jim Meyering  <meyering@lucent.com>

	* xmalloc.c: Use `virtual memory exhausted', not `Memory exhausted'.
	* obstack.c (print_and_abort): Likewise.

2000-07-30  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c (quotearg_n_options): Preallocate a slot 0
	buffer, so that the caller can always quote one small
	component of a "memory exhausted" message in slot 0.
	From a suggestion by Jim Meyering.

2000-07-30  Jim Meyering  <meyering@lucent.com>

	* makepath.c (make_path): Quote the other instance, too.

	* quotearg.c (N_STATIC_SLOTVECS): Define.
	(STATIC_BUF_SIZE): Define.
	(quotearg_n_options): Use only statically allocated storage when
	N < N_STATIC_SLOTVECS and the length of the quoted result is smaller
	than STATIC_BUF_SIZE.

2000-07-29  Jim Meyering  <meyering@lucent.com>

	* diacrit.c (diacrit_diac): Use __MSDOS__ in favor of MSDOS.
	* dirname.c (dir_name): Likewise.

	* basename.c (base_name): Use ISSLASH rather than comparing against `/'.

	* dirname.c (dir_name) [MSDOS]: Declare `lim' to be const.
	(dir_name): Assert that there are no trailing slashes.

2000-07-18  Bruno Haible  <haible@clisp.cons.org>

	* mbswidth.h (mbswidth): Add a flags argument.
	(mbswidth): New declaration.
	(MBSW_ACCEPT_INVALID, MBSW_ACCEPT_UNPRINTABLE): New macros.
	* mbswidth.c (mbswidth): Add a flags argument.
	(mbsnwidth): New function.

2000-07-24  Jim Meyering  <meyering@lucent.com>

	* mbswidth.c: Remove useless #else.  From Bruno Haible.

2000-07-23  Paul Eggert  <eggert@twinsun.com>

	* mbswidth.c (_XOPEN_SOURCE):
	Don't define; this causes problems on Solaris 7.
	(wcwidth) [!HAVE_DECL_WCWIDTH]: Declare.

2000-07-23  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c:
	Include <wchar.h> even if ! (HAVE_MBRTOWC && 1 < MB_LEN_MAX),
	so that mbstate_t is always defined.

	Do not inspect MB_LEN_MAX, since it's incorrectly defined to
	be 1 in at least one GCC installation, and this configuration
	error is likely to be common.  Ignoring MB_LEN_MAX hurts
	performance on hosts that have mbrtowc but have only unibyte
	locales, but I assume these hosts are rare.

2000-07-23  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c: Streamline by invoking multibyte code only if needed.
	<wchar.h>: Include only if HAVE_MBRTOWC && 1 < MB_LEN_MAX.
	(MB_CUR_MAX): Redefine to 1 if ! (HAVE_MBRTOWC && 1 < MB_LEN_MAX).
	(quotearg_buffer_restyled): If a unibyte locale, don't bother to
	invoke multibyte primitives.

2000-07-23  Jim Meyering  <meyering@lucent.com>

	* basename.c (base_name): Add an assertion.

2000-07-15  Bruno Haible  <clisp.cons.org>

	* quotearg.c: When the system forces us to redefine mbstate_t,
	shadow its mbsinit function.

2000-07-16  Bruno Haible  <haible@clisp.cons.org>

	* mbswidth.h: New file.
	* mbswidth.c: New file.
	* Makefile.am (libfetish_a_SOURCES): Add mbswidth.c.
	(noinst_HEADERS): Add mbswidth.h.

2000-07-17  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Add support for FreeBSD. Improve support for HP-UX
	and IRIX 6.

2000-07-15  Jim Meyering  <meyering@lucent.com>

	* makepath.c: Include quote.h.
	(make_path): Convert "`%s'" in format strings to "%s", and wrap each
	corresponding argument in a `quote (...)' call.
	Give better diagnostics.

	* Makefile.am (libfetish_a_SOURCES): Add quote.c.
	(noinst_HEADERS): Add quote.h.

	* quote.c (quote, quote_n): New file.  Two functions taken verbatim
	from tar's src/misc.c.
	* quote.h: New file.  Prototypes for same.

2000-07-10  Paul Eggert  <eggert@twinsun.com>

	From a suggestion by Bruno Haible.
	* quotearg.c (mbrtowc): Do not use HAVE_WCHAR_H in the definition.
	Use defined mbstate_t, not HAVE_MBSTATE_T_OBJECT,
	to decide whether to define the BeOS workaround macro;
	this adjusts to the change to AC_MBSTATE_T.

2000-07-13  Paul Eggert  <eggert@twinsun.com>

	* quotearg.h (enum quoting style): New enum clocale_quoting_style.

	* quotearg.c (quoting_style_args, quoting_style_vals,
	quotearg_buffer_restyled): Add support for
	clocale_quoting_style.  Undo previous change to
	locale_quoting_style behavior, and undo the "{LEFT QUOTATION MARK}"
	and "{RIGHT QUOTATION MARK}" msgids.

2000-07-05  Paul Eggert  <eggert@twinsun.com>

	The old behavior of quoting `like this' doesn't look good with
	newer, ISO-style fonts.  See:
	http://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html

	Instead, quote "like this" by default.  Let the translator
	tailor the locale-specific quoting behavior by providing
	translations for {LEFT QUOTATION MARK} and {RIGHT QUOTATION MARK}.

	* quotearg.c (N_): New macro.
	(gettext_default): New function.
	(quotearg_buffer_restyled): Use
	gettext_default ("{LEFT QUOTATION MARK}", "\"") for left quote, and
	gettext_default ("{RIGHT QUOTATION MARK}", "\"") for right quote.

2000-07-09  Jim Meyering  <meyering@lucent.com>

	* Most files: Update copyright dates to include 2000.

2000-07-08  Jim Meyering  <meyering@lucent.com>

	* xgethostname.c (ENAMETOOLONG): Define to an unlikely value
	if not defined.
	(xgethostname): Remove now-unnecessary #ifdef.
	Move declaration of `err' into loop where it's used.

2000-07-05  Bruno Haible  <haible@clisp.cons.org>

	* xgethostname.c (xgethostname): Protect against the SunOS 5.5 bug
	by allocating a larger buffer. Test the gethostname return value for
	being >= 0, not == 0, for BeOS.  Don't exhaust memory if gethostname
	returns an error and ENAMETOOLONG isn't defined.

2000-07-05  Paul Eggert  <eggert@twinsun.com>
	and Bruno Haible  <haible@clisp.cons.org>

	* quotearg.c (mbrtowc): Declare returned type, since BeOS doesn't.

2000-07-05  Bruno Haible  <haible@clisp.cons.org>

	* quotearg.c (struct quoting_options): Simplify quote_these_too
	dimension.

2000-07-03  Jim Meyering  <meyering@lucent.com>

	* strndup.c: [!HAVE_DECL_STRNLEN]: Declare strnlen.
	Reported by Bruno Haible.

2000-07-04  Jim Meyering  <meyering@lucent.com>

	* quotearg.c: Make inclusion of <wchar.h> independent of whether
	HAVE_MBRTOWC is set.  Required at least for irix-5.6, which
	lacks mbrtowc.

2000-07-03  Paul Eggert  <eggert@twinsun.com>
	and Bruno Haible  <haible@clisp.cons.org>

	* quotearg.c (mbrtowc):
	Assign to *pwc, and return 1 only if result is nonzero.
	(iswprint): Use ISPRINT when substituting our own mbrtowc.

2000-07-03  Jim Meyering  <meyering@lucent.com>

	* readutmp.h: [HAVE_UTMPX_H]: Include <utmp.h> if HAVE_UTMP_H.
	This is necessary to get a definition of e.g., UTMP_FILE on HP-UX 10.20.
	From Bob Proulx.

2000-07-02  Jim Meyering  <meyering@lucent.com>

	* quotearg.c (mbstate_t): Don't define here.

2000-07-02  Jim Meyering  <meyering@lucent.com>

	* nanosleep.c (SIGCONT): Define if not already defined.

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* mountlist.c: Use MOUNTED_FS_STAT_DEV instead of MOUNTED_NEXT_DEV,
	per change in ../m4/ls-mntd-fs.m4.
	(read_filesystem_list): Ignore symbolic links.

2000-06-29  Jim Meyering  <meyering@lucent.com>

	* same.c: Include <string.h> or <strings.h>, as appropriate,
	for declaration of strcmp.

	* long-options.c: Include <stdlib.h>, for declaration of exit.

	* mountlist.c (fsp_to_string) [HAVE_F_FSTYPENAME_IN_STATFS]:
	Avoid warning by casting result to `char *' to remove `const'.

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* Makefile.am (libfetish_a_SOURCES): Remove readutmp.c.

2000-06-26  Paul Eggert  <eggert@twinsun.com>

	savedir now sets errno on failure and invokes xmalloc to get memory.
	Fix a couple of other minor bugs while we're at it.

	* savedir.c (<unistd.h>): Do not include; there's no need.
	(NAMLEN): Remove macro.
	(malloc, realloc): Remove decls.
	(stpcpy): Likewise.
	("xalloc.h"): Include.
	(NAME_SIZE_DEFAULT): New macro.
	(savedir): Use xmalloc / xrealloc to allocate memory.
	Use NAME_SIZE_DEFAULT if name_size is negative or overflows to zero.
	Skip "" directory entries.
	Use strlen to calculate directory entry length, since the old method
	is rarely used these days and isn't worth supporting.
	Don't use a pointer after freeing it.
	Check for integer overflow when calculating allocation size.
	Use memcpy to copy entries, instead of stpcpy.
	Set errno properly when returning NULL.
	Check for readdir error.

2000-06-26  Jim Meyering  <meyering@lucent.com>

	* posixtm.c [HAVE_STDLIB_H]: Include stdlib.h, for decl of abort.

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* getusershell.c (xmalloc, xrealloc): Remove functions.
	Include xalloc.h.
	Don't include <stdlib.h>.  Don't declare malloc, realloc.

2000-06-23  Bruno Haible  <haible@clisp.cons.org>

	* unicodeio.c (print_unicode_char): Work around ansi2knr deficiency.

2000-06-24  Jim Meyering  <meyering@lucent.com>

	* error.c [!HAVE_DECL_STRERROR_R]: Declare strerror_r.

2000-06-21  Jim Meyering  <meyering@lucent.com>

	* getpass.c: New file, from Bruno Haible.  Required for BeOS.

2000-06-19  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c: Include <wctype.h> after <wchar.h>, for Solaris 2.5.
	(mbrtowc, mbstate_t): Define substitutes if
	HAVE_MBRTOWC && HAVE_WCHAR_H && !HAVE_MBSTATE_T_OBJECT.
	(iswprint): Define to 1 if !defined iswprint && !HAVE_ISWPRINT,
	not if ! (HAVE_MBRTOWC && HAVE_WCHAR_H).

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* xgetcwd.c (xgetcwd): If the required pathname length is smaller
	than 1024, return a memory chunk of least possible size, instead
	of size PATH_MAX + 2. In the loop, increment the size proportionally.
	Use free/xmalloc instead of xrealloc to avoid copying for very long
	paths.

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* canon-host.c (canon_host): Use malloc and memcpy to copy an
	address, not strdup.  Include <stdlib.h> and don't declare free().

2000-06-17  Bruno Haible  <haible@clisp.cons.org>

	* path-concat.c (path_concat): Don't access dir[-1] if dir is
	the empty string.

2000-06-21  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (libfetish_a_SOURCES): Add getstr.c.
	(noinst_HEADERS): Add getstr.h.

	* getline.c (getstr): Move into a separate file.
	* getstr.c (getstr): New file, extracted from getline.c, with
	the following changes: new parameter, delim2; both delim[12]
	parameters have type `int', not `char'.  The latter would lose
	with 8-bit delimiters.
	* getstr.h: New file.

2000-06-19  Jim Meyering  <meyering@lucent.com>

	* getloadavg.c [HAVE_NLIST_H] (NLIST_STRUCT): Define.

2000-06-18  Jim Meyering  <meyering@lucent.com>

	* mkdir.c: Remove file, due mainly to copyright incompatibility.
	Besides, these days every porting target provides a mkdir function.

	* strnlen.c: Include memory.h, string.h, and/or strings.h as needed.
	(this snippet comes from src/system.h).

2000-06-15  Paul Eggert  <eggert@twinsun.com>

	* human.c (adjust_value): New function.
	(human_readable_inexact): Apply rounding style even when
	printing approximate values.

2000-06-14  Paul Eggert  <eggert@twinsun.com>

	* human.c (human_readable_inexact): Allow an input block
	size that is not a multiple of the output block size, and vice versa.
	Reported by Piergiorgio Sartor.

2000-06-14  Paul Eggert  <eggert@twinsun.com>

	* getdate.y (get_date): Apply relative times after time
	zone indicator, not before.  Reported by Todd A. Jacobs.

2000-06-13  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (all-local): Depend on lstat.c and stat.c.

	* xstat.in [!HAVE_DECL_FREE]: Declare free in lstat.c.

2000-06-12  Paul Eggert  <eggert@twinsun.com>

	* xstat.in: Include <stdlib.h> in lstat, to declare "free".

2000-06-04  Paul Eggert  <eggert@twinsun.com>

	* strnlen.c: Include <config.h> if HAVE_CONFIG_H.

2000-06-04  Jim Meyering  <meyering@lucent.com>

	* getugroups.c (getugroups): Cast -1 to gid_t, for systems like
	SunOS 4.1.4 for which gid_t is an unsigned type.

2000-06-03  Jim Meyering  <meyering@lucent.com>

	* strnlen.c [!HAVE_DECL_MEMCHR]: Declare memchr.

2000-05-26  Bruno Haible  <haible@clisp.cons.org>

	* Makefile.am (install-exec-local): On systems with glibc-2.1 or
	newer, don't install charset.alias.
	* config.charset: Change the Linux/glibc rules so they become empty
	on glibc-2.1 or newer.

2000-06-02  Jim Meyering  <meyering@lucent.com>

	* mountlist.c: Back out last change.  Instead, do this...
	* mountlist.c (read_filesystem_list) [MOUNTED_VMOUNT]: Set the me_dummy
	member using the same `ignore'-testing code.
	* mountlist.h (ME_DUMMY): Add `autofs' to the list of ignored
	fs_type strings.
	From Mark D. Roth.

2000-05-29  Jim Meyering  <meyering@lucent.com>

	* mountlist.c (read_filesystem_list) [MOUNTED_VMOUNT]: Ignore mounts
	with the `ignore' attribute.  Based on a patch from Mark D. Roth.

2000-05-22  Jim Meyering  <meyering@lucent.com>

	* makepath.c: Remove old, now-unnecessary `#ifdef __MSDOS__' block.

2000-05-18  Jim Meyering  <meyering@lucent.com>

	* hash.c (hash_rehash): Fix a nasty bug: copy the free entry list
	back, too, since it may have been modified by allocate_entry.
	(hash_delete): Rewrite to use neither the assignment operator
	nor the comma operator in an if-expression.

2000-05-15  Paul Eggert  <eggert@twinsun.com>

	* closeout.c:
	<sys/stat.h>, <sys/types.h>, <unistd.h>, (STDOUT_FILENO):
	Remove; no longer needed.
	"quotearg.h": Add include.
	(file_name): Do not bother to explicitly initialize to NULL; it's less
	efficient on some hosts.
	(close_stdout_status): Remove test as to whether stdout was already
	closed; it breaks for the case "echo x | sort >&-".
	Quote file name colons.
	Do not assume that _("write error") lacks format strings.

2000-05-15  Jim Meyering  <meyering@lucent.com>

	* version-etc.c (version_etc_copyright): Update the copyright string
	used in all --version output.

2000-05-14  Jim Meyering  <meyering@lucent.com>

	* closeout.c (close_stdout_set_file_name): New function.
	(close_stdout_status): Use new file-scoped global.
	Return right away if fstat says the stdout file descriptor is invalid.
	* closeout.h (close_stdout_set_file_name): Declare.

2000-05-10  Jim Meyering  <meyering@lucent.com>

	* closeout.c [default_exit_status]: New file-scoped variable.
	(close_stdout_set_status): New function.
	* closeout.h (close_stdout_set_status): Declare.

2000-05-08  Jim Meyering  <meyering@lucent.com>

	* long-options.c: Don't include closeout.h.
	(parse_long_options): Don't call close_stdout for --version.

2000-05-06  Jim Meyering  <meyering@lucent.com>

	* strnlen.c: Undefine __strnlen and strnlen.
	[!weak_alias]: Define __strnlen to strnlen.

	* atexit.c: New file, from libiberty.

2000-05-06  Jim Meyering  <meyering@lucent.com>

	* closeout.c (close_stdout_status): Also check for errors on the
	stderr stream.

2000-05-05  Bruno Haible  <haible@clisp.cons.org>

	* localcharset.c (get_charset_aliases): Use malloc, realloc and memcpy
	instead of xmalloc, xrealloc, path_concat.
	(locale_charset): Treat empty environment variables as absent.
	(DIRECTORY_SEPARATOR, ISSLASH): New macros.

2000-05-04  Jim Meyering  <meyering@lucent.com>

	* getopt.c: Update from glibc.
	* obstack.c: Likewise.
	* obstack.h: Likewise.
	* regex.c: Likewise.  NB: K&R compiler support is dropped for this file

	* regex.h: Likewise.
	* strndup.c: Likewise.
	* strnlen.c: New file, from glibc.

2000-05-01  Jim Meyering  <meyering@lucent.com>

	* full-write.c (full_write): Remove `FIXME' part of comment.

2000-04-29  Jim Meyering  <meyering@lucent.com>

	* path-concat.c: Declare strdup only if it's not defined.
	* canon-host.c: Likewise.

2000-04-28  Jim Meyering  <meyering@lucent.com>

	* rpmatch.c [HAVE_LIMITS_H]: Include limits.h before regex.h to avoid
	redefinition warning on some systems (HPUX).  Otherwise, regex.h is
	included first, then limits.h is included by locale.h by libintl.h.
	From John David Anglin.

2000-04-25  Jim Meyering  <meyering@lucent.com>

	* makepath.c (S_IRWXUGO): Define.
	(make_path): Always perform explicit chmod if MODE specifies any
	of the `special' permission bits.  Prompted by a bug report against
	install from Mate Wierdl and Joost van Baal.

2000-04-18  Jim Meyering  <meyering@lucent.com>

	* README: New file.

	* getpagesize.h [!getpagesize && HAVE_OS_H && B_PAGE_SIZE]: Define
	getpagesize.  For BeOS.  Based on a patch from Bruno Haible.

2000-04-17  Jim Meyering  <meyering@lucent.com>

	* strftime.c (my_strftime) [strftime]: Declare strftime here, since
	the definition of it to rpl_strftime also defined-away the system's
	declaration.

2000-04-15  Jim Meyering  <meyering@lucent.com>

	Use `C' to denote so-called `contiguous' files, the same way
	that tar does.
	* filemode.c (S_ISCTG) [!S_ISCTG && S_IFCTG]: Define.
	(ftypelet): Use S_ISCTG.
	From Michael Deutschmann.

2000-04-14  Jim Meyering  <meyering@lucent.com>

	* strftime.c (my_strftime) [#ifdef strftime]: Declare strftime.

2000-04-08  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (charset.alias): Use t-$@, not $@-t so the DOS 8.3
	names don't conflict.  Reported by Eli Zaretskii.

2000-03-28  Bruno Haible  <haible@clisp.cons.org>

	* unicodeio.c (print_unicode_char): Avoid triggering Solaris iconv
	bug.  Deal with the different error behavior of Irix iconv.

2000-04-07  Jim Meyering  <meyering@lucent.com>

	* putenv.c: Move inclusion of errno.h so it follows that of sys/types.h,
	to work around system header problems on AIX 3.2.5.  From Bruno Haible.

2000-04-05  Jim Meyering  <meyering@lucent.com>

	Portability tweaks required for ultrix4.3.
	* readutmp.h [HAVE_UTMPX_H && !HAVE_DECL_GETUTENT]: Declare getutent.
	* readutmp.c: Include sys/types.h before sys/stat.h.
	* canon-host.c: Declare strdup.
	* path-concat.c: Likewise.
	From John David Anglin.

2000-04-04  Jim Meyering  <meyering@lucent.com>

	Be more DOS 8.3-friendly.
	* ref-add.sin: Renamed from ref-add.sed.in.
	* ref-del.sin: Renamed from ref-del.sed.in.
	* Makefile.am: Reflect renaming.
	Reported by Eli Zaretskii.

	Use a temporary file name that won't clash with `charset.alias'
	in the DOS 8.3 name space.
	* Makefile.am (charset_tmp): Define.
	(install-exec-local): Use $(charset_tmp) instead of $(charset_alias)-t.
	(uninstall-local): Likewise.
	Reported by Eli Zaretskii.

2000-03-29  Paul Eggert  <eggert@twinsun.com>

	* time/strftime.c (my_strftime): Make sure we call the system
	strftime, not ourselves, when invoking the underlying strftime.

2000-03-24  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (EXTRA_DIST): Add ref-add.sed.in and ref-del.sed.in.
	(charset_alias): Define.
	(install-exec-local): Factor out common code.
	(uninstall-local): Split lines longer than 80.
	(ref-add.sed, ref-del.sed): Remove rules... (do the following instead)
	(SUFFIXES): Define.
	(.sed.in.sed): New rule.  Don't redirect directly to $@.
	(CLEANFILES): Add ref-add.sed and ref-del.sed.

2000-03-19  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: Output a line containing "Packages using this file".
	* ref-add.sed.in, ref-del.sed.in: New files.
	* Makefile.am (install-exec-local, uninstall-local, ref-add.sed,
	ref-del.sed): New rules.

2000-03-17  Jim Meyering  <meyering@lucent.com>

	* unicodeio.c (<string.h>): Include only #if HAVE_STRING_H.
	Otherwise, include <strings.h>

2000-03-17  Bruno Haible  <haible@clisp.cons.org>

	* unicodeio.c (utf8_wctomb): New function.
	(print_unicode_char): Pass the Unicode character to iconv in UTF-8
	format instead of in UCS-4 with platform dependent endianness.

2000-03-07  Paul Eggert  <eggert@twinsun.com>

	* savedir.c (savedir): Work even if directory size is
	negative; this can happen with some screwy NFS configurations.

2000-03-06  Jim Meyering  <meyering@lucent.com>

	* localcharset.c (get_charset_aliases): Don't try to free file_name
	if it's NULL (because we ran out of memory).  From Bruno Haible.

2000-03-05  Jim Meyering  <meyering@lucent.com>

	* localcharset.c ("path-concat.h"): Include.
	(get_charset_aliases): Use path_concat instead of ANSI string
	concatenation.

	* unicodeio.h (PARAMS): Define.
	Use it to guard prototype.

2000-03-04  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (install-exec-local): Create $(libdir) before installing
	into it.
	(uninstall-local): Uncomment this rule so `make distcheck' works
	once again.

	* unicodeio.c (<errno.h>): Include it.
	(errno): Declare if not defined.

	* localcharset.c: Add Bruno's comment justifying use of volatile.

	* config.charset: New version, incorporating remarks from a linux
	i18n mailing list.  From Bruno Haible.

2000-03-02  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (EXTRA_DIST): Add config.charset.

2000-03-01  Jim Meyering  <meyering@lucent.com>

	* localcharset.c: Guard some #includes with `#if HAVE_...'.
	* unicodeio.c: Likewise.

2000-02-02  Bruno Haible  <haible@clisp.cons.org>

	* config.charset: New file.
	* localcharset.c: New file.
	* unicodeio.h, unicodeio.c: New files.
	* Makefile.am (DEFS): Add -DLIBDIR=...
	(libfetish_a_SOURCES): Add localcharset.c and unicodeio.c.
	(noinst_HEADERS): Add unicodeio.h.
	(all-local, install-exec-local, charset.alias): New targets.

2000-02-28  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c (ALERT_CHAR): New macro.
	(quotearg_buffer_restyled): Use it.

2000-02-27  Jim Meyering  <meyering@lucent.com>

	* strtoumax.c: Fix typo in decl of strtoul: s/long long/long/.
	Guard declaration of strtoull also with `&& HAVE_UNSIGNED_LONG_LONG'.

	* backupfile.c: Guard inclusion of stdlib.h with `#if HAVE_STDLIB_H',
	not `#if STDC_HEADERS'.
	Declare malloc if needed.

	* backupfile.c: Use `#if !HAVE_DECL...' instead of `#ifndef HAVE_DECL..'
	now that autoconf always defines the HAVE_DECL_ symbols.
	* human.c: Likewise.
	* same.c: Likewise.
	* strtoumax.c: Likewise.

	* backupfile.c: Arrange for cpp to fail if the configure-time
	declaration check was not run.
	* hash.c: Likewise.
	* human.c: Likewise.
	* same.c: Likewise.
	* strtoumax.c: Likewise.

	* userspec.c (parse_user_spec): If there is no `:' but there is a `.',
	then first look up the entire `.'-containing string as a login name.

2000-02-18  Paul Eggert  <eggert@twinsun.com>

	* getdate.y: Handle two-digit years with leading zeros correctly.
	(textint): New typedef.
	(parser_control): Member year changed from int to textint.
	All uses changed.
	(YYSTYPE): Removed; replaced by %union with int and textint members.
	(tDAY, tDAY_UNIT, tDAYZONE, tHOUR_UNIT, tID, tLOCAL_ZONE, tMERIDIAN,
	tMINUTE_UNIT, tMONTH, tMONTH_UNIT tSEC_UNIT, tSNUMBER, tUNUMBER,
	tYEAR_UNIT, tZONE, o_merid): Now of type <intval>.
	(tSNUMBER, tUNUMBER): Now of type <textintval>.
	(date, number, to_year): Use width of number in digits, not its value,
	to determine whether it's a 2-digit year, or a 2-digit time.
	(yylex): Store number of digits of numeric tokens.
	Reported by John Kendall.

	(parser_control): Changed from struct parser_control to typedef (for
	consistency).  All uses changed.

	(tID): Removed; not used.
	(yylex): Return '?' for unknown identifiers, rather than (unused) tID.

2000-02-14  Paul Eggert  <eggert@twinsun.com>

	* getpagesize.h (getpagesize): Port to VMS for Alpha;
	adapted from changes to grep getpagesize.h by Martin P.J. Zinser.

2000-02-12  Jim Meyering  <meyering@lucent.com>

	* userspec.c (ISDIGIT): Define it.
	(isdigit): Remove definition.
	(is_number): Use ISDIGIT, not isdigit.
	<libintl.h>: Include.
	(_ and N_): Define.
	(parse_user_spec): Mark translatable strings.

2000-02-10  Jim Meyering  <meyering@lucent.com>

	With these changes, nanosleep.[ch] are finally enough like the other
	lib/* replacement files to compile on a few more losing systems.

	* nanosleep.h: Don't include config.h.
	Remove prototype from declaration of nanosleep.
	(PARAMS): Remove now-unneeded definition.
	* nanosleep.c: #undef nanosleep.
	(rpl_nanosleep): Rename from nanosleep.

2000-02-03  Jim Meyering  <meyering@lucent.com>

	* readutmp.c (read_utmp): Guard with `#ifdef UTMP_NAME_FUNCTION',
	rather than with `#if HAVE_UTMPNAME'.

2000-02-01  Jim Meyering  <meyering@lucent.com>

	* readutmp.h (UT_USER): Add parens.  From Andreas Schwab.

2000-01-31  Jim Meyering  <meyering@lucent.com>

	* nanosleep.h (nanosleep): Guard declaration with
	`#if ! HAVE_DECL_NANOSLEEP'.
	Without this, OFS gets a redeclaration error for rpl_nanosleep, due to
	the declaration in that vendor's sys/timers.h.
	Reported by Christian Krackowizer.

	* quotearg.c (ISASCII): Add #undef and move definition to follow
	inclusion of wctype.h to work around Solaris 2.6 namespace pollution.
	(ISPRINT): Likewise.
	Reported by Tom Tromey.

2000-01-30  Jim Meyering  <meyering@lucent.com>

	* readutmp.c (extract_trimmed_name): Use UT_USER instead of hard-coding
	uses of ->ut_name.  The latter doesn't work with new Linux header files
	where only utmpx.ut_user is declared.

	* readutmp.h (UT_USER): Define.

2000-01-23  Jim Meyering  <meyering@lucent.com>

	* Makefile.am (libfetish_a_SOURCES): Remove explicit mention of
	obstack.c.

2000-01-22  Jim Meyering  <meyering@lucent.com>

	* strtoumax.c: [! HAVE_DECL_STRTOUL]: Declare strtoul.
	[! HAVE_DECL_STRTOULL]: Declare strtoull.
	Required for some AIX systems.  Reported by Christian Krackowizer.
	[TESTING] (main): New function.

	1997-10-17  Eli Zaretskii  <eliz@is.elta.co.il>
	* dirname.c (dir_name): Support for DOS-style file names with drive
	letters.

	* quotearg.c [HAVE_WCTYPE_H]: Include <wctype.h> for decl of iswprint.

	* strverscmp.c (ISDIGIT): Define.
	(strverscmp): Use ISDIGIT, not isdigit.

2000-01-17  Paul Eggert  <eggert@twinsun.com>

	* nanosleep.c (nanosleep):
	Don't use SA_INTERRUPT to decide whether to call sigaction, as
	POSIX.1 doesn't require SA_INTERRUPT and some systems
	(e.g. Solaris 7) don't define it.  Use SA_NOCLDSTOP instead;
	it's been part of POSIX.1 since day 1 (in 1988).

2000-01-17  Jim Meyering  <meyering@lucent.com>

	* interlock: Remove unused file.  Reported by FranÃ§ois Pinard.

2000-01-16  Paul Eggert  <eggert@twinsun.com>

	* quotearg.c (quotearg_buffer_restyled): Do not quote
	alert, backslash, formfeed, and vertical tab unnecessarily in
	shell quoting style.


Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006
Free Software Foundation, Inc.
Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are preserved.
