Legal Issues about Contributing Code to GNU	last updated 1 Jul 2007

Project GNU has to be careful to obey copyright laws, even though we
don't recognize them as a moral authority, because we and our users
are in the public eye.

This means that if you want to contribute software, you have to do
something to give us legal permission to use it.  There are four ways
this can be done:

* Assign the copyright to the Free Software Foundation.
This is what we prefer because it allows us to use the copyright law
to prevent others from hoarding modified versions of the program.

* Keep the copyright yourself and give us a suitable nonexclusive
license.  It will then be up to you to prevent any unauthorized
hoarding of modified versions; we will be unable to act.  (This
alternative is impractical for us if the use for your work is to be
merged into a preexisting GNU program.)

* Keep the copyright and release the program yourself under the GNU
GPL.  (This alternative too is impractical for contributions to a
preexisting GNU program.)

* Put the code in the public domain.  Then there is nothing to stop
restriction of modified versions, but we can still use the program in
GNU.

Most of these alternatives require a signed piece of paper to make
them happen.

* Assigning copyright.

Assigning the copyright means signing a contract that makes the Free
Software Foundation the "owner" of the program according to the law.
As the copyright holder, the Foundation can sue anyone who tries to
distribute the program as a proprietary product.  We are willing to
keep your name on the program as the author for as long as the program
remains recognizably distinct.  ("Owner" is in quotes to show that we
don't in general believe in this kind of ownership.  We think it is
legitimate to use this power to defend others' freedom, given that the
power exists, but that doesn't justify using this power to deny
others the freedom they should have.)

The assignment contract commits the foundation to setting distribution
terms that permit free redistribution.

We may not want to do the work of starting to distribute a program
right away.  But you can distribute it right away if you want: just
please first attach our standard copyleft notice to the files.  (Ask
for our advice on how to do this.)

The assignment contract we normally use has a clause that permits you
to use your code in proprietary programs, on 30 days' notice.  (The 30
days' notice is there because, through a legal technicality, it would
improve our position in a suit against anyone making a proprietary
version.)  Although we believe that proprietary software is wrong, we
include this clause because it would be ungrateful to ask you to limit
yourself, given that you're giving us a gift in the first place.

You don't need to invoke this clause in order to distribute copies as
free software under the GNU GPL, since everyone is allowed to do that.

* Keeping the copyright.

Keeping the copyright and giving the Free Software Foundation a
nonexclusive license also requires signing a contract.  The license we
need permits us to add our usual distribution terms; it recognizes
possession of a copy with our distribution terms accurately stated as
licensing anyone to redistribute on those terms.  However, if someone
violates these terms--for example, if he uses the code in a
proprietary product in violation of the GPL--we cannot enforce the
license against him.  You would have to do that, and if you don't, he
would get away with the violation.

* Releasing it yourself.

You can release a program yourself under a copyleft license such as
the GNU GPL.  (In order to accept the program as GNU software, we
would have to be happy with your choice of license.)  This does not
require a contract between you and the FSF, but we would appreciate
having a signed piece of paper to confirm your decision.

As in the previous option, only you will be able to enforce the license
against violators.  The FSF will be unable to act.

* Public domain.

If you put the program in the public domain, we prefer to have a signed
piece of paper--a disclaimer of rights--from you confirming this.  If the
program is not very important, we can do without one; the worst that could
happen is that we might some day be forced to stop using it.

The law says that anyone can copyright a modified version of the public
domain work.  (This doesn't restrict the original, which remains in the
public domain; only the changes are copyrighted.)  If we make extensive
changes, we will probably do this and add our usual copyleft.  If we make
small changes, we will leave the version we distribute in the public
domain.

* What about your employer?

If you are employed to do programming, or have made an agreement with your
employer that says it owns programs you write, we need a signed piece of
paper from your employer disclaiming rights to the program.  It should be
signed by a vice president or general manager of the company.  If you
can't get at them, it is almost as good to find someone who signs licenses
for software that is purchased.  Here is a sample wording:

  Digital Stimulation Corporation hereby disclaims all copyright interest
  in the program "seduce.el" (a program to direct assemblers to make passes
  at compilers under GNU Emacs) written by Hugh Heffner.

  <signature of Ty Coon>, 1 April 1987
  Ty Coon, President of Vice, Digital Stimulation Corp.

The description of what the program does is just to make it clearer
what the disclaimer covers.

If what you did was change an existing program, it should say this:

  ...in the changes and enhancements made by Hugh Heffner to the
  program "seduce.el".

* Did anyone else contribute?

If someone else contributed more than a few lines here or there to the
program, then that person too is an author, and that person too needs to
sign papers just as you do.  So may that person's employer.  However, if
his contribution is just a fraction of the whole work, it is satisfactory
if he disclaims his own rights, even if you are assigning yours.  (If just
the minor contributors' work goes in the public domain, that doesn't leave
much of a loophole for proprietary software.)

If you incorporated packages which you found floating around as "public
domain", we might still want to track down their authors, to get
disclaimers to reassure us that they really are in the public domain.  So
please keep track of what these packages are and who wrote them.

* A reminder:

In working on a free software package, DO NOT study and follow any
non-free source code that might have any bearing on the project.
Don't refer to non-free source code at all, unless you are forced to
for non-GNU reasons.

Especially, if you are working on a replacement for a particular
non-free program, DO NOT refer to the source for that program
(supposing you have it).

It is not considered a serious problem if you have read non-free
source code in the past for other purposes, provided you don't copy
anything in particular from it.  But referring to it while you do the
work could cause legal problems later for the users of your work.

